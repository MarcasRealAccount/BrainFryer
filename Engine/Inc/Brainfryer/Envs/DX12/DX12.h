#pragma once

#include "Brainfryer/Utils/Core.h"
#include "dxgi/DXGI1_6.h"

namespace Brainfryer::DX12
{
	extern "C"
	{
		enum D3D_DRIVER_TYPE
		{
			D3D_DRIVER_TYPE_UNKNOWN   = 0,
			D3D_DRIVER_TYPE_HARDWARE  = (D3D_DRIVER_TYPE_UNKNOWN + 1),
			D3D_DRIVER_TYPE_REFERENCE = (D3D_DRIVER_TYPE_HARDWARE + 1),
			D3D_DRIVER_TYPE_NULL      = (D3D_DRIVER_TYPE_REFERENCE + 1),
			D3D_DRIVER_TYPE_SOFTWARE  = (D3D_DRIVER_TYPE_NULL + 1),
			D3D_DRIVER_TYPE_WARP      = (D3D_DRIVER_TYPE_SOFTWARE + 1)
		};

		enum D3D_FEATURE_LEVEL
		{
			D3D_FEATURE_LEVEL_1_0_CORE = 0x1000,
			D3D_FEATURE_LEVEL_9_1      = 0x9100,
			D3D_FEATURE_LEVEL_9_2      = 0x9200,
			D3D_FEATURE_LEVEL_9_3      = 0x9300,
			D3D_FEATURE_LEVEL_10_0     = 0xa000,
			D3D_FEATURE_LEVEL_10_1     = 0xa100,
			D3D_FEATURE_LEVEL_11_0     = 0xb000,
			D3D_FEATURE_LEVEL_11_1     = 0xb100,
			D3D_FEATURE_LEVEL_12_0     = 0xc000,
			D3D_FEATURE_LEVEL_12_1     = 0xc100,
			D3D_FEATURE_LEVEL_12_2     = 0xc200
		};

		static constexpr UINT D3D_FL9_1_REQ_TEXTURE1D_U_DIMENSION        = 2048;
		static constexpr UINT D3D_FL9_3_REQ_TEXTURE1D_U_DIMENSION        = 4096;
		static constexpr UINT D3D_FL9_1_REQ_TEXTURE2D_U_OR_V_DIMENSION   = 2048;
		static constexpr UINT D3D_FL9_3_REQ_TEXTURE2D_U_OR_V_DIMENSION   = 4096;
		static constexpr UINT D3D_FL9_1_REQ_TEXTURECUBE_DIMENSION        = 512;
		static constexpr UINT D3D_FL9_3_REQ_TEXTURECUBE_DIMENSION        = 4096;
		static constexpr UINT D3D_FL9_1_REQ_TEXTURE3D_U_V_OR_W_DIMENSION = 256;
		static constexpr UINT D3D_FL9_1_DEFAULT_MAX_ANISOTROPY           = 2;
		static constexpr UINT D3D_FL9_1_IA_PRIMITIVE_MAX_COUNT           = 65535;
		static constexpr UINT D3D_FL9_2_IA_PRIMITIVE_MAX_COUNT           = 1048575;
		static constexpr UINT D3D_FL9_1_SIMULTANEOUS_RENDER_TARGET_COUNT = 1;
		static constexpr UINT D3D_FL9_3_SIMULTANEOUS_RENDER_TARGET_COUNT = 4;
		static constexpr UINT D3D_FL9_1_MAX_TEXTURE_REPEAT               = 128;
		static constexpr UINT D3D_FL9_2_MAX_TEXTURE_REPEAT               = 2048;
		static constexpr UINT D3D_FL9_3_MAX_TEXTURE_REPEAT               = 8192;

		enum D3D_PRIMITIVE_TOPOLOGY
		{
			D3D_PRIMITIVE_TOPOLOGY_UNDEFINED                    = 0,
			D3D_PRIMITIVE_TOPOLOGY_POINTLIST                    = 1,
			D3D_PRIMITIVE_TOPOLOGY_LINELIST                     = 2,
			D3D_PRIMITIVE_TOPOLOGY_LINESTRIP                    = 3,
			D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST                 = 4,
			D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP                = 5,
			D3D_PRIMITIVE_TOPOLOGY_LINELIST_ADJ                 = 10,
			D3D_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ                = 11,
			D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ             = 12,
			D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ            = 13,
			D3D_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST    = 33,
			D3D_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST    = 34,
			D3D_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST    = 35,
			D3D_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST    = 36,
			D3D_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST    = 37,
			D3D_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST    = 38,
			D3D_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST    = 39,
			D3D_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST    = 40,
			D3D_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST    = 41,
			D3D_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST   = 42,
			D3D_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST   = 43,
			D3D_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST   = 44,
			D3D_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST   = 45,
			D3D_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST   = 46,
			D3D_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST   = 47,
			D3D_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST   = 48,
			D3D_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST   = 49,
			D3D_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST   = 50,
			D3D_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST   = 51,
			D3D_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST   = 52,
			D3D_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST   = 53,
			D3D_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST   = 54,
			D3D_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST   = 55,
			D3D_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST   = 56,
			D3D_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST   = 57,
			D3D_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST   = 58,
			D3D_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST   = 59,
			D3D_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST   = 60,
			D3D_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST   = 61,
			D3D_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST   = 62,
			D3D_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST   = 63,
			D3D_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST   = 64,
			D3D10_PRIMITIVE_TOPOLOGY_UNDEFINED                  = D3D_PRIMITIVE_TOPOLOGY_UNDEFINED,
			D3D10_PRIMITIVE_TOPOLOGY_POINTLIST                  = D3D_PRIMITIVE_TOPOLOGY_POINTLIST,
			D3D10_PRIMITIVE_TOPOLOGY_LINELIST                   = D3D_PRIMITIVE_TOPOLOGY_LINELIST,
			D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP                  = D3D_PRIMITIVE_TOPOLOGY_LINESTRIP,
			D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST               = D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST,
			D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP              = D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP,
			D3D10_PRIMITIVE_TOPOLOGY_LINELIST_ADJ               = D3D_PRIMITIVE_TOPOLOGY_LINELIST_ADJ,
			D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ              = D3D_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ,
			D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ           = D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ,
			D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ          = D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ,
			D3D11_PRIMITIVE_TOPOLOGY_UNDEFINED                  = D3D_PRIMITIVE_TOPOLOGY_UNDEFINED,
			D3D11_PRIMITIVE_TOPOLOGY_POINTLIST                  = D3D_PRIMITIVE_TOPOLOGY_POINTLIST,
			D3D11_PRIMITIVE_TOPOLOGY_LINELIST                   = D3D_PRIMITIVE_TOPOLOGY_LINELIST,
			D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP                  = D3D_PRIMITIVE_TOPOLOGY_LINESTRIP,
			D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST               = D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST,
			D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP              = D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP,
			D3D11_PRIMITIVE_TOPOLOGY_LINELIST_ADJ               = D3D_PRIMITIVE_TOPOLOGY_LINELIST_ADJ,
			D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ              = D3D_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ,
			D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ           = D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ,
			D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ          = D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ,
			D3D11_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST,
			D3D11_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST
		};

		enum D3D_PRIMITIVE
		{
			D3D_PRIMITIVE_UNDEFINED                = 0,
			D3D_PRIMITIVE_POINT                    = 1,
			D3D_PRIMITIVE_LINE                     = 2,
			D3D_PRIMITIVE_TRIANGLE                 = 3,
			D3D_PRIMITIVE_LINE_ADJ                 = 6,
			D3D_PRIMITIVE_TRIANGLE_ADJ             = 7,
			D3D_PRIMITIVE_1_CONTROL_POINT_PATCH    = 8,
			D3D_PRIMITIVE_2_CONTROL_POINT_PATCH    = 9,
			D3D_PRIMITIVE_3_CONTROL_POINT_PATCH    = 10,
			D3D_PRIMITIVE_4_CONTROL_POINT_PATCH    = 11,
			D3D_PRIMITIVE_5_CONTROL_POINT_PATCH    = 12,
			D3D_PRIMITIVE_6_CONTROL_POINT_PATCH    = 13,
			D3D_PRIMITIVE_7_CONTROL_POINT_PATCH    = 14,
			D3D_PRIMITIVE_8_CONTROL_POINT_PATCH    = 15,
			D3D_PRIMITIVE_9_CONTROL_POINT_PATCH    = 16,
			D3D_PRIMITIVE_10_CONTROL_POINT_PATCH   = 17,
			D3D_PRIMITIVE_11_CONTROL_POINT_PATCH   = 18,
			D3D_PRIMITIVE_12_CONTROL_POINT_PATCH   = 19,
			D3D_PRIMITIVE_13_CONTROL_POINT_PATCH   = 20,
			D3D_PRIMITIVE_14_CONTROL_POINT_PATCH   = 21,
			D3D_PRIMITIVE_15_CONTROL_POINT_PATCH   = 22,
			D3D_PRIMITIVE_16_CONTROL_POINT_PATCH   = 23,
			D3D_PRIMITIVE_17_CONTROL_POINT_PATCH   = 24,
			D3D_PRIMITIVE_18_CONTROL_POINT_PATCH   = 25,
			D3D_PRIMITIVE_19_CONTROL_POINT_PATCH   = 26,
			D3D_PRIMITIVE_20_CONTROL_POINT_PATCH   = 27,
			D3D_PRIMITIVE_21_CONTROL_POINT_PATCH   = 28,
			D3D_PRIMITIVE_22_CONTROL_POINT_PATCH   = 29,
			D3D_PRIMITIVE_23_CONTROL_POINT_PATCH   = 30,
			D3D_PRIMITIVE_24_CONTROL_POINT_PATCH   = 31,
			D3D_PRIMITIVE_25_CONTROL_POINT_PATCH   = 32,
			D3D_PRIMITIVE_26_CONTROL_POINT_PATCH   = 33,
			D3D_PRIMITIVE_27_CONTROL_POINT_PATCH   = 34,
			D3D_PRIMITIVE_28_CONTROL_POINT_PATCH   = 35,
			D3D_PRIMITIVE_29_CONTROL_POINT_PATCH   = 36,
			D3D_PRIMITIVE_30_CONTROL_POINT_PATCH   = 37,
			D3D_PRIMITIVE_31_CONTROL_POINT_PATCH   = 38,
			D3D_PRIMITIVE_32_CONTROL_POINT_PATCH   = 39,
			D3D10_PRIMITIVE_UNDEFINED              = D3D_PRIMITIVE_UNDEFINED,
			D3D10_PRIMITIVE_POINT                  = D3D_PRIMITIVE_POINT,
			D3D10_PRIMITIVE_LINE                   = D3D_PRIMITIVE_LINE,
			D3D10_PRIMITIVE_TRIANGLE               = D3D_PRIMITIVE_TRIANGLE,
			D3D10_PRIMITIVE_LINE_ADJ               = D3D_PRIMITIVE_LINE_ADJ,
			D3D10_PRIMITIVE_TRIANGLE_ADJ           = D3D_PRIMITIVE_TRIANGLE_ADJ,
			D3D11_PRIMITIVE_UNDEFINED              = D3D_PRIMITIVE_UNDEFINED,
			D3D11_PRIMITIVE_POINT                  = D3D_PRIMITIVE_POINT,
			D3D11_PRIMITIVE_LINE                   = D3D_PRIMITIVE_LINE,
			D3D11_PRIMITIVE_TRIANGLE               = D3D_PRIMITIVE_TRIANGLE,
			D3D11_PRIMITIVE_LINE_ADJ               = D3D_PRIMITIVE_LINE_ADJ,
			D3D11_PRIMITIVE_TRIANGLE_ADJ           = D3D_PRIMITIVE_TRIANGLE_ADJ,
			D3D11_PRIMITIVE_1_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_1_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_2_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_2_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_3_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_3_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_4_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_4_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_5_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_5_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_6_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_6_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_7_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_7_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_8_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_8_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_9_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_9_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_10_CONTROL_POINT_PATCH = D3D_PRIMITIVE_10_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_11_CONTROL_POINT_PATCH = D3D_PRIMITIVE_11_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_12_CONTROL_POINT_PATCH = D3D_PRIMITIVE_12_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_13_CONTROL_POINT_PATCH = D3D_PRIMITIVE_13_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_14_CONTROL_POINT_PATCH = D3D_PRIMITIVE_14_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_15_CONTROL_POINT_PATCH = D3D_PRIMITIVE_15_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_16_CONTROL_POINT_PATCH = D3D_PRIMITIVE_16_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_17_CONTROL_POINT_PATCH = D3D_PRIMITIVE_17_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_18_CONTROL_POINT_PATCH = D3D_PRIMITIVE_18_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_19_CONTROL_POINT_PATCH = D3D_PRIMITIVE_19_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_20_CONTROL_POINT_PATCH = D3D_PRIMITIVE_20_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_21_CONTROL_POINT_PATCH = D3D_PRIMITIVE_21_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_22_CONTROL_POINT_PATCH = D3D_PRIMITIVE_22_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_23_CONTROL_POINT_PATCH = D3D_PRIMITIVE_23_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_24_CONTROL_POINT_PATCH = D3D_PRIMITIVE_24_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_25_CONTROL_POINT_PATCH = D3D_PRIMITIVE_25_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_26_CONTROL_POINT_PATCH = D3D_PRIMITIVE_26_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_27_CONTROL_POINT_PATCH = D3D_PRIMITIVE_27_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_28_CONTROL_POINT_PATCH = D3D_PRIMITIVE_28_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_29_CONTROL_POINT_PATCH = D3D_PRIMITIVE_29_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_30_CONTROL_POINT_PATCH = D3D_PRIMITIVE_30_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_31_CONTROL_POINT_PATCH = D3D_PRIMITIVE_31_CONTROL_POINT_PATCH,
			D3D11_PRIMITIVE_32_CONTROL_POINT_PATCH = D3D_PRIMITIVE_32_CONTROL_POINT_PATCH
		};

		enum D3D_SRV_DIMENSION
		{
			D3D_SRV_DIMENSION_UNKNOWN              = 0,
			D3D_SRV_DIMENSION_BUFFER               = 1,
			D3D_SRV_DIMENSION_TEXTURE1D            = 2,
			D3D_SRV_DIMENSION_TEXTURE1DARRAY       = 3,
			D3D_SRV_DIMENSION_TEXTURE2D            = 4,
			D3D_SRV_DIMENSION_TEXTURE2DARRAY       = 5,
			D3D_SRV_DIMENSION_TEXTURE2DMS          = 6,
			D3D_SRV_DIMENSION_TEXTURE2DMSARRAY     = 7,
			D3D_SRV_DIMENSION_TEXTURE3D            = 8,
			D3D_SRV_DIMENSION_TEXTURECUBE          = 9,
			D3D_SRV_DIMENSION_TEXTURECUBEARRAY     = 10,
			D3D_SRV_DIMENSION_BUFFEREX             = 11,
			D3D10_SRV_DIMENSION_UNKNOWN            = D3D_SRV_DIMENSION_UNKNOWN,
			D3D10_SRV_DIMENSION_BUFFER             = D3D_SRV_DIMENSION_BUFFER,
			D3D10_SRV_DIMENSION_TEXTURE1D          = D3D_SRV_DIMENSION_TEXTURE1D,
			D3D10_SRV_DIMENSION_TEXTURE1DARRAY     = D3D_SRV_DIMENSION_TEXTURE1DARRAY,
			D3D10_SRV_DIMENSION_TEXTURE2D          = D3D_SRV_DIMENSION_TEXTURE2D,
			D3D10_SRV_DIMENSION_TEXTURE2DARRAY     = D3D_SRV_DIMENSION_TEXTURE2DARRAY,
			D3D10_SRV_DIMENSION_TEXTURE2DMS        = D3D_SRV_DIMENSION_TEXTURE2DMS,
			D3D10_SRV_DIMENSION_TEXTURE2DMSARRAY   = D3D_SRV_DIMENSION_TEXTURE2DMSARRAY,
			D3D10_SRV_DIMENSION_TEXTURE3D          = D3D_SRV_DIMENSION_TEXTURE3D,
			D3D10_SRV_DIMENSION_TEXTURECUBE        = D3D_SRV_DIMENSION_TEXTURECUBE,
			D3D10_1_SRV_DIMENSION_UNKNOWN          = D3D_SRV_DIMENSION_UNKNOWN,
			D3D10_1_SRV_DIMENSION_BUFFER           = D3D_SRV_DIMENSION_BUFFER,
			D3D10_1_SRV_DIMENSION_TEXTURE1D        = D3D_SRV_DIMENSION_TEXTURE1D,
			D3D10_1_SRV_DIMENSION_TEXTURE1DARRAY   = D3D_SRV_DIMENSION_TEXTURE1DARRAY,
			D3D10_1_SRV_DIMENSION_TEXTURE2D        = D3D_SRV_DIMENSION_TEXTURE2D,
			D3D10_1_SRV_DIMENSION_TEXTURE2DARRAY   = D3D_SRV_DIMENSION_TEXTURE2DARRAY,
			D3D10_1_SRV_DIMENSION_TEXTURE2DMS      = D3D_SRV_DIMENSION_TEXTURE2DMS,
			D3D10_1_SRV_DIMENSION_TEXTURE2DMSARRAY = D3D_SRV_DIMENSION_TEXTURE2DMSARRAY,
			D3D10_1_SRV_DIMENSION_TEXTURE3D        = D3D_SRV_DIMENSION_TEXTURE3D,
			D3D10_1_SRV_DIMENSION_TEXTURECUBE      = D3D_SRV_DIMENSION_TEXTURECUBE,
			D3D10_1_SRV_DIMENSION_TEXTURECUBEARRAY = D3D_SRV_DIMENSION_TEXTURECUBEARRAY,
			D3D11_SRV_DIMENSION_UNKNOWN            = D3D_SRV_DIMENSION_UNKNOWN,
			D3D11_SRV_DIMENSION_BUFFER             = D3D_SRV_DIMENSION_BUFFER,
			D3D11_SRV_DIMENSION_TEXTURE1D          = D3D_SRV_DIMENSION_TEXTURE1D,
			D3D11_SRV_DIMENSION_TEXTURE1DARRAY     = D3D_SRV_DIMENSION_TEXTURE1DARRAY,
			D3D11_SRV_DIMENSION_TEXTURE2D          = D3D_SRV_DIMENSION_TEXTURE2D,
			D3D11_SRV_DIMENSION_TEXTURE2DARRAY     = D3D_SRV_DIMENSION_TEXTURE2DARRAY,
			D3D11_SRV_DIMENSION_TEXTURE2DMS        = D3D_SRV_DIMENSION_TEXTURE2DMS,
			D3D11_SRV_DIMENSION_TEXTURE2DMSARRAY   = D3D_SRV_DIMENSION_TEXTURE2DMSARRAY,
			D3D11_SRV_DIMENSION_TEXTURE3D          = D3D_SRV_DIMENSION_TEXTURE3D,
			D3D11_SRV_DIMENSION_TEXTURECUBE        = D3D_SRV_DIMENSION_TEXTURECUBE,
			D3D11_SRV_DIMENSION_TEXTURECUBEARRAY   = D3D_SRV_DIMENSION_TEXTURECUBEARRAY,
			D3D11_SRV_DIMENSION_BUFFEREX           = D3D_SRV_DIMENSION_BUFFEREX
		};

		static constexpr UINT D3D_SHADER_FEATURE_DOUBLES                                                        = 0x00001;
		static constexpr UINT D3D_SHADER_FEATURE_COMPUTE_SHADERS_PLUS_RAW_AND_STRUCTURED_BUFFERS_VIA_SHADER_4_X = 0x00002;
		static constexpr UINT D3D_SHADER_FEATURE_UAVS_AT_EVERY_STAGE                                            = 0x00004;
		static constexpr UINT D3D_SHADER_FEATURE_64_UAVS                                                        = 0x00008;
		static constexpr UINT D3D_SHADER_FEATURE_MINIMUM_PRECISION                                              = 0x00010;
		static constexpr UINT D3D_SHADER_FEATURE_11_1_DOUBLE_EXTENSIONS                                         = 0x00020;
		static constexpr UINT D3D_SHADER_FEATURE_11_1_SHADER_EXTENSIONS                                         = 0x00040;
		static constexpr UINT D3D_SHADER_FEATURE_LEVEL_9_COMPARISON_FILTERING                                   = 0x00080;
		static constexpr UINT D3D_SHADER_FEATURE_TILED_RESOURCES                                                = 0x00100;
		static constexpr UINT D3D_SHADER_FEATURE_STENCIL_REF                                                    = 0x00200;
		static constexpr UINT D3D_SHADER_FEATURE_INNER_COVERAGE                                                 = 0x00400;
		static constexpr UINT D3D_SHADER_FEATURE_TYPED_UAV_LOAD_ADDITIONAL_FORMATS                              = 0x00800;
		static constexpr UINT D3D_SHADER_FEATURE_ROVS                                                           = 0x01000;
		static constexpr UINT D3D_SHADER_FEATURE_VIEWPORT_AND_RT_ARRAY_INDEX_FROM_ANY_SHADER_FEEDING_RASTERIZER = 0x02000;
		static constexpr UINT D3D_SHADER_FEATURE_WAVE_OPS                                                       = 0x04000;
		static constexpr UINT D3D_SHADER_FEATURE_INT64_OPS                                                      = 0x08000;
		static constexpr UINT D3D_SHADER_FEATURE_VIEW_ID                                                        = 0x10000;
		static constexpr UINT D3D_SHADER_FEATURE_BARYCENTRICS                                                   = 0x20000;
		static constexpr UINT D3D_SHADER_FEATURE_NATIVE_16BIT_OPS                                               = 0x40000;
		static constexpr UINT D3D_SHADER_FEATURE_SHADING_RATE                                                   = 0x80000;
		static constexpr UINT D3D_SHADER_FEATURE_RAYTRACING_TIER_1_1                                            = 0x100000;
		static constexpr UINT D3D_SHADER_FEATURE_SAMPLER_FEEDBACK                                               = 0x200000;
		static constexpr UINT D3D_SHADER_FEATURE_ATOMIC_INT64_ON_TYPED_RESOURCE                                 = 0x400000;
		static constexpr UINT D3D_SHADER_FEATURE_ATOMIC_INT64_ON_GROUP_SHARED                                   = 0x800000;
		static constexpr UINT D3D_SHADER_FEATURE_DERIVATIVES_IN_MESH_AND_AMPLIFICATION_SHADERS                  = 0x1000000;
		static constexpr UINT D3D_SHADER_FEATURE_RESOURCE_DESCRIPTOR_HEAP_INDEXING                              = 0x2000000;
		static constexpr UINT D3D_SHADER_FEATURE_SAMPLER_DESCRIPTOR_HEAP_INDEXING                               = 0x4000000;
		static constexpr UINT D3D_SHADER_FEATURE_WAVE_MMA                                                       = 0x8000000;
		static constexpr UINT D3D_SHADER_FEATURE_ATOMIC_INT64_ON_DESCRIPTOR_HEAP_RESOURCE                       = 0x10000000;

		using D3D_SHADER_MACRO = struct _D3D_SHADER_MACRO
		{
			LPCSTR Name;
			LPCSTR Definition;
		};

		MIDL_INTERFACE("8BA5FB08-5195-40e2-AC58-0D989C3A0102")
		ID3D10Blob : public IUnknown
		{
		public:
			virtual LPVOID GetBufferPointer() = 0;
			virtual SIZE_T GetBufferSize()    = 0;
		};

		using ID3DBlob = ID3D10Blob;

		using PFN_DESTRUCTION_CALLBACK = void (*)(void* pData);

		MIDL_INTERFACE("a06eb39a-50da-425b-8c31-4eecd6c270f3")
		ID3DDestructionNotifier : public IUnknown
		{
		public:
			virtual HRESULT RegisterDestructionCallback(PFN_DESTRUCTION_CALLBACK callbackFn, void* pData, UINT* pCallbackID) = 0;
			virtual HRESULT UnregisterDestructionCallback(UINT callbackID)                                                   = 0;
		};

		using D3D_INCLUDE_TYPE = enum _D3D_INCLUDE_TYPE {
			D3D_INCLUDE_LOCAL       = 0,
			D3D_INCLUDE_SYSTEM      = (D3D_INCLUDE_LOCAL + 1),
			D3D10_INCLUDE_LOCAL     = D3D_INCLUDE_LOCAL,
			D3D10_INCLUDE_SYSTEM    = D3D_INCLUDE_SYSTEM,
			D3D_INCLUDE_FORCE_DWORD = 0x7fffffff
		};

		struct DECLSPEC_NOVTABLE ID3DInclude
		{
			virtual void Open(D3D_INCLUDE_TYPE IncludeType, LPCSTR pFileName, LPCVOID pParentData, LPCVOID* ppData, UINT* pBytes) noexcept = 0;
			virtual void Close(LPCVOID pData) noexcept                                                                                     = 0;
		};

		using D3D_SHADER_VARIABLE_CLASS = enum _D3D_SHADER_VARIABLE_CLASS {
			D3D_SVC_SCALAR              = 0,
			D3D_SVC_VECTOR              = (D3D_SVC_SCALAR + 1),
			D3D_SVC_MATRIX_ROWS         = (D3D_SVC_VECTOR + 1),
			D3D_SVC_MATRIX_COLUMNS      = (D3D_SVC_MATRIX_ROWS + 1),
			D3D_SVC_OBJECT              = (D3D_SVC_MATRIX_COLUMNS + 1),
			D3D_SVC_STRUCT              = (D3D_SVC_OBJECT + 1),
			D3D_SVC_INTERFACE_CLASS     = (D3D_SVC_STRUCT + 1),
			D3D_SVC_INTERFACE_POINTER   = (D3D_SVC_INTERFACE_CLASS + 1),
			D3D10_SVC_SCALAR            = D3D_SVC_SCALAR,
			D3D10_SVC_VECTOR            = D3D_SVC_VECTOR,
			D3D10_SVC_MATRIX_ROWS       = D3D_SVC_MATRIX_ROWS,
			D3D10_SVC_MATRIX_COLUMNS    = D3D_SVC_MATRIX_COLUMNS,
			D3D10_SVC_OBJECT            = D3D_SVC_OBJECT,
			D3D10_SVC_STRUCT            = D3D_SVC_STRUCT,
			D3D11_SVC_INTERFACE_CLASS   = D3D_SVC_INTERFACE_CLASS,
			D3D11_SVC_INTERFACE_POINTER = D3D_SVC_INTERFACE_POINTER,
			D3D_SVC_FORCE_DWORD         = 0x7fffffff
		};

		using D3D_SHADER_VARIABLE_FLAGS = enum _D3D_SHADER_VARIABLE_FLAGS {
			D3D_SVF_USERPACKED            = 1,
			D3D_SVF_USED                  = 2,
			D3D_SVF_INTERFACE_POINTER     = 4,
			D3D_SVF_INTERFACE_PARAMETER   = 8,
			D3D10_SVF_USERPACKED          = D3D_SVF_USERPACKED,
			D3D10_SVF_USED                = D3D_SVF_USED,
			D3D11_SVF_INTERFACE_POINTER   = D3D_SVF_INTERFACE_POINTER,
			D3D11_SVF_INTERFACE_PARAMETER = D3D_SVF_INTERFACE_PARAMETER,
			D3D_SVF_FORCE_DWORD           = 0x7fffffff
		};

		using D3D_SHADER_VARIABLE_TYPE = enum _D3D_SHADER_VARIABLE_TYPE {
			D3D_SVT_VOID                        = 0,
			D3D_SVT_BOOL                        = 1,
			D3D_SVT_INT                         = 2,
			D3D_SVT_FLOAT                       = 3,
			D3D_SVT_STRING                      = 4,
			D3D_SVT_TEXTURE                     = 5,
			D3D_SVT_TEXTURE1D                   = 6,
			D3D_SVT_TEXTURE2D                   = 7,
			D3D_SVT_TEXTURE3D                   = 8,
			D3D_SVT_TEXTURECUBE                 = 9,
			D3D_SVT_SAMPLER                     = 10,
			D3D_SVT_SAMPLER1D                   = 11,
			D3D_SVT_SAMPLER2D                   = 12,
			D3D_SVT_SAMPLER3D                   = 13,
			D3D_SVT_SAMPLERCUBE                 = 14,
			D3D_SVT_PIXELSHADER                 = 15,
			D3D_SVT_VERTEXSHADER                = 16,
			D3D_SVT_PIXELFRAGMENT               = 17,
			D3D_SVT_VERTEXFRAGMENT              = 18,
			D3D_SVT_UINT                        = 19,
			D3D_SVT_UINT8                       = 20,
			D3D_SVT_GEOMETRYSHADER              = 21,
			D3D_SVT_RASTERIZER                  = 22,
			D3D_SVT_DEPTHSTENCIL                = 23,
			D3D_SVT_BLEND                       = 24,
			D3D_SVT_BUFFER                      = 25,
			D3D_SVT_CBUFFER                     = 26,
			D3D_SVT_TBUFFER                     = 27,
			D3D_SVT_TEXTURE1DARRAY              = 28,
			D3D_SVT_TEXTURE2DARRAY              = 29,
			D3D_SVT_RENDERTARGETVIEW            = 30,
			D3D_SVT_DEPTHSTENCILVIEW            = 31,
			D3D_SVT_TEXTURE2DMS                 = 32,
			D3D_SVT_TEXTURE2DMSARRAY            = 33,
			D3D_SVT_TEXTURECUBEARRAY            = 34,
			D3D_SVT_HULLSHADER                  = 35,
			D3D_SVT_DOMAINSHADER                = 36,
			D3D_SVT_INTERFACE_POINTER           = 37,
			D3D_SVT_COMPUTESHADER               = 38,
			D3D_SVT_DOUBLE                      = 39,
			D3D_SVT_RWTEXTURE1D                 = 40,
			D3D_SVT_RWTEXTURE1DARRAY            = 41,
			D3D_SVT_RWTEXTURE2D                 = 42,
			D3D_SVT_RWTEXTURE2DARRAY            = 43,
			D3D_SVT_RWTEXTURE3D                 = 44,
			D3D_SVT_RWBUFFER                    = 45,
			D3D_SVT_BYTEADDRESS_BUFFER          = 46,
			D3D_SVT_RWBYTEADDRESS_BUFFER        = 47,
			D3D_SVT_STRUCTURED_BUFFER           = 48,
			D3D_SVT_RWSTRUCTURED_BUFFER         = 49,
			D3D_SVT_APPEND_STRUCTURED_BUFFER    = 50,
			D3D_SVT_CONSUME_STRUCTURED_BUFFER   = 51,
			D3D_SVT_MIN8FLOAT                   = 52,
			D3D_SVT_MIN10FLOAT                  = 53,
			D3D_SVT_MIN16FLOAT                  = 54,
			D3D_SVT_MIN12INT                    = 55,
			D3D_SVT_MIN16INT                    = 56,
			D3D_SVT_MIN16UINT                   = 57,
			D3D_SVT_INT16                       = 58,
			D3D_SVT_UINT16                      = 59,
			D3D_SVT_FLOAT16                     = 60,
			D3D_SVT_INT64                       = 61,
			D3D_SVT_UINT64                      = 62,
			D3D10_SVT_VOID                      = D3D_SVT_VOID,
			D3D10_SVT_BOOL                      = D3D_SVT_BOOL,
			D3D10_SVT_INT                       = D3D_SVT_INT,
			D3D10_SVT_FLOAT                     = D3D_SVT_FLOAT,
			D3D10_SVT_STRING                    = D3D_SVT_STRING,
			D3D10_SVT_TEXTURE                   = D3D_SVT_TEXTURE,
			D3D10_SVT_TEXTURE1D                 = D3D_SVT_TEXTURE1D,
			D3D10_SVT_TEXTURE2D                 = D3D_SVT_TEXTURE2D,
			D3D10_SVT_TEXTURE3D                 = D3D_SVT_TEXTURE3D,
			D3D10_SVT_TEXTURECUBE               = D3D_SVT_TEXTURECUBE,
			D3D10_SVT_SAMPLER                   = D3D_SVT_SAMPLER,
			D3D10_SVT_SAMPLER1D                 = D3D_SVT_SAMPLER1D,
			D3D10_SVT_SAMPLER2D                 = D3D_SVT_SAMPLER2D,
			D3D10_SVT_SAMPLER3D                 = D3D_SVT_SAMPLER3D,
			D3D10_SVT_SAMPLERCUBE               = D3D_SVT_SAMPLERCUBE,
			D3D10_SVT_PIXELSHADER               = D3D_SVT_PIXELSHADER,
			D3D10_SVT_VERTEXSHADER              = D3D_SVT_VERTEXSHADER,
			D3D10_SVT_PIXELFRAGMENT             = D3D_SVT_PIXELFRAGMENT,
			D3D10_SVT_VERTEXFRAGMENT            = D3D_SVT_VERTEXFRAGMENT,
			D3D10_SVT_UINT                      = D3D_SVT_UINT,
			D3D10_SVT_UINT8                     = D3D_SVT_UINT8,
			D3D10_SVT_GEOMETRYSHADER            = D3D_SVT_GEOMETRYSHADER,
			D3D10_SVT_RASTERIZER                = D3D_SVT_RASTERIZER,
			D3D10_SVT_DEPTHSTENCIL              = D3D_SVT_DEPTHSTENCIL,
			D3D10_SVT_BLEND                     = D3D_SVT_BLEND,
			D3D10_SVT_BUFFER                    = D3D_SVT_BUFFER,
			D3D10_SVT_CBUFFER                   = D3D_SVT_CBUFFER,
			D3D10_SVT_TBUFFER                   = D3D_SVT_TBUFFER,
			D3D10_SVT_TEXTURE1DARRAY            = D3D_SVT_TEXTURE1DARRAY,
			D3D10_SVT_TEXTURE2DARRAY            = D3D_SVT_TEXTURE2DARRAY,
			D3D10_SVT_RENDERTARGETVIEW          = D3D_SVT_RENDERTARGETVIEW,
			D3D10_SVT_DEPTHSTENCILVIEW          = D3D_SVT_DEPTHSTENCILVIEW,
			D3D10_SVT_TEXTURE2DMS               = D3D_SVT_TEXTURE2DMS,
			D3D10_SVT_TEXTURE2DMSARRAY          = D3D_SVT_TEXTURE2DMSARRAY,
			D3D10_SVT_TEXTURECUBEARRAY          = D3D_SVT_TEXTURECUBEARRAY,
			D3D11_SVT_HULLSHADER                = D3D_SVT_HULLSHADER,
			D3D11_SVT_DOMAINSHADER              = D3D_SVT_DOMAINSHADER,
			D3D11_SVT_INTERFACE_POINTER         = D3D_SVT_INTERFACE_POINTER,
			D3D11_SVT_COMPUTESHADER             = D3D_SVT_COMPUTESHADER,
			D3D11_SVT_DOUBLE                    = D3D_SVT_DOUBLE,
			D3D11_SVT_RWTEXTURE1D               = D3D_SVT_RWTEXTURE1D,
			D3D11_SVT_RWTEXTURE1DARRAY          = D3D_SVT_RWTEXTURE1DARRAY,
			D3D11_SVT_RWTEXTURE2D               = D3D_SVT_RWTEXTURE2D,
			D3D11_SVT_RWTEXTURE2DARRAY          = D3D_SVT_RWTEXTURE2DARRAY,
			D3D11_SVT_RWTEXTURE3D               = D3D_SVT_RWTEXTURE3D,
			D3D11_SVT_RWBUFFER                  = D3D_SVT_RWBUFFER,
			D3D11_SVT_BYTEADDRESS_BUFFER        = D3D_SVT_BYTEADDRESS_BUFFER,
			D3D11_SVT_RWBYTEADDRESS_BUFFER      = D3D_SVT_RWBYTEADDRESS_BUFFER,
			D3D11_SVT_STRUCTURED_BUFFER         = D3D_SVT_STRUCTURED_BUFFER,
			D3D11_SVT_RWSTRUCTURED_BUFFER       = D3D_SVT_RWSTRUCTURED_BUFFER,
			D3D11_SVT_APPEND_STRUCTURED_BUFFER  = D3D_SVT_APPEND_STRUCTURED_BUFFER,
			D3D11_SVT_CONSUME_STRUCTURED_BUFFER = D3D_SVT_CONSUME_STRUCTURED_BUFFER,
			D3D_SVT_FORCE_DWORD                 = 0x7fffffff
		};

		using D3D_SHADER_INPUT_FLAGS = enum _D3D_SHADER_INPUT_FLAGS {
			D3D_SIF_USERPACKED            = 0x1,
			D3D_SIF_COMPARISON_SAMPLER    = 0x2,
			D3D_SIF_TEXTURE_COMPONENT_0   = 0x4,
			D3D_SIF_TEXTURE_COMPONENT_1   = 0x8,
			D3D_SIF_TEXTURE_COMPONENTS    = 0xc,
			D3D_SIF_UNUSED                = 0x10,
			D3D10_SIF_USERPACKED          = D3D_SIF_USERPACKED,
			D3D10_SIF_COMPARISON_SAMPLER  = D3D_SIF_COMPARISON_SAMPLER,
			D3D10_SIF_TEXTURE_COMPONENT_0 = D3D_SIF_TEXTURE_COMPONENT_0,
			D3D10_SIF_TEXTURE_COMPONENT_1 = D3D_SIF_TEXTURE_COMPONENT_1,
			D3D10_SIF_TEXTURE_COMPONENTS  = D3D_SIF_TEXTURE_COMPONENTS,
			D3D_SIF_FORCE_DWORD           = 0x7fffffff
		};

		using D3D_SHADER_INPUT_TYPE = enum _D3D_SHADER_INPUT_TYPE {
			D3D_SIT_CBUFFER                         = 0,
			D3D_SIT_TBUFFER                         = (D3D_SIT_CBUFFER + 1),
			D3D_SIT_TEXTURE                         = (D3D_SIT_TBUFFER + 1),
			D3D_SIT_SAMPLER                         = (D3D_SIT_TEXTURE + 1),
			D3D_SIT_UAV_RWTYPED                     = (D3D_SIT_SAMPLER + 1),
			D3D_SIT_STRUCTURED                      = (D3D_SIT_UAV_RWTYPED + 1),
			D3D_SIT_UAV_RWSTRUCTURED                = (D3D_SIT_STRUCTURED + 1),
			D3D_SIT_BYTEADDRESS                     = (D3D_SIT_UAV_RWSTRUCTURED + 1),
			D3D_SIT_UAV_RWBYTEADDRESS               = (D3D_SIT_BYTEADDRESS + 1),
			D3D_SIT_UAV_APPEND_STRUCTURED           = (D3D_SIT_UAV_RWBYTEADDRESS + 1),
			D3D_SIT_UAV_CONSUME_STRUCTURED          = (D3D_SIT_UAV_APPEND_STRUCTURED + 1),
			D3D_SIT_UAV_RWSTRUCTURED_WITH_COUNTER   = (D3D_SIT_UAV_CONSUME_STRUCTURED + 1),
			D3D_SIT_RTACCELERATIONSTRUCTURE         = (D3D_SIT_UAV_RWSTRUCTURED_WITH_COUNTER + 1),
			D3D_SIT_UAV_FEEDBACKTEXTURE             = (D3D_SIT_RTACCELERATIONSTRUCTURE + 1),
			D3D10_SIT_CBUFFER                       = D3D_SIT_CBUFFER,
			D3D10_SIT_TBUFFER                       = D3D_SIT_TBUFFER,
			D3D10_SIT_TEXTURE                       = D3D_SIT_TEXTURE,
			D3D10_SIT_SAMPLER                       = D3D_SIT_SAMPLER,
			D3D11_SIT_UAV_RWTYPED                   = D3D_SIT_UAV_RWTYPED,
			D3D11_SIT_STRUCTURED                    = D3D_SIT_STRUCTURED,
			D3D11_SIT_UAV_RWSTRUCTURED              = D3D_SIT_UAV_RWSTRUCTURED,
			D3D11_SIT_BYTEADDRESS                   = D3D_SIT_BYTEADDRESS,
			D3D11_SIT_UAV_RWBYTEADDRESS             = D3D_SIT_UAV_RWBYTEADDRESS,
			D3D11_SIT_UAV_APPEND_STRUCTURED         = D3D_SIT_UAV_APPEND_STRUCTURED,
			D3D11_SIT_UAV_CONSUME_STRUCTURED        = D3D_SIT_UAV_CONSUME_STRUCTURED,
			D3D11_SIT_UAV_RWSTRUCTURED_WITH_COUNTER = D3D_SIT_UAV_RWSTRUCTURED_WITH_COUNTER
		};

		using D3D_SHADER_CBUFFER_FLAGS = enum _D3D_SHADER_CBUFFER_FLAGS {
			D3D_CBF_USERPACKED   = 1,
			D3D10_CBF_USERPACKED = D3D_CBF_USERPACKED,
			D3D_CBF_FORCE_DWORD  = 0x7fffffff
		};

		using D3D_CBUFFER_TYPE = enum _D3D_CBUFFER_TYPE {
			D3D_CT_CBUFFER              = 0,
			D3D_CT_TBUFFER              = (D3D_CT_CBUFFER + 1),
			D3D_CT_INTERFACE_POINTERS   = (D3D_CT_TBUFFER + 1),
			D3D_CT_RESOURCE_BIND_INFO   = (D3D_CT_INTERFACE_POINTERS + 1),
			D3D10_CT_CBUFFER            = D3D_CT_CBUFFER,
			D3D10_CT_TBUFFER            = D3D_CT_TBUFFER,
			D3D11_CT_CBUFFER            = D3D_CT_CBUFFER,
			D3D11_CT_TBUFFER            = D3D_CT_TBUFFER,
			D3D11_CT_INTERFACE_POINTERS = D3D_CT_INTERFACE_POINTERS,
			D3D11_CT_RESOURCE_BIND_INFO = D3D_CT_RESOURCE_BIND_INFO
		};

		enum D3D_NAME
		{
			D3D_NAME_UNDEFINED                       = 0,
			D3D_NAME_POSITION                        = 1,
			D3D_NAME_CLIP_DISTANCE                   = 2,
			D3D_NAME_CULL_DISTANCE                   = 3,
			D3D_NAME_RENDER_TARGET_ARRAY_INDEX       = 4,
			D3D_NAME_VIEWPORT_ARRAY_INDEX            = 5,
			D3D_NAME_VERTEX_ID                       = 6,
			D3D_NAME_PRIMITIVE_ID                    = 7,
			D3D_NAME_INSTANCE_ID                     = 8,
			D3D_NAME_IS_FRONT_FACE                   = 9,
			D3D_NAME_SAMPLE_INDEX                    = 10,
			D3D_NAME_FINAL_QUAD_EDGE_TESSFACTOR      = 11,
			D3D_NAME_FINAL_QUAD_INSIDE_TESSFACTOR    = 12,
			D3D_NAME_FINAL_TRI_EDGE_TESSFACTOR       = 13,
			D3D_NAME_FINAL_TRI_INSIDE_TESSFACTOR     = 14,
			D3D_NAME_FINAL_LINE_DETAIL_TESSFACTOR    = 15,
			D3D_NAME_FINAL_LINE_DENSITY_TESSFACTOR   = 16,
			D3D_NAME_BARYCENTRICS                    = 23,
			D3D_NAME_SHADINGRATE                     = 24,
			D3D_NAME_CULLPRIMITIVE                   = 25,
			D3D_NAME_TARGET                          = 64,
			D3D_NAME_DEPTH                           = 65,
			D3D_NAME_COVERAGE                        = 66,
			D3D_NAME_DEPTH_GREATER_EQUAL             = 67,
			D3D_NAME_DEPTH_LESS_EQUAL                = 68,
			D3D_NAME_STENCIL_REF                     = 69,
			D3D_NAME_INNER_COVERAGE                  = 70,
			D3D10_NAME_UNDEFINED                     = D3D_NAME_UNDEFINED,
			D3D10_NAME_POSITION                      = D3D_NAME_POSITION,
			D3D10_NAME_CLIP_DISTANCE                 = D3D_NAME_CLIP_DISTANCE,
			D3D10_NAME_CULL_DISTANCE                 = D3D_NAME_CULL_DISTANCE,
			D3D10_NAME_RENDER_TARGET_ARRAY_INDEX     = D3D_NAME_RENDER_TARGET_ARRAY_INDEX,
			D3D10_NAME_VIEWPORT_ARRAY_INDEX          = D3D_NAME_VIEWPORT_ARRAY_INDEX,
			D3D10_NAME_VERTEX_ID                     = D3D_NAME_VERTEX_ID,
			D3D10_NAME_PRIMITIVE_ID                  = D3D_NAME_PRIMITIVE_ID,
			D3D10_NAME_INSTANCE_ID                   = D3D_NAME_INSTANCE_ID,
			D3D10_NAME_IS_FRONT_FACE                 = D3D_NAME_IS_FRONT_FACE,
			D3D10_NAME_SAMPLE_INDEX                  = D3D_NAME_SAMPLE_INDEX,
			D3D10_NAME_TARGET                        = D3D_NAME_TARGET,
			D3D10_NAME_DEPTH                         = D3D_NAME_DEPTH,
			D3D10_NAME_COVERAGE                      = D3D_NAME_COVERAGE,
			D3D11_NAME_FINAL_QUAD_EDGE_TESSFACTOR    = D3D_NAME_FINAL_QUAD_EDGE_TESSFACTOR,
			D3D11_NAME_FINAL_QUAD_INSIDE_TESSFACTOR  = D3D_NAME_FINAL_QUAD_INSIDE_TESSFACTOR,
			D3D11_NAME_FINAL_TRI_EDGE_TESSFACTOR     = D3D_NAME_FINAL_TRI_EDGE_TESSFACTOR,
			D3D11_NAME_FINAL_TRI_INSIDE_TESSFACTOR   = D3D_NAME_FINAL_TRI_INSIDE_TESSFACTOR,
			D3D11_NAME_FINAL_LINE_DETAIL_TESSFACTOR  = D3D_NAME_FINAL_LINE_DETAIL_TESSFACTOR,
			D3D11_NAME_FINAL_LINE_DENSITY_TESSFACTOR = D3D_NAME_FINAL_LINE_DENSITY_TESSFACTOR,
			D3D11_NAME_DEPTH_GREATER_EQUAL           = D3D_NAME_DEPTH_GREATER_EQUAL,
			D3D11_NAME_DEPTH_LESS_EQUAL              = D3D_NAME_DEPTH_LESS_EQUAL,
			D3D11_NAME_STENCIL_REF                   = D3D_NAME_STENCIL_REF,
			D3D11_NAME_INNER_COVERAGE                = D3D_NAME_INNER_COVERAGE,
			D3D12_NAME_BARYCENTRICS                  = D3D_NAME_BARYCENTRICS,
			D3D12_NAME_SHADINGRATE                   = D3D_NAME_SHADINGRATE,
			D3D12_NAME_CULLPRIMITIVE                 = D3D_NAME_CULLPRIMITIVE
		};

		enum D3D_RESOURCE_RETURN_TYPE
		{
			D3D_RETURN_TYPE_UNORM       = 1,
			D3D_RETURN_TYPE_SNORM       = 2,
			D3D_RETURN_TYPE_SINT        = 3,
			D3D_RETURN_TYPE_UINT        = 4,
			D3D_RETURN_TYPE_FLOAT       = 5,
			D3D_RETURN_TYPE_MIXED       = 6,
			D3D_RETURN_TYPE_DOUBLE      = 7,
			D3D_RETURN_TYPE_CONTINUED   = 8,
			D3D10_RETURN_TYPE_UNORM     = D3D_RETURN_TYPE_UNORM,
			D3D10_RETURN_TYPE_SNORM     = D3D_RETURN_TYPE_SNORM,
			D3D10_RETURN_TYPE_SINT      = D3D_RETURN_TYPE_SINT,
			D3D10_RETURN_TYPE_UINT      = D3D_RETURN_TYPE_UINT,
			D3D10_RETURN_TYPE_FLOAT     = D3D_RETURN_TYPE_FLOAT,
			D3D10_RETURN_TYPE_MIXED     = D3D_RETURN_TYPE_MIXED,
			D3D11_RETURN_TYPE_UNORM     = D3D_RETURN_TYPE_UNORM,
			D3D11_RETURN_TYPE_SNORM     = D3D_RETURN_TYPE_SNORM,
			D3D11_RETURN_TYPE_SINT      = D3D_RETURN_TYPE_SINT,
			D3D11_RETURN_TYPE_UINT      = D3D_RETURN_TYPE_UINT,
			D3D11_RETURN_TYPE_FLOAT     = D3D_RETURN_TYPE_FLOAT,
			D3D11_RETURN_TYPE_MIXED     = D3D_RETURN_TYPE_MIXED,
			D3D11_RETURN_TYPE_DOUBLE    = D3D_RETURN_TYPE_DOUBLE,
			D3D11_RETURN_TYPE_CONTINUED = D3D_RETURN_TYPE_CONTINUED
		};

		enum D3D_REGISTER_COMPONENT_TYPE
		{
			D3D_REGISTER_COMPONENT_UNKNOWN   = 0,
			D3D_REGISTER_COMPONENT_UINT32    = 1,
			D3D_REGISTER_COMPONENT_SINT32    = 2,
			D3D_REGISTER_COMPONENT_FLOAT32   = 3,
			D3D10_REGISTER_COMPONENT_UNKNOWN = D3D_REGISTER_COMPONENT_UNKNOWN,
			D3D10_REGISTER_COMPONENT_UINT32  = D3D_REGISTER_COMPONENT_UINT32,
			D3D10_REGISTER_COMPONENT_SINT32  = D3D_REGISTER_COMPONENT_SINT32,
			D3D10_REGISTER_COMPONENT_FLOAT32 = D3D_REGISTER_COMPONENT_FLOAT32
		};

		enum D3D_TESSELLATOR_DOMAIN
		{
			D3D_TESSELLATOR_DOMAIN_UNDEFINED   = 0,
			D3D_TESSELLATOR_DOMAIN_ISOLINE     = 1,
			D3D_TESSELLATOR_DOMAIN_TRI         = 2,
			D3D_TESSELLATOR_DOMAIN_QUAD        = 3,
			D3D11_TESSELLATOR_DOMAIN_UNDEFINED = D3D_TESSELLATOR_DOMAIN_UNDEFINED,
			D3D11_TESSELLATOR_DOMAIN_ISOLINE   = D3D_TESSELLATOR_DOMAIN_ISOLINE,
			D3D11_TESSELLATOR_DOMAIN_TRI       = D3D_TESSELLATOR_DOMAIN_TRI,
			D3D11_TESSELLATOR_DOMAIN_QUAD      = D3D_TESSELLATOR_DOMAIN_QUAD
		};

		enum D3D_TESSELLATOR_PARTITIONING
		{
			D3D_TESSELLATOR_PARTITIONING_UNDEFINED         = 0,
			D3D_TESSELLATOR_PARTITIONING_INTEGER           = 1,
			D3D_TESSELLATOR_PARTITIONING_POW2              = 2,
			D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_ODD    = 3,
			D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_EVEN   = 4,
			D3D11_TESSELLATOR_PARTITIONING_UNDEFINED       = D3D_TESSELLATOR_PARTITIONING_UNDEFINED,
			D3D11_TESSELLATOR_PARTITIONING_INTEGER         = D3D_TESSELLATOR_PARTITIONING_INTEGER,
			D3D11_TESSELLATOR_PARTITIONING_POW2            = D3D_TESSELLATOR_PARTITIONING_POW2,
			D3D11_TESSELLATOR_PARTITIONING_FRACTIONAL_ODD  = D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_ODD,
			D3D11_TESSELLATOR_PARTITIONING_FRACTIONAL_EVEN = D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_EVEN
		};

		enum D3D_TESSELLATOR_OUTPUT_PRIMITIVE
		{
			D3D_TESSELLATOR_OUTPUT_UNDEFINED      = 0,
			D3D_TESSELLATOR_OUTPUT_POINT          = 1,
			D3D_TESSELLATOR_OUTPUT_LINE           = 2,
			D3D_TESSELLATOR_OUTPUT_TRIANGLE_CW    = 3,
			D3D_TESSELLATOR_OUTPUT_TRIANGLE_CCW   = 4,
			D3D11_TESSELLATOR_OUTPUT_UNDEFINED    = D3D_TESSELLATOR_OUTPUT_UNDEFINED,
			D3D11_TESSELLATOR_OUTPUT_POINT        = D3D_TESSELLATOR_OUTPUT_POINT,
			D3D11_TESSELLATOR_OUTPUT_LINE         = D3D_TESSELLATOR_OUTPUT_LINE,
			D3D11_TESSELLATOR_OUTPUT_TRIANGLE_CW  = D3D_TESSELLATOR_OUTPUT_TRIANGLE_CW,
			D3D11_TESSELLATOR_OUTPUT_TRIANGLE_CCW = D3D_TESSELLATOR_OUTPUT_TRIANGLE_CCW
		};

		enum D3D_MIN_PRECISION
		{
			D3D_MIN_PRECISION_DEFAULT   = 0,
			D3D_MIN_PRECISION_FLOAT_16  = 1,
			D3D_MIN_PRECISION_FLOAT_2_8 = 2,
			D3D_MIN_PRECISION_RESERVED  = 3,
			D3D_MIN_PRECISION_SINT_16   = 4,
			D3D_MIN_PRECISION_UINT_16   = 5,
			D3D_MIN_PRECISION_ANY_16    = 0xf0,
			D3D_MIN_PRECISION_ANY_10    = 0xf1
		};

		enum D3D_INTERPOLATION_MODE
		{
			D3D_INTERPOLATION_UNDEFINED                     = 0,
			D3D_INTERPOLATION_CONSTANT                      = 1,
			D3D_INTERPOLATION_LINEAR                        = 2,
			D3D_INTERPOLATION_LINEAR_CENTROID               = 3,
			D3D_INTERPOLATION_LINEAR_NOPERSPECTIVE          = 4,
			D3D_INTERPOLATION_LINEAR_NOPERSPECTIVE_CENTROID = 5,
			D3D_INTERPOLATION_LINEAR_SAMPLE                 = 6,
			D3D_INTERPOLATION_LINEAR_NOPERSPECTIVE_SAMPLE   = 7
		};

		using D3D_PARAMETER_FLAGS = enum _D3D_PARAMETER_FLAGS {
			D3D_PF_NONE        = 0,
			D3D_PF_IN          = 0x1,
			D3D_PF_OUT         = 0x2,
			D3D_PF_FORCE_DWORD = 0x7fffffff
		};

		static constexpr UINT D3D12_16BIT_INDEX_STRIP_CUT_VALUE = 0xffff;

		static constexpr UINT D3D12_32BIT_INDEX_STRIP_CUT_VALUE = 0xffffffff;

		static constexpr UINT D3D12_8BIT_INDEX_STRIP_CUT_VALUE = 0xff;

		static constexpr UINT D3D12_APPEND_ALIGNED_ELEMENT = 0xffffffff;

		static constexpr UINT D3D12_ARRAY_AXIS_ADDRESS_RANGE_BIT_COUNT = 9;

		static constexpr UINT D3D12_CLIP_OR_CULL_DISTANCE_COUNT         = 8;
		static constexpr UINT D3D12_CLIP_OR_CULL_DISTANCE_ELEMENT_COUNT = 2;

		static constexpr INT D3D12_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT                        = 14;
		static constexpr INT D3D12_COMMONSHADER_CONSTANT_BUFFER_COMPONENTS                            = 4;
		static constexpr INT D3D12_COMMONSHADER_CONSTANT_BUFFER_COMPONENT_BIT_COUNT                   = 32;
		static constexpr INT D3D12_COMMONSHADER_CONSTANT_BUFFER_HW_SLOT_COUNT                         = 15;
		static constexpr INT D3D12_COMMONSHADER_CONSTANT_BUFFER_PARTIAL_UPDATE_EXTENTS_BYTE_ALIGNMENT = 16;
		static constexpr INT D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COMPONENTS                   = 4;
		static constexpr INT D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT                        = 15;
		static constexpr INT D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READS_PER_INST               = 1;
		static constexpr INT D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READ_PORTS                   = 1;
		static constexpr INT D3D12_COMMONSHADER_FLOWCONTROL_NESTING_LIMIT                             = 64;
		static constexpr INT D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COMPONENTS         = 4;
		static constexpr INT D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COUNT              = 1;
		static constexpr INT D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READS_PER_INST     = 1;
		static constexpr INT D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READ_PORTS         = 1;
		static constexpr INT D3D12_COMMONSHADER_IMMEDIATE_VALUE_COMPONENT_BIT_COUNT                   = 32;
		static constexpr INT D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_COMPONENTS                    = 1;
		static constexpr INT D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_COUNT                         = 128;
		static constexpr INT D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_READS_PER_INST                = 1;
		static constexpr INT D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_READ_PORTS                    = 1;
		static constexpr INT D3D12_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT                             = 128;
		static constexpr INT D3D12_COMMONSHADER_SAMPLER_REGISTER_COMPONENTS                           = 1;
		static constexpr INT D3D12_COMMONSHADER_SAMPLER_REGISTER_COUNT                                = 16;
		static constexpr INT D3D12_COMMONSHADER_SAMPLER_REGISTER_READS_PER_INST                       = 1;
		static constexpr INT D3D12_COMMONSHADER_SAMPLER_REGISTER_READ_PORTS                           = 1;
		static constexpr INT D3D12_COMMONSHADER_SAMPLER_SLOT_COUNT                                    = 16;
		static constexpr INT D3D12_COMMONSHADER_SUBROUTINE_NESTING_LIMIT                              = 32;
		static constexpr INT D3D12_COMMONSHADER_TEMP_REGISTER_COMPONENTS                              = 4;
		static constexpr INT D3D12_COMMONSHADER_TEMP_REGISTER_COMPONENT_BIT_COUNT                     = 32;
		static constexpr INT D3D12_COMMONSHADER_TEMP_REGISTER_COUNT                                   = 4096;
		static constexpr INT D3D12_COMMONSHADER_TEMP_REGISTER_READS_PER_INST                          = 3;
		static constexpr INT D3D12_COMMONSHADER_TEMP_REGISTER_READ_PORTS                              = 3;
		static constexpr INT D3D12_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MAX                          = 10;
		static constexpr INT D3D12_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MIN                          = -10;
		static constexpr INT D3D12_COMMONSHADER_TEXEL_OFFSET_MAX_NEGATIVE                             = -8;
		static constexpr INT D3D12_COMMONSHADER_TEXEL_OFFSET_MAX_POSITIVE                             = 7;

		static constexpr UINT D3D12_CONSTANT_BUFFER_DATA_PLACEMENT_ALIGNMENT = 256;

		static constexpr UINT D3D12_CS_4_X_BUCKET00_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 256;
		static constexpr UINT D3D12_CS_4_X_BUCKET00_MAX_NUM_THREADS_PER_GROUP          = 64;
		static constexpr UINT D3D12_CS_4_X_BUCKET01_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 240;
		static constexpr UINT D3D12_CS_4_X_BUCKET01_MAX_NUM_THREADS_PER_GROUP          = 68;
		static constexpr UINT D3D12_CS_4_X_BUCKET02_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 224;
		static constexpr UINT D3D12_CS_4_X_BUCKET02_MAX_NUM_THREADS_PER_GROUP          = 72;
		static constexpr UINT D3D12_CS_4_X_BUCKET03_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 208;
		static constexpr UINT D3D12_CS_4_X_BUCKET03_MAX_NUM_THREADS_PER_GROUP          = 76;
		static constexpr UINT D3D12_CS_4_X_BUCKET04_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 192;
		static constexpr UINT D3D12_CS_4_X_BUCKET04_MAX_NUM_THREADS_PER_GROUP          = 84;
		static constexpr UINT D3D12_CS_4_X_BUCKET05_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 176;
		static constexpr UINT D3D12_CS_4_X_BUCKET05_MAX_NUM_THREADS_PER_GROUP          = 92;
		static constexpr UINT D3D12_CS_4_X_BUCKET06_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 160;
		static constexpr UINT D3D12_CS_4_X_BUCKET06_MAX_NUM_THREADS_PER_GROUP          = 100;
		static constexpr UINT D3D12_CS_4_X_BUCKET07_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 144;
		static constexpr UINT D3D12_CS_4_X_BUCKET07_MAX_NUM_THREADS_PER_GROUP          = 112;
		static constexpr UINT D3D12_CS_4_X_BUCKET08_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 128;
		static constexpr UINT D3D12_CS_4_X_BUCKET08_MAX_NUM_THREADS_PER_GROUP          = 128;
		static constexpr UINT D3D12_CS_4_X_BUCKET09_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 112;
		static constexpr UINT D3D12_CS_4_X_BUCKET09_MAX_NUM_THREADS_PER_GROUP          = 144;
		static constexpr UINT D3D12_CS_4_X_BUCKET10_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 96;
		static constexpr UINT D3D12_CS_4_X_BUCKET10_MAX_NUM_THREADS_PER_GROUP          = 168;
		static constexpr UINT D3D12_CS_4_X_BUCKET11_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 80;
		static constexpr UINT D3D12_CS_4_X_BUCKET11_MAX_NUM_THREADS_PER_GROUP          = 204;
		static constexpr UINT D3D12_CS_4_X_BUCKET12_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 64;
		static constexpr UINT D3D12_CS_4_X_BUCKET12_MAX_NUM_THREADS_PER_GROUP          = 256;
		static constexpr UINT D3D12_CS_4_X_BUCKET13_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 48;
		static constexpr UINT D3D12_CS_4_X_BUCKET13_MAX_NUM_THREADS_PER_GROUP          = 340;
		static constexpr UINT D3D12_CS_4_X_BUCKET14_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 32;
		static constexpr UINT D3D12_CS_4_X_BUCKET14_MAX_NUM_THREADS_PER_GROUP          = 512;
		static constexpr UINT D3D12_CS_4_X_BUCKET15_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 16;
		static constexpr UINT D3D12_CS_4_X_BUCKET15_MAX_NUM_THREADS_PER_GROUP          = 768;
		static constexpr UINT D3D12_CS_4_X_DISPATCH_MAX_THREAD_GROUPS_IN_Z_DIMENSION   = 1;
		static constexpr UINT D3D12_CS_4_X_RAW_UAV_BYTE_ALIGNMENT                      = 256;
		static constexpr UINT D3D12_CS_4_X_THREAD_GROUP_MAX_THREADS_PER_GROUP          = 768;
		static constexpr UINT D3D12_CS_4_X_THREAD_GROUP_MAX_X                          = 768;
		static constexpr UINT D3D12_CS_4_X_THREAD_GROUP_MAX_Y                          = 768;
		static constexpr UINT D3D12_CS_4_X_UAV_REGISTER_COUNT                          = 1;
		static constexpr UINT D3D12_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION        = 65535;
		static constexpr UINT D3D12_CS_TGSM_REGISTER_COUNT                             = 8192;
		static constexpr UINT D3D12_CS_TGSM_REGISTER_READS_PER_INST                    = 1;
		static constexpr UINT D3D12_CS_TGSM_RESOURCE_REGISTER_COMPONENTS               = 1;
		static constexpr UINT D3D12_CS_TGSM_RESOURCE_REGISTER_READ_PORTS               = 1;
		static constexpr UINT D3D12_CS_THREADGROUPID_REGISTER_COMPONENTS               = 3;
		static constexpr UINT D3D12_CS_THREADGROUPID_REGISTER_COUNT                    = 1;
		static constexpr UINT D3D12_CS_THREADIDINGROUPFLATTENED_REGISTER_COMPONENTS    = 1;
		static constexpr UINT D3D12_CS_THREADIDINGROUPFLATTENED_REGISTER_COUNT         = 1;
		static constexpr UINT D3D12_CS_THREADIDINGROUP_REGISTER_COMPONENTS             = 3;
		static constexpr UINT D3D12_CS_THREADIDINGROUP_REGISTER_COUNT                  = 1;
		static constexpr UINT D3D12_CS_THREADID_REGISTER_COMPONENTS                    = 3;
		static constexpr UINT D3D12_CS_THREADID_REGISTER_COUNT                         = 1;
		static constexpr UINT D3D12_CS_THREAD_GROUP_MAX_THREADS_PER_GROUP              = 1024;
		static constexpr UINT D3D12_CS_THREAD_GROUP_MAX_X                              = 1024;
		static constexpr UINT D3D12_CS_THREAD_GROUP_MAX_Y                              = 1024;
		static constexpr UINT D3D12_CS_THREAD_GROUP_MAX_Z                              = 64;
		static constexpr UINT D3D12_CS_THREAD_GROUP_MIN_X                              = 1;
		static constexpr UINT D3D12_CS_THREAD_GROUP_MIN_Y                              = 1;
		static constexpr UINT D3D12_CS_THREAD_GROUP_MIN_Z                              = 1;
		static constexpr UINT D3D12_CS_THREAD_LOCAL_TEMP_REGISTER_POOL                 = 16384;

		static constexpr FLOAT D3D12_DEFAULT_BLEND_FACTOR_ALPHA                = 1.0f;
		static constexpr FLOAT D3D12_DEFAULT_BLEND_FACTOR_BLUE                 = 1.0f;
		static constexpr FLOAT D3D12_DEFAULT_BLEND_FACTOR_GREEN                = 1.0f;
		static constexpr FLOAT D3D12_DEFAULT_BLEND_FACTOR_RED                  = 1.0f;
		static constexpr FLOAT D3D12_DEFAULT_BORDER_COLOR_COMPONENT            = 0.0f;
		static constexpr FLOAT D3D12_DEFAULT_DEPTH_BIAS                        = 0;
		static constexpr FLOAT D3D12_DEFAULT_DEPTH_BIAS_CLAMP                  = 0.0f;
		static constexpr UINT  D3D12_DEFAULT_MAX_ANISOTROPY                    = 16;
		static constexpr FLOAT D3D12_DEFAULT_MIP_LOD_BIAS                      = 0.0f;
		static constexpr UINT  D3D12_DEFAULT_MSAA_RESOURCE_PLACEMENT_ALIGNMENT = 4194304;
		static constexpr UINT  D3D12_DEFAULT_RENDER_TARGET_ARRAY_INDEX         = 0;
		static constexpr UINT  D3D12_DEFAULT_RESOURCE_PLACEMENT_ALIGNMENT      = 65536;
		static constexpr UINT  D3D12_DEFAULT_SAMPLE_MASK                       = 0xffffffff;
		static constexpr UINT  D3D12_DEFAULT_SCISSOR_ENDX                      = 0;
		static constexpr UINT  D3D12_DEFAULT_SCISSOR_ENDY                      = 0;
		static constexpr UINT  D3D12_DEFAULT_SCISSOR_STARTX                    = 0;
		static constexpr UINT  D3D12_DEFAULT_SCISSOR_STARTY                    = 0;
		static constexpr FLOAT D3D12_DEFAULT_SLOPE_SCALED_DEPTH_BIAS           = 0.0f;
		static constexpr UINT  D3D12_DEFAULT_STENCIL_READ_MASK                 = 0xff;
		static constexpr UINT  D3D12_DEFAULT_STENCIL_REFERENCE                 = 0;
		static constexpr UINT  D3D12_DEFAULT_STENCIL_WRITE_MASK                = 0xff;
		static constexpr UINT  D3D12_DEFAULT_VIEWPORT_AND_SCISSORRECT_INDEX    = 0;

		static constexpr UINT  D3D12_DEFAULT_VIEWPORT_HEIGHT    = 0;
		static constexpr FLOAT D3D12_DEFAULT_VIEWPORT_MAX_DEPTH = 0.0f;
		static constexpr FLOAT D3D12_DEFAULT_VIEWPORT_MIN_DEPTH = 0.0f;
		static constexpr UINT  D3D12_DEFAULT_VIEWPORT_TOPLEFTX  = 0;
		static constexpr UINT  D3D12_DEFAULT_VIEWPORT_TOPLEFTY  = 0;
		static constexpr UINT  D3D12_DEFAULT_VIEWPORT_WIDTH     = 0;

		static constexpr UINT D3D12_DESCRIPTOR_RANGE_OFFSET_APPEND = 0xffffffff;

		static constexpr UINT D3D12_DRIVER_RESERVED_REGISTER_SPACE_VALUES_END   = 0xfffffff7;
		static constexpr UINT D3D12_DRIVER_RESERVED_REGISTER_SPACE_VALUES_START = 0xfffffff0;

		static constexpr UINT D3D12_DS_INPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS            = 3968;
		static constexpr UINT D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENTS           = 4;
		static constexpr UINT D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT  = 32;
		static constexpr UINT D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COUNT                = 32;
		static constexpr UINT D3D12_DS_INPUT_CONTROL_POINT_REGISTER_READS_PER_INST       = 2;
		static constexpr UINT D3D12_DS_INPUT_CONTROL_POINT_REGISTER_READ_PORTS           = 1;
		static constexpr UINT D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENTS            = 3;
		static constexpr UINT D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENT_BIT_COUNT   = 32;
		static constexpr UINT D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COUNT                 = 1;
		static constexpr UINT D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_READS_PER_INST        = 2;
		static constexpr UINT D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_READ_PORTS            = 1;
		static constexpr UINT D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENTS          = 4;
		static constexpr UINT D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT = 32;
		static constexpr UINT D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COUNT               = 32;
		static constexpr UINT D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST      = 2;
		static constexpr UINT D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_READ_PORTS          = 1;
		static constexpr UINT D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS            = 1;
		static constexpr UINT D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT   = 32;
		static constexpr UINT D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COUNT                 = 1;
		static constexpr UINT D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST        = 2;
		static constexpr UINT D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS            = 1;

		static constexpr UINT D3D12_DS_OUTPUT_REGISTER_COMPONENTS          = 4;
		static constexpr UINT D3D12_DS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT = 32;
		static constexpr UINT D3D12_DS_OUTPUT_REGISTER_COUNT               = 32;

		static constexpr DOUBLE D3D12_FLOAT16_FUSED_TOLERANCE_IN_ULP                    = 0.6;
		static constexpr FLOAT  D3D12_FLOAT32_MAX                                       = 3.402823466e+38f;
		static constexpr FLOAT  D3D12_FLOAT32_TO_INTEGER_TOLERANCE_IN_ULP               = 0.6f;
		static constexpr FLOAT  D3D12_FLOAT_TO_SRGB_EXPONENT_DENOMINATOR                = 2.4f;
		static constexpr FLOAT  D3D12_FLOAT_TO_SRGB_EXPONENT_NUMERATOR                  = 1.0f;
		static constexpr FLOAT  D3D12_FLOAT_TO_SRGB_OFFSET                              = 0.055f;
		static constexpr FLOAT  D3D12_FLOAT_TO_SRGB_SCALE_1                             = 12.92f;
		static constexpr FLOAT  D3D12_FLOAT_TO_SRGB_SCALE_2                             = 1.055f;
		static constexpr FLOAT  D3D12_FLOAT_TO_SRGB_THRESHOLD                           = 0.0031308f;
		static constexpr FLOAT  D3D12_FTOI_INSTRUCTION_MAX_INPUT                        = 2147483647.999f;
		static constexpr FLOAT  D3D12_FTOI_INSTRUCTION_MIN_INPUT                        = -2147483648.999f;
		static constexpr FLOAT  D3D12_FTOU_INSTRUCTION_MAX_INPUT                        = 4294967295.999f;
		static constexpr FLOAT  D3D12_FTOU_INSTRUCTION_MIN_INPUT                        = 0.0f;
		static constexpr UINT   D3D12_GS_INPUT_INSTANCE_ID_READS_PER_INST               = 2;
		static constexpr UINT   D3D12_GS_INPUT_INSTANCE_ID_READ_PORTS                   = 1;
		static constexpr UINT   D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENTS          = 1;
		static constexpr UINT   D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT = 32;
		static constexpr UINT   D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COUNT               = 1;
		static constexpr UINT   D3D12_GS_INPUT_PRIM_CONST_REGISTER_COMPONENTS           = 1;
		static constexpr UINT   D3D12_GS_INPUT_PRIM_CONST_REGISTER_COMPONENT_BIT_COUNT  = 32;
		static constexpr UINT   D3D12_GS_INPUT_PRIM_CONST_REGISTER_COUNT                = 1;
		static constexpr UINT   D3D12_GS_INPUT_PRIM_CONST_REGISTER_READS_PER_INST       = 2;
		static constexpr UINT   D3D12_GS_INPUT_PRIM_CONST_REGISTER_READ_PORTS           = 1;
		static constexpr UINT   D3D12_GS_INPUT_REGISTER_COMPONENTS                      = 4;
		static constexpr UINT   D3D12_GS_INPUT_REGISTER_COMPONENT_BIT_COUNT             = 32;
		static constexpr UINT   D3D12_GS_INPUT_REGISTER_COUNT                           = 32;
		static constexpr UINT   D3D12_GS_INPUT_REGISTER_READS_PER_INST                  = 2;
		static constexpr UINT   D3D12_GS_INPUT_REGISTER_READ_PORTS                      = 1;
		static constexpr UINT   D3D12_GS_INPUT_REGISTER_VERTICES                        = 32;
		static constexpr UINT   D3D12_GS_MAX_INSTANCE_COUNT                             = 32;
		static constexpr UINT   D3D12_GS_MAX_OUTPUT_VERTEX_COUNT_ACROSS_INSTANCES       = 1024;
		static constexpr UINT   D3D12_GS_OUTPUT_ELEMENTS                                = 32;
		static constexpr UINT   D3D12_GS_OUTPUT_REGISTER_COMPONENTS                     = 4;
		static constexpr UINT   D3D12_GS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT            = 32;
		static constexpr UINT   D3D12_GS_OUTPUT_REGISTER_COUNT                          = 32;

		static constexpr UINT  D3D12_HS_CONTROL_POINT_PHASE_INPUT_REGISTER_COUNT             = 32;
		static constexpr UINT  D3D12_HS_CONTROL_POINT_PHASE_OUTPUT_REGISTER_COUNT            = 32;
		static constexpr UINT  D3D12_HS_CONTROL_POINT_REGISTER_COMPONENTS                    = 4;
		static constexpr UINT  D3D12_HS_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT           = 32;
		static constexpr UINT  D3D12_HS_CONTROL_POINT_REGISTER_READS_PER_INST                = 2;
		static constexpr UINT  D3D12_HS_CONTROL_POINT_REGISTER_READ_PORTS                    = 1;
		static constexpr UINT  D3D12_HS_FORK_PHASE_INSTANCE_COUNT_UPPER_BOUND                = 0xffffffff;
		static constexpr UINT  D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENTS           = 1;
		static constexpr UINT  D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT  = 32;
		static constexpr UINT  D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COUNT                = 1;
		static constexpr UINT  D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READS_PER_INST       = 2;
		static constexpr UINT  D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READ_PORTS           = 1;
		static constexpr UINT  D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENTS           = 1;
		static constexpr UINT  D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT  = 32;
		static constexpr UINT  D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COUNT                = 1;
		static constexpr UINT  D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READS_PER_INST       = 2;
		static constexpr UINT  D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READ_PORTS           = 1;
		static constexpr UINT  D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS               = 1;
		static constexpr UINT  D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT      = 32;
		static constexpr UINT  D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COUNT                    = 1;
		static constexpr UINT  D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST           = 2;
		static constexpr UINT  D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS               = 1;
		static constexpr UINT  D3D12_HS_JOIN_PHASE_INSTANCE_COUNT_UPPER_BOUND                = 0xffffffff;
		static constexpr FLOAT D3D12_HS_MAXTESSFACTOR_LOWER_BOUND                            = 1.0f;
		static constexpr FLOAT D3D12_HS_MAXTESSFACTOR_UPPER_BOUND                            = 64.0f;
		static constexpr UINT  D3D12_HS_OUTPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS              = 3968;
		static constexpr UINT  D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENTS          = 1;
		static constexpr UINT  D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENT_BIT_COUNT = 32;
		static constexpr UINT  D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COUNT               = 1;
		static constexpr UINT  D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READS_PER_INST      = 2;
		static constexpr UINT  D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READ_PORTS          = 1;
		static constexpr UINT  D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENTS            = 4;
		static constexpr UINT  D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT   = 32;
		static constexpr UINT  D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COUNT                 = 32;
		static constexpr UINT  D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST        = 2;
		static constexpr UINT  D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READ_PORTS            = 1;
		static constexpr UINT  D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_SCALAR_COMPONENTS     = 128;

		static constexpr UINT D3D12_IA_DEFAULT_INDEX_BUFFER_OFFSET_IN_BYTES       = 0;
		static constexpr UINT D3D12_IA_DEFAULT_PRIMITIVE_TOPOLOGY                 = 0;
		static constexpr UINT D3D12_IA_DEFAULT_VERTEX_BUFFER_OFFSET_IN_BYTES      = 0;
		static constexpr UINT D3D12_IA_INDEX_INPUT_RESOURCE_SLOT_COUNT            = 1;
		static constexpr UINT D3D12_IA_INSTANCE_ID_BIT_COUNT                      = 32;
		static constexpr UINT D3D12_IA_INTEGER_ARITHMETIC_BIT_COUNT               = 32;
		static constexpr UINT D3D12_IA_PATCH_MAX_CONTROL_POINT_COUNT              = 32;
		static constexpr UINT D3D12_IA_PRIMITIVE_ID_BIT_COUNT                     = 32;
		static constexpr UINT D3D12_IA_VERTEX_ID_BIT_COUNT                        = 32;
		static constexpr UINT D3D12_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT           = 32;
		static constexpr UINT D3D12_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS = 128;
		static constexpr UINT D3D12_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT       = 32;

		static constexpr UINT D3D12_INTEGER_DIVIDE_BY_ZERO_QUOTIENT  = 0xffffffff;
		static constexpr UINT D3D12_INTEGER_DIVIDE_BY_ZERO_REMAINDER = 0xffffffff;

		static constexpr UINT D3D12_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL = 0xffffffff;
		static constexpr UINT D3D12_KEEP_UNORDERED_ACCESS_VIEWS           = 0xffffffff;

		static constexpr FLOAT D3D12_LINEAR_GAMMA  = 1.0f;
		static constexpr UINT  D3D12_MAJOR_VERSION = 12;

		static constexpr FLOAT D3D12_MAX_BORDER_COLOR_COMPONENT = 1.0f;
		static constexpr FLOAT D3D12_MAX_DEPTH                  = 1.0f;
		static constexpr UINT  D3D12_MAX_LIVE_STATIC_SAMPLERS   = 2032;

		static constexpr UINT D3D12_MAX_MAXANISOTROPY = 16;

		static constexpr UINT  D3D12_MAX_MULTISAMPLE_SAMPLE_COUNT                   = 32;
		static constexpr FLOAT D3D12_MAX_POSITION_VALUE                             = 3.402823466e+34f;
		static constexpr UINT  D3D12_MAX_ROOT_COST                                  = 64;
		static constexpr UINT  D3D12_MAX_SHADER_VISIBLE_DESCRIPTOR_HEAP_SIZE_TIER_1 = 1000000;
		static constexpr UINT  D3D12_MAX_SHADER_VISIBLE_DESCRIPTOR_HEAP_SIZE_TIER_2 = 1000000;
		static constexpr UINT  D3D12_MAX_SHADER_VISIBLE_SAMPLER_HEAP_SIZE           = 2048;
		static constexpr UINT  D3D12_MAX_TEXTURE_DIMENSION_2_TO_EXP                 = 17;
		static constexpr UINT  D3D12_MAX_VIEW_INSTANCE_COUNT                        = 4;

		static constexpr UINT D3D12_MINOR_VERSION = 0;

		static constexpr FLOAT D3D12_MIN_BORDER_COLOR_COMPONENT = 0.0f;
		static constexpr FLOAT D3D12_MIN_DEPTH                  = 0.0f;
		static constexpr UINT  D3D12_MIN_MAXANISOTROPY          = 0;

		static constexpr FLOAT D3D12_MIP_LOD_BIAS_MAX             = 15.99f;
		static constexpr FLOAT D3D12_MIP_LOD_BIAS_MIN             = -16.0f;
		static constexpr UINT  D3D12_MIP_LOD_FRACTIONAL_BIT_COUNT = 8;

		static constexpr UINT D3D12_MIP_LOD_RANGE_BIT_COUNT = 8;

		static constexpr FLOAT D3D12_MULTISAMPLE_ANTIALIAS_LINE_WIDTH           = 1.4f;
		static constexpr UINT  D3D12_NONSAMPLE_FETCH_OUT_OF_RANGE_ACCESS_RESULT = 0;

		static constexpr UINT D3D12_OS_RESERVED_REGISTER_SPACE_VALUES_END   = 0xffffffff;
		static constexpr UINT D3D12_OS_RESERVED_REGISTER_SPACE_VALUES_START = 0xfffffff8;

		static constexpr UINT D3D12_PACKED_TILE = 0xffffffff;

		static constexpr UINT D3D12_PIXEL_ADDRESS_RANGE_BIT_COUNT = 15;

		static constexpr UINT D3D12_PREVIEW_SDK_VERSION = 702;

		static constexpr UINT D3D12_PRE_SCISSOR_PIXEL_ADDRESS_RANGE_BIT_COUNT = 16;

		static constexpr UINT D3D12_PS_CS_UAV_REGISTER_COMPONENTS     = 1;
		static constexpr UINT D3D12_PS_CS_UAV_REGISTER_COUNT          = 8;
		static constexpr UINT D3D12_PS_CS_UAV_REGISTER_READS_PER_INST = 1;
		static constexpr UINT D3D12_PS_CS_UAV_REGISTER_READ_PORTS     = 1;

		static constexpr UINT D3D12_PS_FRONTFACING_DEFAULT_VALUE          = 0xffffffff;
		static constexpr UINT D3D12_PS_FRONTFACING_FALSE_VALUE            = 0;
		static constexpr UINT D3D12_PS_FRONTFACING_TRUE_VALUE             = 0xffffffff;
		static constexpr UINT D3D12_PS_INPUT_REGISTER_COMPONENTS          = 4;
		static constexpr UINT D3D12_PS_INPUT_REGISTER_COMPONENT_BIT_COUNT = 32;
		static constexpr UINT D3D12_PS_INPUT_REGISTER_COUNT               = 32;
		static constexpr UINT D3D12_PS_INPUT_REGISTER_READS_PER_INST      = 2;
		static constexpr UINT D3D12_PS_INPUT_REGISTER_READ_PORTS          = 1;

		static constexpr FLOAT D3D12_PS_LEGACY_PIXEL_CENTER_FRACTIONAL_COMPONENT = 0.0f;

		static constexpr UINT D3D12_PS_OUTPUT_DEPTH_REGISTER_COMPONENTS          = 1;
		static constexpr UINT D3D12_PS_OUTPUT_DEPTH_REGISTER_COMPONENT_BIT_COUNT = 32;
		static constexpr UINT D3D12_PS_OUTPUT_DEPTH_REGISTER_COUNT               = 1;
		static constexpr UINT D3D12_PS_OUTPUT_MASK_REGISTER_COMPONENTS           = 1;
		static constexpr UINT D3D12_PS_OUTPUT_MASK_REGISTER_COMPONENT_BIT_COUNT  = 32;
		static constexpr UINT D3D12_PS_OUTPUT_MASK_REGISTER_COUNT                = 1;
		static constexpr UINT D3D12_PS_OUTPUT_REGISTER_COMPONENTS                = 4;
		static constexpr UINT D3D12_PS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT       = 32;
		static constexpr UINT D3D12_PS_OUTPUT_REGISTER_COUNT                     = 8;

		static constexpr FLOAT D3D12_PS_PIXEL_CENTER_FRACTIONAL_COMPONENT = 0.5f;
		static constexpr UINT  D3D12_RAW_UAV_SRV_BYTE_ALIGNMENT           = 16;

		static constexpr UINT D3D12_RAYTRACING_AABB_BYTE_ALIGNMENT                                    = 8;
		static constexpr UINT D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BYTE_ALIGNMENT                  = 256;
		static constexpr UINT D3D12_RAYTRACING_INSTANCE_DESCS_BYTE_ALIGNMENT                          = 16;
		static constexpr UINT D3D12_RAYTRACING_MAX_ATTRIBUTE_SIZE_IN_BYTES                            = 32;
		static constexpr UINT D3D12_RAYTRACING_MAX_DECLARABLE_TRACE_RECURSION_DEPTH                   = 31;
		static constexpr UINT D3D12_RAYTRACING_MAX_GEOMETRIES_PER_BOTTOM_LEVEL_ACCELERATION_STRUCTURE = 16777216;
		static constexpr UINT D3D12_RAYTRACING_MAX_INSTANCES_PER_TOP_LEVEL_ACCELERATION_STRUCTURE     = 16777216;
		static constexpr UINT D3D12_RAYTRACING_MAX_PRIMITIVES_PER_BOTTOM_LEVEL_ACCELERATION_STRUCTURE = 536870912;
		static constexpr UINT D3D12_RAYTRACING_MAX_RAY_GENERATION_SHADER_THREADS                      = 1073741824;
		static constexpr UINT D3D12_RAYTRACING_MAX_SHADER_RECORD_STRIDE                               = 4096;
		static constexpr UINT D3D12_RAYTRACING_SHADER_RECORD_BYTE_ALIGNMENT                           = 32;
		static constexpr UINT D3D12_RAYTRACING_SHADER_TABLE_BYTE_ALIGNMENT                            = 64;
		static constexpr UINT D3D12_RAYTRACING_TRANSFORM3X4_BYTE_ALIGNMENT                            = 16;

		static constexpr UINT  D3D12_REQ_BLEND_OBJECT_COUNT_PER_DEVICE                = 4096;
		static constexpr UINT  D3D12_REQ_BUFFER_RESOURCE_TEXEL_COUNT_2_TO_EXP         = 27;
		static constexpr UINT  D3D12_REQ_CONSTANT_BUFFER_ELEMENT_COUNT                = 4096;
		static constexpr UINT  D3D12_REQ_DEPTH_STENCIL_OBJECT_COUNT_PER_DEVICE        = 4096;
		static constexpr UINT  D3D12_REQ_DRAWINDEXED_INDEX_COUNT_2_TO_EXP             = 32;
		static constexpr UINT  D3D12_REQ_DRAW_VERTEX_COUNT_2_TO_EXP                   = 32;
		static constexpr UINT  D3D12_REQ_FILTERING_HW_ADDRESSABLE_RESOURCE_DIMENSION  = 16384;
		static constexpr UINT  D3D12_REQ_GS_INVOCATION_32BIT_OUTPUT_COMPONENT_LIMIT   = 1024;
		static constexpr UINT  D3D12_REQ_IMMEDIATE_CONSTANT_BUFFER_ELEMENT_COUNT      = 4096;
		static constexpr UINT  D3D12_REQ_MAXANISOTROPY                                = 16;
		static constexpr UINT  D3D12_REQ_MIP_LEVELS                                   = 15;
		static constexpr UINT  D3D12_REQ_MULTI_ELEMENT_STRUCTURE_SIZE_IN_BYTES        = 2048;
		static constexpr UINT  D3D12_REQ_RASTERIZER_OBJECT_COUNT_PER_DEVICE           = 4096;
		static constexpr UINT  D3D12_REQ_RENDER_TO_BUFFER_WINDOW_WIDTH                = 16384;
		static constexpr UINT  D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_A_TERM = 128;
		static constexpr FLOAT D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_B_TERM = 0.25f;
		static constexpr UINT  D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_C_TERM = 2048;
		static constexpr UINT  D3D12_REQ_RESOURCE_VIEW_COUNT_PER_DEVICE_2_TO_EXP      = 20;
		static constexpr UINT  D3D12_REQ_SAMPLER_OBJECT_COUNT_PER_DEVICE              = 4096;
		static constexpr UINT  D3D12_REQ_SUBRESOURCES                                 = 30720;
		static constexpr UINT  D3D12_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION               = 2048;
		static constexpr UINT  D3D12_REQ_TEXTURE1D_U_DIMENSION                        = 16384;
		static constexpr UINT  D3D12_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION               = 2048;
		static constexpr UINT  D3D12_REQ_TEXTURE2D_U_OR_V_DIMENSION                   = 16384;
		static constexpr UINT  D3D12_REQ_TEXTURE3D_U_V_OR_W_DIMENSION                 = 2048;
		static constexpr UINT  D3D12_REQ_TEXTURECUBE_DIMENSION                        = 16384;

		static constexpr UINT D3D12_RESINFO_INSTRUCTION_MISSING_COMPONENT_RETVAL = 0;

		static constexpr UINT D3D12_RESOURCE_BARRIER_ALL_SUBRESOURCES = 0xffffffff;

		static constexpr UINT D3D12_RS_SET_SHADING_RATE_COMBINER_COUNT = 2;

		static constexpr UINT D3D12_SDK_VERSION = 602;

		static constexpr UINT D3D12_SHADER_IDENTIFIER_SIZE_IN_BYTES = 32;
		static constexpr UINT D3D12_SHADER_MAJOR_VERSION            = 5;
		static constexpr UINT D3D12_SHADER_MAX_INSTANCES            = 65535;
		static constexpr UINT D3D12_SHADER_MAX_INTERFACES           = 253;
		static constexpr UINT D3D12_SHADER_MAX_INTERFACE_CALL_SITES = 4096;
		static constexpr UINT D3D12_SHADER_MAX_TYPES                = 65535;
		static constexpr UINT D3D12_SHADER_MINOR_VERSION            = 1;

		static constexpr UINT D3D12_SHIFT_INSTRUCTION_PAD_VALUE             = 0;
		static constexpr UINT D3D12_SHIFT_INSTRUCTION_SHIFT_VALUE_BIT_COUNT = 5;

		static constexpr UINT D3D12_SIMULTANEOUS_RENDER_TARGET_COUNT = 8;

		static constexpr UINT D3D12_SMALL_MSAA_RESOURCE_PLACEMENT_ALIGNMENT = 65536;
		static constexpr UINT D3D12_SMALL_RESOURCE_PLACEMENT_ALIGNMENT      = 4096;

		static constexpr UINT D3D12_SO_BUFFER_MAX_STRIDE_IN_BYTES       = 2048;
		static constexpr UINT D3D12_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES = 512;
		static constexpr UINT D3D12_SO_BUFFER_SLOT_COUNT                = 4;
		static constexpr UINT D3D12_SO_DDI_REGISTER_INDEX_DENOTING_GAP  = 0xffffffff;
		static constexpr UINT D3D12_SO_NO_RASTERIZED_STREAM             = 0xffffffff;
		static constexpr UINT D3D12_SO_OUTPUT_COMPONENT_COUNT           = 128;
		static constexpr UINT D3D12_SO_STREAM_COUNT                     = 4;

		static constexpr UINT D3D12_SPEC_DATE_DAY   = 14;
		static constexpr UINT D3D12_SPEC_DATE_MONTH = 11;
		static constexpr UINT D3D12_SPEC_DATE_YEAR  = 2014;

		static constexpr DOUBLE D3D12_SPEC_VERSION                   = 1.16;
		static constexpr FLOAT  D3D12_SRGB_GAMMA                     = 2.2f;
		static constexpr FLOAT  D3D12_SRGB_TO_FLOAT_DENOMINATOR_1    = 12.92f;
		static constexpr FLOAT  D3D12_SRGB_TO_FLOAT_DENOMINATOR_2    = 1.055f;
		static constexpr FLOAT  D3D12_SRGB_TO_FLOAT_EXPONENT         = 2.4f;
		static constexpr FLOAT  D3D12_SRGB_TO_FLOAT_OFFSET           = 0.055f;
		static constexpr FLOAT  D3D12_SRGB_TO_FLOAT_THRESHOLD        = 0.04045f;
		static constexpr FLOAT  D3D12_SRGB_TO_FLOAT_TOLERANCE_IN_ULP = 0.5f;
		static constexpr UINT   D3D12_STANDARD_COMPONENT_BIT_COUNT   = 32;

		static constexpr UINT D3D12_STANDARD_COMPONENT_BIT_COUNT_DOUBLED             = 64;
		static constexpr UINT D3D12_STANDARD_MAXIMUM_ELEMENT_ALIGNMENT_BYTE_MULTIPLE = 4;
		static constexpr UINT D3D12_STANDARD_PIXEL_COMPONENT_COUNT                   = 128;
		static constexpr UINT D3D12_STANDARD_PIXEL_ELEMENT_COUNT                     = 32;
		static constexpr UINT D3D12_STANDARD_VECTOR_SIZE                             = 4;

		static constexpr UINT D3D12_STANDARD_VERTEX_ELEMENT_COUNT         = 32;
		static constexpr UINT D3D12_STANDARD_VERTEX_TOTAL_COMPONENT_COUNT = 64;

		static constexpr UINT D3D12_SUBPIXEL_FRACTIONAL_BIT_COUNT = 8;
		static constexpr UINT D3D12_SUBTEXEL_FRACTIONAL_BIT_COUNT = 8;

		static constexpr UINT D3D12_SYSTEM_RESERVED_REGISTER_SPACE_VALUES_END   = 0xffffffff;
		static constexpr UINT D3D12_SYSTEM_RESERVED_REGISTER_SPACE_VALUES_START = 0xfffffff0;

		static constexpr UINT D3D12_TESSELLATOR_MAX_EVEN_TESSELLATION_FACTOR            = 64;
		static constexpr UINT D3D12_TESSELLATOR_MAX_ISOLINE_DENSITY_TESSELLATION_FACTOR = 64;
		static constexpr UINT D3D12_TESSELLATOR_MAX_ODD_TESSELLATION_FACTOR             = 63;
		static constexpr UINT D3D12_TESSELLATOR_MAX_TESSELLATION_FACTOR                 = 64;
		static constexpr UINT D3D12_TESSELLATOR_MIN_EVEN_TESSELLATION_FACTOR            = 2;
		static constexpr UINT D3D12_TESSELLATOR_MIN_ISOLINE_DENSITY_TESSELLATION_FACTOR = 1;
		static constexpr UINT D3D12_TESSELLATOR_MIN_ODD_TESSELLATION_FACTOR             = 1;

		static constexpr UINT D3D12_TEXEL_ADDRESS_RANGE_BIT_COUNT = 16;

		static constexpr UINT D3D12_TEXTURE_DATA_PITCH_ALIGNMENT     = 256;
		static constexpr UINT D3D12_TEXTURE_DATA_PLACEMENT_ALIGNMENT = 512;

		static constexpr UINT D3D12_TILED_RESOURCE_TILE_SIZE_IN_BYTES = 65536;

		static constexpr UINT D3D12_TRACKED_WORKLOAD_MAX_INSTANCES = 32;

		static constexpr UINT D3D12_UAV_COUNTER_PLACEMENT_ALIGNMENT = 4096;
		static constexpr UINT D3D12_UAV_SLOT_COUNT                  = 64;

		static constexpr UINT D3D12_UNBOUND_MEMORY_ACCESS_RESULT = 0;

		static constexpr UINT D3D12_VIDEO_DECODE_MAX_ARGUMENTS                       = 10;
		static constexpr UINT D3D12_VIDEO_DECODE_MAX_HISTOGRAM_COMPONENTS            = 4;
		static constexpr UINT D3D12_VIDEO_DECODE_MIN_BITSTREAM_OFFSET_ALIGNMENT      = 256;
		static constexpr UINT D3D12_VIDEO_DECODE_MIN_HISTOGRAM_OFFSET_ALIGNMENT      = 256;
		static constexpr UINT D3D12_VIDEO_DECODE_STATUS_MACROBLOCKS_AFFECTED_UNKNOWN = 0xffffffff;

		static constexpr UINT D3D12_VIDEO_PROCESS_MAX_FILTERS  = 32;
		static constexpr UINT D3D12_VIDEO_PROCESS_STEREO_VIEWS = 2;

		static constexpr INT D3D12_VIEWPORT_AND_SCISSORRECT_MAX_INDEX                 = 15;
		static constexpr INT D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE = 16;
		static constexpr INT D3D12_VIEWPORT_BOUNDS_MAX                                = 32767;
		static constexpr INT D3D12_VIEWPORT_BOUNDS_MIN                                = -32768;

		static constexpr UINT D3D12_VS_INPUT_REGISTER_COMPONENTS          = 4;
		static constexpr UINT D3D12_VS_INPUT_REGISTER_COMPONENT_BIT_COUNT = 32;
		static constexpr UINT D3D12_VS_INPUT_REGISTER_COUNT               = 32;
		static constexpr UINT D3D12_VS_INPUT_REGISTER_READS_PER_INST      = 2;
		static constexpr UINT D3D12_VS_INPUT_REGISTER_READ_PORTS          = 1;

		static constexpr UINT D3D12_VS_OUTPUT_REGISTER_COMPONENTS          = 4;
		static constexpr UINT D3D12_VS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT = 32;
		static constexpr UINT D3D12_VS_OUTPUT_REGISTER_COUNT               = 32;

		static constexpr UINT D3D12_WHQL_CONTEXT_COUNT_FOR_RESOURCE_LIMIT = 10;
		static constexpr UINT D3D12_WHQL_DRAWINDEXED_INDEX_COUNT_2_TO_EXP = 25;
		static constexpr UINT D3D12_WHQL_DRAW_VERTEX_COUNT_2_TO_EXP       = 25;

		using D3D12_GPU_VIRTUAL_ADDRESS = std::uint64_t;

		enum D3D12_COMMAND_LIST_TYPE
		{
			D3D12_COMMAND_LIST_TYPE_DIRECT        = 0,
			D3D12_COMMAND_LIST_TYPE_BUNDLE        = 1,
			D3D12_COMMAND_LIST_TYPE_COMPUTE       = 2,
			D3D12_COMMAND_LIST_TYPE_COPY          = 3,
			D3D12_COMMAND_LIST_TYPE_VIDEO_DECODE  = 4,
			D3D12_COMMAND_LIST_TYPE_VIDEO_PROCESS = 5,
			D3D12_COMMAND_LIST_TYPE_VIDEO_ENCODE  = 6
		};

		enum D3D12_COMMAND_QUEUE_FLAGS
		{
			D3D12_COMMAND_QUEUE_FLAG_NONE                = 0,
			D3D12_COMMAND_QUEUE_FLAG_DISABLE_GPU_TIMEOUT = 0x1
		};

		enum D3D12_COMMAND_QUEUE_PRIORITY
		{
			D3D12_COMMAND_QUEUE_PRIORITY_NORMAL          = 0,
			D3D12_COMMAND_QUEUE_PRIORITY_HIGH            = 100,
			D3D12_COMMAND_QUEUE_PRIORITY_GLOBAL_REALTIME = 10000
		};

		struct D3D12_COMMAND_QUEUE_DESC
		{
			D3D12_COMMAND_LIST_TYPE   Type;
			INT                       Priority;
			D3D12_COMMAND_QUEUE_FLAGS Flags;
			UINT                      NodeMask;
		};

		enum D3D12_PRIMITIVE_TOPOLOGY_TYPE
		{
			D3D12_PRIMITIVE_TOPOLOGY_TYPE_UNDEFINED = 0,
			D3D12_PRIMITIVE_TOPOLOGY_TYPE_POINT     = 1,
			D3D12_PRIMITIVE_TOPOLOGY_TYPE_LINE      = 2,
			D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE  = 3,
			D3D12_PRIMITIVE_TOPOLOGY_TYPE_PATCH     = 4
		};

		enum D3D12_INPUT_CLASSIFICATION
		{
			D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA   = 0,
			D3D12_INPUT_CLASSIFICATION_PER_INSTANCE_DATA = 1
		};

		struct D3D12_INPUT_ELEMENT_DESC
		{
			LPCSTR                     SemanticName;
			UINT                       SemanticIndex;
			DXGI_FORMAT                Format;
			UINT                       InputSlot;
			UINT                       AlignedByteOffset;
			D3D12_INPUT_CLASSIFICATION InputSlotClass;
			UINT                       InstanceDataStepRate;
		};

		enum D3D12_FILL_MODE
		{
			D3D12_FILL_MODE_WIREFRAME = 2,
			D3D12_FILL_MODE_SOLID     = 3
		};

		using D3D12_PRIMITIVE_TOPOLOGY = D3D_PRIMITIVE_TOPOLOGY;

		using D3D12_PRIMITIVE = D3D_PRIMITIVE;

		enum D3D12_CULL_MODE
		{
			D3D12_CULL_MODE_NONE  = 1,
			D3D12_CULL_MODE_FRONT = 2,
			D3D12_CULL_MODE_BACK  = 3
		};

		struct D3D12_SO_DECLARATION_ENTRY
		{
			UINT   Stream;
			LPCSTR SemanticName;
			UINT   SemanticIndex;
			BYTE   StartComponent;
			BYTE   ComponentCount;
			BYTE   OutputSlot;
		};

		struct D3D12_VIEWPORT
		{
			FLOAT TopLeftX;
			FLOAT TopLeftY;
			FLOAT Width;
			FLOAT Height;
			FLOAT MinDepth;
			FLOAT MaxDepth;
		};

		using D3D12_RECT = RECT;

		struct D3D12_BOX
		{
			UINT left;
			UINT top;
			UINT front;
			UINT right;
			UINT bottom;
			UINT back;
		};

		enum D3D12_COMPARISON_FUNC
		{
			D3D12_COMPARISON_FUNC_NEVER         = 1,
			D3D12_COMPARISON_FUNC_LESS          = 2,
			D3D12_COMPARISON_FUNC_EQUAL         = 3,
			D3D12_COMPARISON_FUNC_LESS_EQUAL    = 4,
			D3D12_COMPARISON_FUNC_GREATER       = 5,
			D3D12_COMPARISON_FUNC_NOT_EQUAL     = 6,
			D3D12_COMPARISON_FUNC_GREATER_EQUAL = 7,
			D3D12_COMPARISON_FUNC_ALWAYS        = 8
		};

		enum D3D12_DEPTH_WRITE_MASK
		{
			D3D12_DEPTH_WRITE_MASK_ZERO = 0,
			D3D12_DEPTH_WRITE_MASK_ALL  = 1
		};

		enum D3D12_STENCIL_OP
		{
			D3D12_STENCIL_OP_KEEP     = 1,
			D3D12_STENCIL_OP_ZERO     = 2,
			D3D12_STENCIL_OP_REPLACE  = 3,
			D3D12_STENCIL_OP_INCR_SAT = 4,
			D3D12_STENCIL_OP_DECR_SAT = 5,
			D3D12_STENCIL_OP_INVERT   = 6,
			D3D12_STENCIL_OP_INCR     = 7,
			D3D12_STENCIL_OP_DECR     = 8
		};

		struct D3D12_DEPTH_STENCILOP_DESC
		{
			D3D12_STENCIL_OP      StencilFailOp;
			D3D12_STENCIL_OP      StencilDepthFailOp;
			D3D12_STENCIL_OP      StencilPassOp;
			D3D12_COMPARISON_FUNC StencilFunc;
		};

		struct D3D12_DEPTH_STENCIL_DESC
		{
			BOOL                       DepthEnable;
			D3D12_DEPTH_WRITE_MASK     DepthWriteMask;
			D3D12_COMPARISON_FUNC      DepthFunc;
			BOOL                       StencilEnable;
			std::uint8_t               StencilReadMask;
			std::uint8_t               StencilWriteMask;
			D3D12_DEPTH_STENCILOP_DESC FrontFace;
			D3D12_DEPTH_STENCILOP_DESC BackFace;
		};

		struct D3D12_DEPTH_STENCIL_DESC1
		{
			BOOL                       DepthEnable;
			D3D12_DEPTH_WRITE_MASK     DepthWriteMask;
			D3D12_COMPARISON_FUNC      DepthFunc;
			BOOL                       StencilEnable;
			std::uint8_t               StencilReadMask;
			std::uint8_t               StencilWriteMask;
			D3D12_DEPTH_STENCILOP_DESC FrontFace;
			D3D12_DEPTH_STENCILOP_DESC BackFace;
			BOOL                       DepthBoundsTestEnable;
		};

		enum D3D12_BLEND
		{
			D3D12_BLEND_ZERO             = 1,
			D3D12_BLEND_ONE              = 2,
			D3D12_BLEND_SRC_COLOR        = 3,
			D3D12_BLEND_INV_SRC_COLOR    = 4,
			D3D12_BLEND_SRC_ALPHA        = 5,
			D3D12_BLEND_INV_SRC_ALPHA    = 6,
			D3D12_BLEND_DEST_ALPHA       = 7,
			D3D12_BLEND_INV_DEST_ALPHA   = 8,
			D3D12_BLEND_DEST_COLOR       = 9,
			D3D12_BLEND_INV_DEST_COLOR   = 10,
			D3D12_BLEND_SRC_ALPHA_SAT    = 11,
			D3D12_BLEND_BLEND_FACTOR     = 14,
			D3D12_BLEND_INV_BLEND_FACTOR = 15,
			D3D12_BLEND_SRC1_COLOR       = 16,
			D3D12_BLEND_INV_SRC1_COLOR   = 17,
			D3D12_BLEND_SRC1_ALPHA       = 18,
			D3D12_BLEND_INV_SRC1_ALPHA   = 19,
			D3D12_BLEND_ALPHA_FACTOR     = 20,
			D3D12_BLEND_INV_ALPHA_FACTOR = 21
		};

		enum D3D12_BLEND_OP
		{
			D3D12_BLEND_OP_ADD          = 1,
			D3D12_BLEND_OP_SUBTRACT     = 2,
			D3D12_BLEND_OP_REV_SUBTRACT = 3,
			D3D12_BLEND_OP_MIN          = 4,
			D3D12_BLEND_OP_MAX          = 5
		};

		enum D3D12_COLOR_WRITE_ENABLE
		{
			D3D12_COLOR_WRITE_ENABLE_RED   = 1,
			D3D12_COLOR_WRITE_ENABLE_GREEN = 2,
			D3D12_COLOR_WRITE_ENABLE_BLUE  = 4,
			D3D12_COLOR_WRITE_ENABLE_ALPHA = 8,
			D3D12_COLOR_WRITE_ENABLE_ALL   = (((D3D12_COLOR_WRITE_ENABLE_RED | D3D12_COLOR_WRITE_ENABLE_GREEN) | D3D12_COLOR_WRITE_ENABLE_BLUE) | D3D12_COLOR_WRITE_ENABLE_ALPHA)
		};

		enum D3D12_LOGIC_OP
		{
			D3D12_LOGIC_OP_CLEAR         = 0,
			D3D12_LOGIC_OP_SET           = (D3D12_LOGIC_OP_CLEAR + 1),
			D3D12_LOGIC_OP_COPY          = (D3D12_LOGIC_OP_SET + 1),
			D3D12_LOGIC_OP_COPY_INVERTED = (D3D12_LOGIC_OP_COPY + 1),
			D3D12_LOGIC_OP_NOOP          = (D3D12_LOGIC_OP_COPY_INVERTED + 1),
			D3D12_LOGIC_OP_INVERT        = (D3D12_LOGIC_OP_NOOP + 1),
			D3D12_LOGIC_OP_AND           = (D3D12_LOGIC_OP_INVERT + 1),
			D3D12_LOGIC_OP_NAND          = (D3D12_LOGIC_OP_AND + 1),
			D3D12_LOGIC_OP_OR            = (D3D12_LOGIC_OP_NAND + 1),
			D3D12_LOGIC_OP_NOR           = (D3D12_LOGIC_OP_OR + 1),
			D3D12_LOGIC_OP_XOR           = (D3D12_LOGIC_OP_NOR + 1),
			D3D12_LOGIC_OP_EQUIV         = (D3D12_LOGIC_OP_XOR + 1),
			D3D12_LOGIC_OP_AND_REVERSE   = (D3D12_LOGIC_OP_EQUIV + 1),
			D3D12_LOGIC_OP_AND_INVERTED  = (D3D12_LOGIC_OP_AND_REVERSE + 1),
			D3D12_LOGIC_OP_OR_REVERSE    = (D3D12_LOGIC_OP_AND_INVERTED + 1),
			D3D12_LOGIC_OP_OR_INVERTED   = (D3D12_LOGIC_OP_OR_REVERSE + 1)
		};

		struct D3D12_RENDER_TARGET_BLEND_DESC
		{
			BOOL           BlendEnable;
			BOOL           LogicOpEnable;
			D3D12_BLEND    SrcBlend;
			D3D12_BLEND    DestBlend;
			D3D12_BLEND_OP BlendOp;
			D3D12_BLEND    SrcBlendAlpha;
			D3D12_BLEND    DestBlendAlpha;
			D3D12_BLEND_OP BlendOpAlpha;
			D3D12_LOGIC_OP LogicOp;
			std::uint8_t   RenderTargetWriteMask;
		};

		struct D3D12_BLEND_DESC
		{
			BOOL                           AlphaToCoverageEnable;
			BOOL                           IndependentBlendEnable;
			D3D12_RENDER_TARGET_BLEND_DESC RenderTarget[8];
		};

		enum D3D12_CONSERVATIVE_RASTERIZATION_MODE
		{
			D3D12_CONSERVATIVE_RASTERIZATION_MODE_OFF = 0,
			D3D12_CONSERVATIVE_RASTERIZATION_MODE_ON  = 1
		};

		struct D3D12_RASTERIZER_DESC
		{
			D3D12_FILL_MODE                       FillMode;
			D3D12_CULL_MODE                       CullMode;
			BOOL                                  FrontCounterClockwise;
			INT                                   DepthBias;
			FLOAT                                 DepthBiasClamp;
			FLOAT                                 SlopeScaledDepthBias;
			BOOL                                  DepthClipEnable;
			BOOL                                  MultisampleEnable;
			BOOL                                  AntialiasedLineEnable;
			UINT                                  ForcedSampleCount;
			D3D12_CONSERVATIVE_RASTERIZATION_MODE ConservativeRaster;
		};

		MIDL_INTERFACE("c4fec28f-7966-4e95-9f94-f431cb56c3b8")
		ID3D12Object : public IUnknown
		{
		public:
			virtual HRESULT GetPrivateData(const GUID& guid, UINT* pDataSize, void* pData)     = 0;
			virtual HRESULT SetPrivateData(const GUID& guid, UINT DataSize, const void* pData) = 0;
			virtual HRESULT SetPrivateDataInterface(const GUID& guid, const IUnknown* pData)   = 0;

			virtual HRESULT SetName(LPCWSTR Name) = 0;
		};

		MIDL_INTERFACE("905db94b-a00c-4140-9df5-2b64ca9ea357")
		ID3D12DeviceChild : public ID3D12Object
		{
		public:
			virtual HRESULT GetDevice(const GUID& riid, void** ppvDevice) = 0;
		};

		MIDL_INTERFACE("c54a6b66-72df-4ee8-8be5-a946a1429214")
		ID3D12RootSignature : public ID3D12DeviceChild {
			public:
		};

		struct D3D12_SHADER_BYTECODE
		{
			const void* pShaderBytecode;
			SIZE_T      BytecodeLength;
		};

		struct D3D12_STREAM_OUTPUT_DESC
		{
			const D3D12_SO_DECLARATION_ENTRY* pSODeclaration;
			UINT                              NumEntries;
			const UINT*                       pBufferStrides;
			UINT                              NumStrides;
			UINT                              RasterizedStream;
		};

		struct D3D12_INPUT_LAYOUT_DESC
		{
			const D3D12_INPUT_ELEMENT_DESC* pInputElementDescs;
			UINT                            NumElements;
		};

		enum D3D12_INDEX_BUFFER_STRIP_CUT_VALUE
		{
			D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_DISABLED   = 0,
			D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFF     = 1,
			D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFFFFFF = 2
		};

		struct D3D12_CACHED_PIPELINE_STATE
		{
			const void* pCachedBlob;
			SIZE_T      CachedBlobSizeInBytes;
		};

		enum D3D12_PIPELINE_STATE_FLAGS
		{
			D3D12_PIPELINE_STATE_FLAG_NONE       = 0,
			D3D12_PIPELINE_STATE_FLAG_TOOL_DEBUG = 0x1
		};

		struct D3D12_GRAPHICS_PIPELINE_STATE_DESC
		{
			ID3D12RootSignature*               pRootSignature;
			D3D12_SHADER_BYTECODE              VS;
			D3D12_SHADER_BYTECODE              PS;
			D3D12_SHADER_BYTECODE              DS;
			D3D12_SHADER_BYTECODE              HS;
			D3D12_SHADER_BYTECODE              GS;
			D3D12_STREAM_OUTPUT_DESC           StreamOutput;
			D3D12_BLEND_DESC                   BlendState;
			UINT                               SampleMask;
			D3D12_RASTERIZER_DESC              RasterizerState;
			D3D12_DEPTH_STENCIL_DESC           DepthStencilState;
			D3D12_INPUT_LAYOUT_DESC            InputLayout;
			D3D12_INDEX_BUFFER_STRIP_CUT_VALUE IBStripCutValue;
			D3D12_PRIMITIVE_TOPOLOGY_TYPE      PrimitiveTopologyType;
			UINT                               NumRenderTargets;
			DXGI_FORMAT                        RTVFormats[8];
			DXGI_FORMAT                        DSVFormat;
			DXGI_SAMPLE_DESC                   SampleDesc;
			UINT                               NodeMask;
			D3D12_CACHED_PIPELINE_STATE        CachedPSO;
			D3D12_PIPELINE_STATE_FLAGS         Flags;
		};

		struct D3D12_COMPUTE_PIPELINE_STATE_DESC
		{
			ID3D12RootSignature*        pRootSignature;
			D3D12_SHADER_BYTECODE       CS;
			UINT                        NodeMask;
			D3D12_CACHED_PIPELINE_STATE CachedPSO;
			D3D12_PIPELINE_STATE_FLAGS  Flags;
		};

		struct D3D12_RT_FORMAT_ARRAY
		{
			DXGI_FORMAT RTFormats[8];
			UINT        NumRenderTargets;
		};
		struct D3D12_PIPELINE_STATE_STREAM_DESC
		{
			SIZE_T SizeInBytes;
			void*  pPipelineStateSubobjectStream;
		};

		enum D3D12_PIPELINE_STATE_SUBOBJECT_TYPE
		{
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_ROOT_SIGNATURE        = 0,
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VS                    = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_ROOT_SIGNATURE + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PS                    = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VS + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DS                    = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PS + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_HS                    = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DS + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_GS                    = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_HS + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CS                    = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_GS + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_STREAM_OUTPUT         = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CS + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_BLEND                 = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_STREAM_OUTPUT + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_MASK           = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_BLEND + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RASTERIZER            = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_MASK + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL         = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RASTERIZER + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_INPUT_LAYOUT          = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_IB_STRIP_CUT_VALUE    = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_INPUT_LAYOUT + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PRIMITIVE_TOPOLOGY    = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_IB_STRIP_CUT_VALUE + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RENDER_TARGET_FORMATS = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PRIMITIVE_TOPOLOGY + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL_FORMAT  = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RENDER_TARGET_FORMATS + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_DESC           = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL_FORMAT + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_NODE_MASK             = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_DESC + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CACHED_PSO            = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_NODE_MASK + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_FLAGS                 = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CACHED_PSO + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL1        = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_FLAGS + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VIEW_INSTANCING       = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL1 + 1),
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_AS                    = 24,
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_MS                    = 25,
			D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_MAX_VALID             = (D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_MS + 1)
		};

		enum D3D12_FEATURE
		{
			D3D12_FEATURE_D3D12_OPTIONS                         = 0,
			D3D12_FEATURE_ARCHITECTURE                          = 1,
			D3D12_FEATURE_FEATURE_LEVELS                        = 2,
			D3D12_FEATURE_FORMAT_SUPPORT                        = 3,
			D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS            = 4,
			D3D12_FEATURE_FORMAT_INFO                           = 5,
			D3D12_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT           = 6,
			D3D12_FEATURE_SHADER_MODEL                          = 7,
			D3D12_FEATURE_D3D12_OPTIONS1                        = 8,
			D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_SUPPORT    = 10,
			D3D12_FEATURE_ROOT_SIGNATURE                        = 12,
			D3D12_FEATURE_ARCHITECTURE1                         = 16,
			D3D12_FEATURE_D3D12_OPTIONS2                        = 18,
			D3D12_FEATURE_SHADER_CACHE                          = 19,
			D3D12_FEATURE_COMMAND_QUEUE_PRIORITY                = 20,
			D3D12_FEATURE_D3D12_OPTIONS3                        = 21,
			D3D12_FEATURE_EXISTING_HEAPS                        = 22,
			D3D12_FEATURE_D3D12_OPTIONS4                        = 23,
			D3D12_FEATURE_SERIALIZATION                         = 24,
			D3D12_FEATURE_CROSS_NODE                            = 25,
			D3D12_FEATURE_D3D12_OPTIONS5                        = 27,
			D3D12_FEATURE_DISPLAYABLE                           = 28,
			D3D12_FEATURE_D3D12_OPTIONS6                        = 30,
			D3D12_FEATURE_QUERY_META_COMMAND                    = 31,
			D3D12_FEATURE_D3D12_OPTIONS7                        = 32,
			D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPE_COUNT = 33,
			D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPES      = 34,
			D3D12_FEATURE_D3D12_OPTIONS8                        = 36,
			D3D12_FEATURE_D3D12_OPTIONS9                        = 37,
			D3D12_FEATURE_D3D12_OPTIONS10                       = 39,
			D3D12_FEATURE_D3D12_OPTIONS11                       = 40,
			D3D12_FEATURE_D3D12_OPTIONS12                       = 41,
			D3D12_FEATURE_D3D12_OPTIONS13                       = 42
		};

		enum D3D12_SHADER_MIN_PRECISION_SUPPORT
		{
			D3D12_SHADER_MIN_PRECISION_SUPPORT_NONE   = 0,
			D3D12_SHADER_MIN_PRECISION_SUPPORT_10_BIT = 0x1,
			D3D12_SHADER_MIN_PRECISION_SUPPORT_16_BIT = 0x2
		};

		enum D3D12_TILED_RESOURCES_TIER
		{
			D3D12_TILED_RESOURCES_TIER_NOT_SUPPORTED = 0,
			D3D12_TILED_RESOURCES_TIER_1             = 1,
			D3D12_TILED_RESOURCES_TIER_2             = 2,
			D3D12_TILED_RESOURCES_TIER_3             = 3,
			D3D12_TILED_RESOURCES_TIER_4             = 4
		};

		enum D3D12_RESOURCE_BINDING_TIER
		{
			D3D12_RESOURCE_BINDING_TIER_1 = 1,
			D3D12_RESOURCE_BINDING_TIER_2 = 2,
			D3D12_RESOURCE_BINDING_TIER_3 = 3
		};

		enum D3D12_CONSERVATIVE_RASTERIZATION_TIER
		{
			D3D12_CONSERVATIVE_RASTERIZATION_TIER_NOT_SUPPORTED = 0,
			D3D12_CONSERVATIVE_RASTERIZATION_TIER_1             = 1,
			D3D12_CONSERVATIVE_RASTERIZATION_TIER_2             = 2,
			D3D12_CONSERVATIVE_RASTERIZATION_TIER_3             = 3
		};

		enum D3D12_FORMAT_SUPPORT1
		{
			D3D12_FORMAT_SUPPORT1_NONE                        = 0,
			D3D12_FORMAT_SUPPORT1_BUFFER                      = 0x1,
			D3D12_FORMAT_SUPPORT1_IA_VERTEX_BUFFER            = 0x2,
			D3D12_FORMAT_SUPPORT1_IA_INDEX_BUFFER             = 0x4,
			D3D12_FORMAT_SUPPORT1_SO_BUFFER                   = 0x8,
			D3D12_FORMAT_SUPPORT1_TEXTURE1D                   = 0x10,
			D3D12_FORMAT_SUPPORT1_TEXTURE2D                   = 0x20,
			D3D12_FORMAT_SUPPORT1_TEXTURE3D                   = 0x40,
			D3D12_FORMAT_SUPPORT1_TEXTURECUBE                 = 0x80,
			D3D12_FORMAT_SUPPORT1_SHADER_LOAD                 = 0x100,
			D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE               = 0x200,
			D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_COMPARISON    = 0x400,
			D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_MONO_TEXT     = 0x800,
			D3D12_FORMAT_SUPPORT1_MIP                         = 0x1000,
			D3D12_FORMAT_SUPPORT1_RENDER_TARGET               = 0x4000,
			D3D12_FORMAT_SUPPORT1_BLENDABLE                   = 0x8000,
			D3D12_FORMAT_SUPPORT1_DEPTH_STENCIL               = 0x10000,
			D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RESOLVE         = 0x40000,
			D3D12_FORMAT_SUPPORT1_DISPLAY                     = 0x80000,
			D3D12_FORMAT_SUPPORT1_CAST_WITHIN_BIT_LAYOUT      = 0x100000,
			D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RENDERTARGET    = 0x200000,
			D3D12_FORMAT_SUPPORT1_MULTISAMPLE_LOAD            = 0x400000,
			D3D12_FORMAT_SUPPORT1_SHADER_GATHER               = 0x800000,
			D3D12_FORMAT_SUPPORT1_BACK_BUFFER_CAST            = 0x1000000,
			D3D12_FORMAT_SUPPORT1_TYPED_UNORDERED_ACCESS_VIEW = 0x2000000,
			D3D12_FORMAT_SUPPORT1_SHADER_GATHER_COMPARISON    = 0x4000000,
			D3D12_FORMAT_SUPPORT1_DECODER_OUTPUT              = 0x8000000,
			D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_OUTPUT      = 0x10000000,
			D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_INPUT       = 0x20000000,
			D3D12_FORMAT_SUPPORT1_VIDEO_ENCODER               = 0x40000000
		};

		enum D3D12_FORMAT_SUPPORT2
		{
			D3D12_FORMAT_SUPPORT2_NONE                                         = 0,
			D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_ADD                               = 0x1,
			D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS                       = 0x2,
			D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE = 0x4,
			D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE                          = 0x8,
			D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX                 = 0x10,
			D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX               = 0x20,
			D3D12_FORMAT_SUPPORT2_UAV_TYPED_LOAD                               = 0x40,
			D3D12_FORMAT_SUPPORT2_UAV_TYPED_STORE                              = 0x80,
			D3D12_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP                       = 0x100,
			D3D12_FORMAT_SUPPORT2_TILED                                        = 0x200,
			D3D12_FORMAT_SUPPORT2_MULTIPLANE_OVERLAY                           = 0x4000,
			D3D12_FORMAT_SUPPORT2_SAMPLER_FEEDBACK                             = 0x8000
		};

		enum D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS
		{
			D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_NONE           = 0,
			D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_TILED_RESOURCE = 0x1
		};

		enum D3D12_CROSS_NODE_SHARING_TIER
		{
			D3D12_CROSS_NODE_SHARING_TIER_NOT_SUPPORTED = 0,
			D3D12_CROSS_NODE_SHARING_TIER_1_EMULATED    = 1,
			D3D12_CROSS_NODE_SHARING_TIER_1             = 2,
			D3D12_CROSS_NODE_SHARING_TIER_2             = 3,
			D3D12_CROSS_NODE_SHARING_TIER_3             = 4
		};

		enum D3D12_RESOURCE_HEAP_TIER
		{
			D3D12_RESOURCE_HEAP_TIER_1 = 1,
			D3D12_RESOURCE_HEAP_TIER_2 = 2
		};

		enum D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER
		{
			D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_NOT_SUPPORTED = 0,
			D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_1             = 1,
			D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_2             = 2
		};

		enum D3D12_VIEW_INSTANCING_TIER
		{
			D3D12_VIEW_INSTANCING_TIER_NOT_SUPPORTED = 0,
			D3D12_VIEW_INSTANCING_TIER_1             = 1,
			D3D12_VIEW_INSTANCING_TIER_2             = 2,
			D3D12_VIEW_INSTANCING_TIER_3             = 3
		};

		struct D3D12_FEATURE_DATA_D3D12_OPTIONS
		{
			BOOL                                  DoublePrecisionFloatShaderOps;
			BOOL                                  OutputMergerLogicOp;
			D3D12_SHADER_MIN_PRECISION_SUPPORT    MinPrecisionSupport;
			D3D12_TILED_RESOURCES_TIER            TiledResourcesTier;
			D3D12_RESOURCE_BINDING_TIER           ResourceBindingTier;
			BOOL                                  PSSpecifiedStencilRefSupported;
			BOOL                                  TypedUAVLoadAdditionalFormats;
			BOOL                                  ROVsSupported;
			D3D12_CONSERVATIVE_RASTERIZATION_TIER ConservativeRasterizationTier;
			UINT                                  MaxGPUVirtualAddressBitsPerResource;
			BOOL                                  StandardSwizzle64KBSupported;
			D3D12_CROSS_NODE_SHARING_TIER         CrossNodeSharingTier;
			BOOL                                  CrossAdapterRowMajorTextureSupported;
			BOOL                                  VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation;
			D3D12_RESOURCE_HEAP_TIER              ResourceHeapTier;
		};

		struct D3D12_FEATURE_DATA_D3D12_OPTIONS1
		{
			BOOL WaveOps;
			UINT WaveLaneCountMin;
			UINT WaveLaneCountMax;
			UINT TotalLaneCount;
			BOOL ExpandedComputeResourceStates;
			BOOL Int64ShaderOps;
		};

		struct D3D12_FEATURE_DATA_D3D12_OPTIONS2
		{
			BOOL                                     DepthBoundsTestSupported;
			D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER ProgrammableSamplePositionsTier;
		};

		enum D3D_ROOT_SIGNATURE_VERSION
		{
			D3D_ROOT_SIGNATURE_VERSION_1   = 0x1,
			D3D_ROOT_SIGNATURE_VERSION_1_0 = 0x1,
			D3D_ROOT_SIGNATURE_VERSION_1_1 = 0x2
		};

		struct D3D12_FEATURE_DATA_ROOT_SIGNATURE
		{
			D3D_ROOT_SIGNATURE_VERSION HighestVersion;
		};

		struct D3D12_FEATURE_DATA_ARCHITECTURE
		{
			UINT NodeIndex;
			BOOL TileBasedRenderer;
			BOOL UMA;
			BOOL CacheCoherentUMA;
		};

		struct D3D12_FEATURE_DATA_ARCHITECTURE1
		{
			UINT NodeIndex;
			BOOL TileBasedRenderer;
			BOOL UMA;
			BOOL CacheCoherentUMA;
			BOOL IsolatedMMU;
		};

		struct D3D12_FEATURE_DATA_FEATURE_LEVELS
		{
			UINT                     NumFeatureLevels;
			const D3D_FEATURE_LEVEL* pFeatureLevelsRequested;
			D3D_FEATURE_LEVEL        MaxSupportedFeatureLevel;
		};

		enum D3D_SHADER_MODEL
		{
			D3D_SHADER_MODEL_5_1     = 0x51,
			D3D_SHADER_MODEL_6_0     = 0x60,
			D3D_SHADER_MODEL_6_1     = 0x61,
			D3D_SHADER_MODEL_6_2     = 0x62,
			D3D_SHADER_MODEL_6_3     = 0x63,
			D3D_SHADER_MODEL_6_4     = 0x64,
			D3D_SHADER_MODEL_6_5     = 0x65,
			D3D_SHADER_MODEL_6_6     = 0x66,
			D3D_SHADER_MODEL_6_7     = 0x67,
			D3D_HIGHEST_SHADER_MODEL = D3D_SHADER_MODEL_6_7
		};

		struct D3D12_FEATURE_DATA_SHADER_MODEL
		{
			D3D_SHADER_MODEL HighestShaderModel;
		};

		struct D3D12_FEATURE_DATA_FORMAT_SUPPORT
		{
			DXGI_FORMAT           Format;
			D3D12_FORMAT_SUPPORT1 Support1;
			D3D12_FORMAT_SUPPORT2 Support2;
		};

		struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS
		{
			DXGI_FORMAT                           Format;
			UINT                                  SampleCount;
			D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS Flags;
			UINT                                  NumQualityLevels;
		};

		struct D3D12_FEATURE_DATA_FORMAT_INFO
		{
			DXGI_FORMAT  Format;
			std::uint8_t PlaneCount;
		};

		struct D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT
		{
			UINT MaxGPUVirtualAddressBitsPerResource;
			UINT MaxGPUVirtualAddressBitsPerProcess;
		};

		enum D3D12_SHADER_CACHE_SUPPORT_FLAGS
		{
			D3D12_SHADER_CACHE_SUPPORT_NONE                   = 0,
			D3D12_SHADER_CACHE_SUPPORT_SINGLE_PSO             = 0x1,
			D3D12_SHADER_CACHE_SUPPORT_LIBRARY                = 0x2,
			D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_INPROC_CACHE = 0x4,
			D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_DISK_CACHE   = 0x8,
			D3D12_SHADER_CACHE_SUPPORT_DRIVER_MANAGED_CACHE   = 0x10,
			D3D12_SHADER_CACHE_SUPPORT_SHADER_CONTROL_CLEAR   = 0x20,
			D3D12_SHADER_CACHE_SUPPORT_SHADER_SESSION_DELETE  = 0x40
		};

		struct D3D12_FEATURE_DATA_SHADER_CACHE
		{
			D3D12_SHADER_CACHE_SUPPORT_FLAGS SupportFlags;
		};

		struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY
		{
			D3D12_COMMAND_LIST_TYPE CommandListType;
			UINT                    Priority;
			BOOL                    PriorityForTypeIsSupported;
		};

		enum D3D12_COMMAND_LIST_SUPPORT_FLAGS
		{
			D3D12_COMMAND_LIST_SUPPORT_FLAG_NONE          = 0,
			D3D12_COMMAND_LIST_SUPPORT_FLAG_DIRECT        = (1 << D3D12_COMMAND_LIST_TYPE_DIRECT),
			D3D12_COMMAND_LIST_SUPPORT_FLAG_BUNDLE        = (1 << D3D12_COMMAND_LIST_TYPE_BUNDLE),
			D3D12_COMMAND_LIST_SUPPORT_FLAG_COMPUTE       = (1 << D3D12_COMMAND_LIST_TYPE_COMPUTE),
			D3D12_COMMAND_LIST_SUPPORT_FLAG_COPY          = (1 << D3D12_COMMAND_LIST_TYPE_COPY),
			D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_DECODE  = (1 << D3D12_COMMAND_LIST_TYPE_VIDEO_DECODE),
			D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_PROCESS = (1 << D3D12_COMMAND_LIST_TYPE_VIDEO_PROCESS),
			D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_ENCODE  = (1 << D3D12_COMMAND_LIST_TYPE_VIDEO_ENCODE)
		};

		struct D3D12_FEATURE_DATA_D3D12_OPTIONS3
		{
			BOOL                             CopyQueueTimestampQueriesSupported;
			BOOL                             CastingFullyTypedFormatSupported;
			D3D12_COMMAND_LIST_SUPPORT_FLAGS WriteBufferImmediateSupportFlags;
			D3D12_VIEW_INSTANCING_TIER       ViewInstancingTier;
			BOOL                             BarycentricsSupported;
		};

		struct D3D12_FEATURE_DATA_EXISTING_HEAPS
		{
			BOOL Supported;
		};

		enum D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER
		{
			D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_0 = 0,
			D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_1 = (D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_0 + 1),
			D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_2 = (D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_1 + 1)
		};

		struct D3D12_FEATURE_DATA_DISPLAYABLE
		{
			BOOL                                     DisplayableTexture;
			D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER SharedResourceCompatibilityTier;
		};

		struct D3D12_FEATURE_DATA_D3D12_OPTIONS4
		{
			BOOL                                     MSAA64KBAlignedTextureSupported;
			D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER SharedResourceCompatibilityTier;
			BOOL                                     Native16BitShaderOpsSupported;
		};

		enum D3D12_HEAP_SERIALIZATION_TIER
		{
			D3D12_HEAP_SERIALIZATION_TIER_0  = 0,
			D3D12_HEAP_SERIALIZATION_TIER_10 = 10
		};

		struct D3D12_FEATURE_DATA_SERIALIZATION
		{
			UINT                          NodeIndex;
			D3D12_HEAP_SERIALIZATION_TIER HeapSerializationTier;
		};

		struct D3D12_FEATURE_DATA_CROSS_NODE
		{
			D3D12_CROSS_NODE_SHARING_TIER SharingTier;
			BOOL                          AtomicShaderInstructions;
		};

		enum D3D12_RENDER_PASS_TIER
		{
			D3D12_RENDER_PASS_TIER_0 = 0,
			D3D12_RENDER_PASS_TIER_1 = 1,
			D3D12_RENDER_PASS_TIER_2 = 2
		};

		enum D3D12_RAYTRACING_TIER
		{
			D3D12_RAYTRACING_TIER_NOT_SUPPORTED = 0,
			D3D12_RAYTRACING_TIER_1_0           = 10,
			D3D12_RAYTRACING_TIER_1_1           = 11
		};

		struct D3D12_FEATURE_DATA_D3D12_OPTIONS5
		{
			BOOL                   SRVOnlyTiledResourceTier3;
			D3D12_RENDER_PASS_TIER RenderPassesTier;
			D3D12_RAYTRACING_TIER  RaytracingTier;
		};

		enum D3D12_VARIABLE_SHADING_RATE_TIER
		{
			D3D12_VARIABLE_SHADING_RATE_TIER_NOT_SUPPORTED = 0,
			D3D12_VARIABLE_SHADING_RATE_TIER_1             = 1,
			D3D12_VARIABLE_SHADING_RATE_TIER_2             = 2
		};

		struct D3D12_FEATURE_DATA_D3D12_OPTIONS6
		{
			BOOL                             AdditionalShadingRatesSupported;
			BOOL                             PerPrimitiveShadingRateSupportedWithViewportIndexing;
			D3D12_VARIABLE_SHADING_RATE_TIER VariableShadingRateTier;
			UINT                             ShadingRateImageTileSize;
			BOOL                             BackgroundProcessingSupported;
		};

		enum D3D12_MESH_SHADER_TIER
		{
			D3D12_MESH_SHADER_TIER_NOT_SUPPORTED = 0,
			D3D12_MESH_SHADER_TIER_1             = 10
		};

		enum D3D12_SAMPLER_FEEDBACK_TIER
		{
			D3D12_SAMPLER_FEEDBACK_TIER_NOT_SUPPORTED = 0,
			D3D12_SAMPLER_FEEDBACK_TIER_0_9           = 90,
			D3D12_SAMPLER_FEEDBACK_TIER_1_0           = 100
		};

		struct D3D12_FEATURE_DATA_D3D12_OPTIONS7
		{
			D3D12_MESH_SHADER_TIER      MeshShaderTier;
			D3D12_SAMPLER_FEEDBACK_TIER SamplerFeedbackTier;
		};

		struct D3D12_FEATURE_DATA_QUERY_META_COMMAND
		{
			GUID        CommandId;
			UINT        NodeMask;
			const void* pQueryInputData;
			SIZE_T      QueryInputDataSizeInBytes;
			void*       pQueryOutputData;
			SIZE_T      QueryOutputDataSizeInBytes;
		};

		struct D3D12_FEATURE_DATA_D3D12_OPTIONS8
		{
			BOOL UnalignedBlockTexturesSupported;
		};

		enum D3D12_WAVE_MMA_TIER
		{
			D3D12_WAVE_MMA_TIER_NOT_SUPPORTED = 0,
			D3D12_WAVE_MMA_TIER_1_0           = 10
		};

		struct D3D12_FEATURE_DATA_D3D12_OPTIONS9
		{
			BOOL                MeshShaderPipelineStatsSupported;
			BOOL                MeshShaderSupportsFullRangeRenderTargetArrayIndex;
			BOOL                AtomicInt64OnTypedResourceSupported;
			BOOL                AtomicInt64OnGroupSharedSupported;
			BOOL                DerivativesInMeshAndAmplificationShadersSupported;
			D3D12_WAVE_MMA_TIER WaveMMATier;
		};

		struct D3D12_FEATURE_DATA_D3D12_OPTIONS10
		{
			BOOL VariableRateShadingSumCombinerSupported;
			BOOL MeshShaderPerPrimitiveShadingRateSupported;
		};

		struct D3D12_FEATURE_DATA_D3D12_OPTIONS11
		{
			BOOL AtomicInt64OnDescriptorHeapResourceSupported;
		};

		enum D3D12_TRI_STATE
		{
			D3D12_TRI_STATE_UNKNOWN = -1,
			D3D12_TRI_STATE_FALSE   = 0,
			D3D12_TRI_STATE_TRUE    = 1
		};

		struct D3D12_FEATURE_DATA_D3D12_OPTIONS12
		{
			D3D12_TRI_STATE MSPrimitivesPipelineStatisticIncludesCulledPrimitives;
			BOOL            EnhancedBarriersSupported;
			BOOL            RelaxedFormatCastingSupported;
		};

		struct D3D12_FEATURE_DATA_D3D12_OPTIONS13
		{
			BOOL UnrestrictedBufferTextureCopyPitchSupported;
			BOOL UnrestrictedVertexElementAlignmentSupported;
			BOOL InvertedViewportHeightFlipsYSupported;
			BOOL InvertedViewportDepthFlipsZSupported;
			BOOL TextureCopyBetweenDimensionsSupported;
			BOOL AlphaBlendFactorSupported;
		};

		struct D3D12_RESOURCE_ALLOCATION_INFO
		{
			std::uint64_t SizeInBytes;
			std::uint64_t Alignment;
		};

		struct D3D12_RESOURCE_ALLOCATION_INFO1
		{
			std::uint64_t Offset;
			std::uint64_t Alignment;
			std::uint64_t SizeInBytes;
		};

		enum D3D12_HEAP_TYPE
		{
			D3D12_HEAP_TYPE_DEFAULT  = 1,
			D3D12_HEAP_TYPE_UPLOAD   = 2,
			D3D12_HEAP_TYPE_READBACK = 3,
			D3D12_HEAP_TYPE_CUSTOM   = 4
		};

		enum D3D12_CPU_PAGE_PROPERTY
		{
			D3D12_CPU_PAGE_PROPERTY_UNKNOWN       = 0,
			D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE = 1,
			D3D12_CPU_PAGE_PROPERTY_WRITE_COMBINE = 2,
			D3D12_CPU_PAGE_PROPERTY_WRITE_BACK    = 3
		};

		enum D3D12_MEMORY_POOL
		{
			D3D12_MEMORY_POOL_UNKNOWN = 0,
			D3D12_MEMORY_POOL_L0      = 1,
			D3D12_MEMORY_POOL_L1      = 2
		};

		struct D3D12_HEAP_PROPERTIES
		{
			D3D12_HEAP_TYPE         Type;
			D3D12_CPU_PAGE_PROPERTY CPUPageProperty;
			D3D12_MEMORY_POOL       MemoryPoolPreference;
			UINT                    CreationNodeMask;
			UINT                    VisibleNodeMask;
		};

		enum D3D12_HEAP_FLAGS
		{
			D3D12_HEAP_FLAG_NONE                           = 0,
			D3D12_HEAP_FLAG_SHARED                         = 0x1,
			D3D12_HEAP_FLAG_DENY_BUFFERS                   = 0x4,
			D3D12_HEAP_FLAG_ALLOW_DISPLAY                  = 0x8,
			D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER           = 0x20,
			D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES            = 0x40,
			D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES        = 0x80,
			D3D12_HEAP_FLAG_HARDWARE_PROTECTED             = 0x100,
			D3D12_HEAP_FLAG_ALLOW_WRITE_WATCH              = 0x200,
			D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS           = 0x400,
			D3D12_HEAP_FLAG_CREATE_NOT_RESIDENT            = 0x800,
			D3D12_HEAP_FLAG_CREATE_NOT_ZEROED              = 0x1000,
			D3D12_HEAP_FLAG_ALLOW_ALL_BUFFERS_AND_TEXTURES = 0,
			D3D12_HEAP_FLAG_ALLOW_ONLY_BUFFERS             = 0xc0,
			D3D12_HEAP_FLAG_ALLOW_ONLY_NON_RT_DS_TEXTURES  = 0x44,
			D3D12_HEAP_FLAG_ALLOW_ONLY_RT_DS_TEXTURES      = 0x84
		};

		struct D3D12_HEAP_DESC
		{
			std::uint64_t         SizeInBytes;
			D3D12_HEAP_PROPERTIES Properties;
			std::uint64_t         Alignment;
			D3D12_HEAP_FLAGS      Flags;
		};

		enum D3D12_RESOURCE_DIMENSION
		{
			D3D12_RESOURCE_DIMENSION_UNKNOWN   = 0,
			D3D12_RESOURCE_DIMENSION_BUFFER    = 1,
			D3D12_RESOURCE_DIMENSION_TEXTURE1D = 2,
			D3D12_RESOURCE_DIMENSION_TEXTURE2D = 3,
			D3D12_RESOURCE_DIMENSION_TEXTURE3D = 4
		};

		enum D3D12_TEXTURE_LAYOUT
		{
			D3D12_TEXTURE_LAYOUT_UNKNOWN                = 0,
			D3D12_TEXTURE_LAYOUT_ROW_MAJOR              = 1,
			D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE = 2,
			D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE  = 3
		};

		enum D3D12_RESOURCE_FLAGS
		{
			D3D12_RESOURCE_FLAG_NONE                              = 0,
			D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET               = 0x1,
			D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL               = 0x2,
			D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS            = 0x4,
			D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE              = 0x8,
			D3D12_RESOURCE_FLAG_ALLOW_CROSS_ADAPTER               = 0x10,
			D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS         = 0x20,
			D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY       = 0x40,
			D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY       = 0x80,
			D3D12_RESOURCE_FLAG_RAYTRACING_ACCELERATION_STRUCTURE = 0x100
		};

		struct D3D12_MIP_REGION
		{
			UINT Width;
			UINT Height;
			UINT Depth;
		};

		struct D3D12_RESOURCE_DESC
		{
			D3D12_RESOURCE_DIMENSION Dimension;
			std::uint64_t            Alignment;
			std::uint64_t            Width;
			UINT                     Height;
			std::uint16_t            DepthOrArraySize;
			std::uint16_t            MipLevels;
			DXGI_FORMAT              Format;
			DXGI_SAMPLE_DESC         SampleDesc;
			D3D12_TEXTURE_LAYOUT     Layout;
			D3D12_RESOURCE_FLAGS     Flags;
		};

		struct D3D12_RESOURCE_DESC1
		{
			D3D12_RESOURCE_DIMENSION Dimension;
			std::uint64_t            Alignment;
			std::uint64_t            Width;
			UINT                     Height;
			std::uint16_t            DepthOrArraySize;
			std::uint16_t            MipLevels;
			DXGI_FORMAT              Format;
			DXGI_SAMPLE_DESC         SampleDesc;
			D3D12_TEXTURE_LAYOUT     Layout;
			D3D12_RESOURCE_FLAGS     Flags;
			D3D12_MIP_REGION         SamplerFeedbackMipRegion;
		};

		struct D3D12_DEPTH_STENCIL_VALUE
		{
			FLOAT        Depth;
			std::uint8_t Stencil;
		};

		struct D3D12_CLEAR_VALUE
		{
			DXGI_FORMAT Format;
			union
			{
				FLOAT                     Color[4];
				D3D12_DEPTH_STENCIL_VALUE DepthStencil;
			};
		};

		struct D3D12_RANGE
		{
			SIZE_T Begin;
			SIZE_T End;
		};

		struct D3D12_RANGE_UINT64
		{
			std::uint64_t Begin;
			std::uint64_t End;
		};

		struct D3D12_SUBRESOURCE_RANGE_UINT64
		{
			UINT               Subresource;
			D3D12_RANGE_UINT64 Range;
		};

		struct D3D12_SUBRESOURCE_INFO
		{
			std::uint64_t Offset;
			UINT          RowPitch;
			UINT          DepthPitch;
		};

		struct D3D12_TILED_RESOURCE_COORDINATE
		{
			UINT X;
			UINT Y;
			UINT Z;
			UINT Subresource;
		};

		struct D3D12_TILE_REGION_SIZE
		{
			UINT         NumTiles;
			BOOL         UseBox;
			UINT         Width;
			std::uint8_t Height;
			std::uint8_t Depth;
		};

		enum D3D12_TILE_RANGE_FLAGS
		{
			D3D12_TILE_RANGE_FLAG_NONE              = 0,
			D3D12_TILE_RANGE_FLAG_NULL              = 1,
			D3D12_TILE_RANGE_FLAG_SKIP              = 2,
			D3D12_TILE_RANGE_FLAG_REUSE_SINGLE_TILE = 4
		};

		struct D3D12_SUBRESOURCE_TILING
		{
			UINT          WidthInTiles;
			std::uint16_t HeightInTiles;
			std::uint16_t DepthInTiles;
			UINT          StartTileIndexInOverallResource;
		};

		struct D3D12_TILE_SHAPE
		{
			UINT WidthInTexels;
			UINT HeightInTexels;
			UINT DepthInTexels;
		};

		struct D3D12_PACKED_MIP_INFO
		{
			std::uint8_t NumStandardMips;
			std::uint8_t NumPackedMips;
			UINT         NumTilesForPackedMips;
			UINT         StartTileIndexInOverallResource;
		};

		enum D3D12_TILE_MAPPING_FLAGS
		{
			D3D12_TILE_MAPPING_FLAG_NONE      = 0,
			D3D12_TILE_MAPPING_FLAG_NO_HAZARD = 0x1
		};

		enum D3D12_TILE_COPY_FLAGS
		{
			D3D12_TILE_COPY_FLAG_NONE                                     = 0,
			D3D12_TILE_COPY_FLAG_NO_HAZARD                                = 0x1,
			D3D12_TILE_COPY_FLAG_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE = 0x2,
			D3D12_TILE_COPY_FLAG_SWIZZLED_TILED_RESOURCE_TO_LINEAR_BUFFER = 0x4
		};

		enum D3D12_RESOURCE_STATES
		{
			D3D12_RESOURCE_STATE_COMMON                            = 0,
			D3D12_RESOURCE_STATE_VERTEX_AND_CONSTANT_BUFFER        = 0x1,
			D3D12_RESOURCE_STATE_INDEX_BUFFER                      = 0x2,
			D3D12_RESOURCE_STATE_RENDER_TARGET                     = 0x4,
			D3D12_RESOURCE_STATE_UNORDERED_ACCESS                  = 0x8,
			D3D12_RESOURCE_STATE_DEPTH_WRITE                       = 0x10,
			D3D12_RESOURCE_STATE_DEPTH_READ                        = 0x20,
			D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE         = 0x40,
			D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE             = 0x80,
			D3D12_RESOURCE_STATE_STREAM_OUT                        = 0x100,
			D3D12_RESOURCE_STATE_INDIRECT_ARGUMENT                 = 0x200,
			D3D12_RESOURCE_STATE_COPY_DEST                         = 0x400,
			D3D12_RESOURCE_STATE_COPY_SOURCE                       = 0x800,
			D3D12_RESOURCE_STATE_RESOLVE_DEST                      = 0x1000,
			D3D12_RESOURCE_STATE_RESOLVE_SOURCE                    = 0x2000,
			D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE = 0x400000,
			D3D12_RESOURCE_STATE_SHADING_RATE_SOURCE               = 0x1000000,
			D3D12_RESOURCE_STATE_GENERIC_READ                      = (((((0x1 | 0x2) | 0x40) | 0x80) | 0x200) | 0x800),
			D3D12_RESOURCE_STATE_ALL_SHADER_RESOURCE               = (0x40 | 0x80),
			D3D12_RESOURCE_STATE_PRESENT                           = 0,
			D3D12_RESOURCE_STATE_PREDICATION                       = 0x200,
			D3D12_RESOURCE_STATE_VIDEO_DECODE_READ                 = 0x10000,
			D3D12_RESOURCE_STATE_VIDEO_DECODE_WRITE                = 0x20000,
			D3D12_RESOURCE_STATE_VIDEO_PROCESS_READ                = 0x40000,
			D3D12_RESOURCE_STATE_VIDEO_PROCESS_WRITE               = 0x80000,
			D3D12_RESOURCE_STATE_VIDEO_ENCODE_READ                 = 0x200000,
			D3D12_RESOURCE_STATE_VIDEO_ENCODE_WRITE                = 0x800000
		};

		enum D3D12_RESOURCE_BARRIER_TYPE
		{
			D3D12_RESOURCE_BARRIER_TYPE_TRANSITION = 0,
			D3D12_RESOURCE_BARRIER_TYPE_ALIASING   = (D3D12_RESOURCE_BARRIER_TYPE_TRANSITION + 1),
			D3D12_RESOURCE_BARRIER_TYPE_UAV        = (D3D12_RESOURCE_BARRIER_TYPE_ALIASING + 1)
		};

		struct D3D12_RESOURCE_TRANSITION_BARRIER
		{
			struct ID3D12Resource* pResource;
			UINT                   Subresource;
			D3D12_RESOURCE_STATES  StateBefore;
			D3D12_RESOURCE_STATES  StateAfter;
		};

		struct D3D12_RESOURCE_ALIASING_BARRIER
		{
			struct ID3D12Resource* pResourceBefore;
			struct ID3D12Resource* pResourceAfter;
		};

		struct D3D12_RESOURCE_UAV_BARRIER
		{
			struct ID3D12Resource* pResource;
		};

		enum D3D12_RESOURCE_BARRIER_FLAGS
		{
			D3D12_RESOURCE_BARRIER_FLAG_NONE       = 0,
			D3D12_RESOURCE_BARRIER_FLAG_BEGIN_ONLY = 0x1,
			D3D12_RESOURCE_BARRIER_FLAG_END_ONLY   = 0x2
		};

		struct D3D12_RESOURCE_BARRIER
		{
			D3D12_RESOURCE_BARRIER_TYPE  Type;
			D3D12_RESOURCE_BARRIER_FLAGS Flags;
			union
			{
				D3D12_RESOURCE_TRANSITION_BARRIER Transition;
				D3D12_RESOURCE_ALIASING_BARRIER   Aliasing;
				D3D12_RESOURCE_UAV_BARRIER        UAV;
			};
		};

		struct D3D12_SUBRESOURCE_FOOTPRINT
		{
			DXGI_FORMAT Format;
			UINT        Width;
			UINT        Height;
			UINT        Depth;
			UINT        RowPitch;
		};

		struct D3D12_PLACED_SUBRESOURCE_FOOTPRINT
		{
			std::uint64_t               Offset;
			D3D12_SUBRESOURCE_FOOTPRINT Footprint;
		};

		enum D3D12_TEXTURE_COPY_TYPE
		{
			D3D12_TEXTURE_COPY_TYPE_SUBRESOURCE_INDEX = 0,
			D3D12_TEXTURE_COPY_TYPE_PLACED_FOOTPRINT  = 1
		};

		struct D3D12_TEXTURE_COPY_LOCATION
		{
			ID3D12Resource*         pResource;
			D3D12_TEXTURE_COPY_TYPE Type;
			union
			{
				D3D12_PLACED_SUBRESOURCE_FOOTPRINT PlacedFootprint;
				UINT                               SubresourceIndex;
			};
		};

		enum D3D12_RESOLVE_MODE
		{
			D3D12_RESOLVE_MODE_DECOMPRESS              = 0,
			D3D12_RESOLVE_MODE_MIN                     = 1,
			D3D12_RESOLVE_MODE_MAX                     = 2,
			D3D12_RESOLVE_MODE_AVERAGE                 = 3,
			D3D12_RESOLVE_MODE_ENCODE_SAMPLER_FEEDBACK = 4,
			D3D12_RESOLVE_MODE_DECODE_SAMPLER_FEEDBACK = 5
		};

		struct D3D12_SAMPLE_POSITION
		{
			std::int8_t X;
			std::int8_t Y;
		};

		struct D3D12_VIEW_INSTANCE_LOCATION
		{
			UINT ViewportArrayIndex;
			UINT RenderTargetArrayIndex;
		};

		enum D3D12_VIEW_INSTANCING_FLAGS
		{
			D3D12_VIEW_INSTANCING_FLAG_NONE                         = 0,
			D3D12_VIEW_INSTANCING_FLAG_ENABLE_VIEW_INSTANCE_MASKING = 0x1
		};

		struct D3D12_VIEW_INSTANCING_DESC
		{
			UINT                                ViewInstanceCount;
			const D3D12_VIEW_INSTANCE_LOCATION* pViewInstanceLocations;
			D3D12_VIEW_INSTANCING_FLAGS         Flags;
		};

		enum D3D12_SHADER_COMPONENT_MAPPING
		{
			D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_0 = 0,
			D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_1 = 1,
			D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_2 = 2,
			D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_3 = 3,
			D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_0           = 4,
			D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_1           = 5
		};

		static constexpr UINT D3D12_SHADER_COMPONENT_MAPPING_MASK                                     = 0x7;
		static constexpr UINT D3D12_SHADER_COMPONENT_MAPPING_SHIFT                                    = 3;
		static constexpr UINT D3D12_SHADER_COMPONENT_MAPPING_ALWAYS_SET_BIT_AVOIDING_ZEROMEM_MISTAKES = 1 << (D3D12_SHADER_COMPONENT_MAPPING_SHIFT * 4);

		static constexpr UINT D3D12_ENCODE_SHADER_4_COMPONENT_MAPPING(UINT Src0, UINT Src1, UINT Src2, UINT Src3)
		{
			return Src0 & D3D12_SHADER_COMPONENT_MAPPING_MASK |
			       (Src1 & D3D12_SHADER_COMPONENT_MAPPING_MASK) << D3D12_SHADER_COMPONENT_MAPPING_SHIFT |
			       (Src2 & D3D12_SHADER_COMPONENT_MAPPING_MASK) << D3D12_SHADER_COMPONENT_MAPPING_SHIFT * 2 |
			       (Src3 & D3D12_SHADER_COMPONENT_MAPPING_MASK) << D3D12_SHADER_COMPONENT_MAPPING_SHIFT * 3 |
			       D3D12_SHADER_COMPONENT_MAPPING_ALWAYS_SET_BIT_AVOIDING_ZEROMEM_MISTAKES;
		}
		static constexpr UINT D3D12_DECODE_SHADER_4_COMPONENT_MAPPING(UINT ComponentToExtract, UINT Mapping)
		{
			return Mapping >> (D3D12_SHADER_COMPONENT_MAPPING_SHIFT * ComponentToExtract) & D3D12_SHADER_COMPONENT_MAPPING_MASK;
		}
		static constexpr UINT D3D12_DEFAULT_SHADER_4_COMPONENT_MAPPING = D3D12_ENCODE_SHADER_4_COMPONENT_MAPPING(0, 1, 2, 3);

		enum D3D12_BUFFER_SRV_FLAGS
		{
			D3D12_BUFFER_SRV_FLAG_NONE = 0,
			D3D12_BUFFER_SRV_FLAG_RAW  = 0x1
		};

		struct D3D12_BUFFER_SRV
		{
			std::uint64_t          FirstElement;
			UINT                   NumElements;
			UINT                   StructureByteStride;
			D3D12_BUFFER_SRV_FLAGS Flags;
		};

		struct D3D12_TEX1D_SRV
		{
			UINT  MostDetailedMip;
			UINT  MipLevels;
			FLOAT ResourceMinLODClamp;
		};

		struct D3D12_TEX1D_ARRAY_SRV
		{
			UINT  MostDetailedMip;
			UINT  MipLevels;
			UINT  FirstArraySlice;
			UINT  ArraySize;
			FLOAT ResourceMinLODClamp;
		};

		struct D3D12_TEX2D_SRV
		{
			UINT  MostDetailedMip;
			UINT  MipLevels;
			UINT  PlaneSlice;
			FLOAT ResourceMinLODClamp;
		};

		struct D3D12_TEX2D_ARRAY_SRV
		{
			UINT  MostDetailedMip;
			UINT  MipLevels;
			UINT  FirstArraySlice;
			UINT  ArraySize;
			UINT  PlaneSlice;
			FLOAT ResourceMinLODClamp;
		};

		struct D3D12_TEX3D_SRV
		{
			UINT  MostDetailedMip;
			UINT  MipLevels;
			FLOAT ResourceMinLODClamp;
		};

		struct D3D12_TEXCUBE_SRV
		{
			UINT  MostDetailedMip;
			UINT  MipLevels;
			FLOAT ResourceMinLODClamp;
		};

		struct D3D12_TEXCUBE_ARRAY_SRV
		{
			UINT  MostDetailedMip;
			UINT  MipLevels;
			UINT  First2DArrayFace;
			UINT  NumCubes;
			FLOAT ResourceMinLODClamp;
		};

		struct D3D12_TEX2DMS_SRV
		{
			UINT UnusedField_NothingToDefine;
		};

		struct D3D12_TEX2DMS_ARRAY_SRV
		{
			UINT FirstArraySlice;
			UINT ArraySize;
		};

		struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV
		{
			D3D12_GPU_VIRTUAL_ADDRESS Location;
		};

		enum D3D12_SRV_DIMENSION
		{
			D3D12_SRV_DIMENSION_UNKNOWN                           = 0,
			D3D12_SRV_DIMENSION_BUFFER                            = 1,
			D3D12_SRV_DIMENSION_TEXTURE1D                         = 2,
			D3D12_SRV_DIMENSION_TEXTURE1DARRAY                    = 3,
			D3D12_SRV_DIMENSION_TEXTURE2D                         = 4,
			D3D12_SRV_DIMENSION_TEXTURE2DARRAY                    = 5,
			D3D12_SRV_DIMENSION_TEXTURE2DMS                       = 6,
			D3D12_SRV_DIMENSION_TEXTURE2DMSARRAY                  = 7,
			D3D12_SRV_DIMENSION_TEXTURE3D                         = 8,
			D3D12_SRV_DIMENSION_TEXTURECUBE                       = 9,
			D3D12_SRV_DIMENSION_TEXTURECUBEARRAY                  = 10,
			D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE = 11
		};

		struct D3D12_SHADER_RESOURCE_VIEW_DESC
		{
			DXGI_FORMAT         Format;
			D3D12_SRV_DIMENSION ViewDimension;
			UINT                Shader4ComponentMapping;
			union
			{
				D3D12_BUFFER_SRV                            Buffer;
				D3D12_TEX1D_SRV                             Texture1D;
				D3D12_TEX1D_ARRAY_SRV                       Texture1DArray;
				D3D12_TEX2D_SRV                             Texture2D;
				D3D12_TEX2D_ARRAY_SRV                       Texture2DArray;
				D3D12_TEX2DMS_SRV                           Texture2DMS;
				D3D12_TEX2DMS_ARRAY_SRV                     Texture2DMSArray;
				D3D12_TEX3D_SRV                             Texture3D;
				D3D12_TEXCUBE_SRV                           TextureCube;
				D3D12_TEXCUBE_ARRAY_SRV                     TextureCubeArray;
				D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV RaytracingAccelerationStructure;
			};
		};

		struct D3D12_CONSTANT_BUFFER_VIEW_DESC
		{
			D3D12_GPU_VIRTUAL_ADDRESS BufferLocation;
			UINT                      SizeInBytes;
		};

		enum D3D12_FILTER
		{
			D3D12_FILTER_MIN_MAG_MIP_POINT                          = 0,
			D3D12_FILTER_MIN_MAG_POINT_MIP_LINEAR                   = 0x1,
			D3D12_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT             = 0x4,
			D3D12_FILTER_MIN_POINT_MAG_MIP_LINEAR                   = 0x5,
			D3D12_FILTER_MIN_LINEAR_MAG_MIP_POINT                   = 0x10,
			D3D12_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR            = 0x11,
			D3D12_FILTER_MIN_MAG_LINEAR_MIP_POINT                   = 0x14,
			D3D12_FILTER_MIN_MAG_MIP_LINEAR                         = 0x15,
			D3D12_FILTER_ANISOTROPIC                                = 0x55,
			D3D12_FILTER_COMPARISON_MIN_MAG_MIP_POINT               = 0x80,
			D3D12_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR        = 0x81,
			D3D12_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT  = 0x84,
			D3D12_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR        = 0x85,
			D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT        = 0x90,
			D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 0x91,
			D3D12_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT        = 0x94,
			D3D12_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR              = 0x95,
			D3D12_FILTER_COMPARISON_ANISOTROPIC                     = 0xd5,
			D3D12_FILTER_MINIMUM_MIN_MAG_MIP_POINT                  = 0x100,
			D3D12_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR           = 0x101,
			D3D12_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT     = 0x104,
			D3D12_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR           = 0x105,
			D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT           = 0x110,
			D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR    = 0x111,
			D3D12_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT           = 0x114,
			D3D12_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR                 = 0x115,
			D3D12_FILTER_MINIMUM_ANISOTROPIC                        = 0x155,
			D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_POINT                  = 0x180,
			D3D12_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR           = 0x181,
			D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT     = 0x184,
			D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR           = 0x185,
			D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT           = 0x190,
			D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR    = 0x191,
			D3D12_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT           = 0x194,
			D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR                 = 0x195,
			D3D12_FILTER_MAXIMUM_ANISOTROPIC                        = 0x1d5
		};

		enum D3D12_FILTER_TYPE
		{
			D3D12_FILTER_TYPE_POINT  = 0,
			D3D12_FILTER_TYPE_LINEAR = 1
		};

		enum D3D12_FILTER_REDUCTION_TYPE
		{
			D3D12_FILTER_REDUCTION_TYPE_STANDARD   = 0,
			D3D12_FILTER_REDUCTION_TYPE_COMPARISON = 1,
			D3D12_FILTER_REDUCTION_TYPE_MINIMUM    = 2,
			D3D12_FILTER_REDUCTION_TYPE_MAXIMUM    = 3
		};

		static constexpr UINT D3D12_FILTER_REDUCTION_TYPE_MASK  = 0x3;
		static constexpr UINT D3D12_FILTER_REDUCTION_TYPE_SHIFT = 7;
		static constexpr UINT D3D12_FILTER_TYPE_MASK            = 0x3;
		static constexpr UINT D3D12_MIN_FILTER_SHIFT            = 4;
		static constexpr UINT D3D12_MAG_FILTER_SHIFT            = 2;
		static constexpr UINT D3D12_MIP_FILTER_SHIFT            = 0;
		static constexpr UINT D3D12_ANISOTROPIC_FILTERING_BIT   = 0x40;

		static constexpr D3D12_FILTER D3D12_ENCODE_BASIC_FILTER(UINT min, UINT mag, UINT mip, UINT reduction)
		{
			return static_cast<D3D12_FILTER>((min & D3D12_FILTER_TYPE_MASK) << D3D12_MIN_FILTER_SHIFT |
			                                 (mag & D3D12_FILTER_TYPE_MASK) << D3D12_MAG_FILTER_SHIFT |
			                                 (mip & D3D12_FILTER_TYPE_MASK) << D3D12_MIP_FILTER_SHIFT |
			                                 (reduction & D3D12_FILTER_REDUCTION_TYPE_MASK) << D3D12_FILTER_REDUCTION_TYPE_SHIFT);
		}
		static constexpr D3D12_FILTER D3D12_ENCODE_ANISOTROPIC_FILTER(UINT reduction)
		{
			return static_cast<D3D12_FILTER>(D3D12_ANISOTROPIC_FILTERING_BIT | D3D12_ENCODE_BASIC_FILTER(D3D12_FILTER_TYPE_LINEAR, D3D12_FILTER_TYPE_LINEAR, D3D12_FILTER_TYPE_LINEAR, reduction));
		}
		static constexpr D3D12_FILTER_TYPE D3D12_DECODE_MIN_FILTER(D3D12_FILTER D3D12Filter)
		{
			return static_cast<D3D12_FILTER_TYPE>((D3D12Filter >> D3D12_MIN_FILTER_SHIFT) & D3D12_FILTER_TYPE_MASK);
		}
		static constexpr D3D12_FILTER_TYPE D3D12_DECODE_MAG_FILTER(D3D12_FILTER D3D12Filter)
		{
			return static_cast<D3D12_FILTER_TYPE>((D3D12Filter >> D3D12_MAG_FILTER_SHIFT) & D3D12_FILTER_TYPE_MASK);
		}
		static constexpr D3D12_FILTER_TYPE D3D12_DECODE_MIP_FILTER(D3D12_FILTER D3D12Filter)
		{
			return static_cast<D3D12_FILTER_TYPE>((D3D12Filter >> D3D12_MIP_FILTER_SHIFT) & D3D12_FILTER_TYPE_MASK);
		}
		static constexpr D3D12_FILTER_REDUCTION_TYPE D3D12_DECODE_FILTER_REDUCTION(D3D12_FILTER D3D12Filter)
		{
			return static_cast<D3D12_FILTER_REDUCTION_TYPE>((D3D12Filter >> D3D12_FILTER_REDUCTION_TYPE_SHIFT) & D3D12_FILTER_REDUCTION_TYPE_MASK);
		}
		static constexpr BOOL D3D12_DECODE_IS_COMPARISON_FILTER(D3D12_FILTER D3D12Filter)
		{
			return (D3D12_DECODE_FILTER_REDUCTION(D3D12Filter) == D3D12_FILTER_REDUCTION_TYPE_COMPARISON);
		}
		static constexpr BOOL D3D12_DECODE_IS_ANISOTROPIC_FILTER(D3D12_FILTER D3D12Filter)
		{
			return D3D12Filter & D3D12_ANISOTROPIC_FILTERING_BIT && D3D12_FILTER_TYPE_LINEAR == D3D12_DECODE_MIN_FILTER(D3D12Filter) && D3D12_FILTER_TYPE_LINEAR == D3D12_DECODE_MAG_FILTER(D3D12Filter) && D3D12_FILTER_TYPE_LINEAR == D3D12_DECODE_MIP_FILTER(D3D12Filter);
		}

		enum D3D12_TEXTURE_ADDRESS_MODE
		{
			D3D12_TEXTURE_ADDRESS_MODE_WRAP        = 1,
			D3D12_TEXTURE_ADDRESS_MODE_MIRROR      = 2,
			D3D12_TEXTURE_ADDRESS_MODE_CLAMP       = 3,
			D3D12_TEXTURE_ADDRESS_MODE_BORDER      = 4,
			D3D12_TEXTURE_ADDRESS_MODE_MIRROR_ONCE = 5
		};

		struct D3D12_SAMPLER_DESC
		{
			D3D12_FILTER               Filter;
			D3D12_TEXTURE_ADDRESS_MODE AddressU;
			D3D12_TEXTURE_ADDRESS_MODE AddressV;
			D3D12_TEXTURE_ADDRESS_MODE AddressW;
			FLOAT                      MipLODBias;
			UINT                       MaxAnisotropy;
			D3D12_COMPARISON_FUNC      ComparisonFunc;
			FLOAT                      BorderColor[4];
			FLOAT                      MinLOD;
			FLOAT                      MaxLOD;
		};

		enum D3D12_BUFFER_UAV_FLAGS
		{
			D3D12_BUFFER_UAV_FLAG_NONE = 0,
			D3D12_BUFFER_UAV_FLAG_RAW  = 0x1
		};

		struct D3D12_BUFFER_UAV
		{
			std::uint64_t          FirstElement;
			UINT                   NumElements;
			UINT                   StructureByteStride;
			std::uint64_t          CounterOffsetInBytes;
			D3D12_BUFFER_UAV_FLAGS Flags;
		};

		struct D3D12_TEX1D_UAV
		{
			UINT MipSlice;
		};

		struct D3D12_TEX1D_ARRAY_UAV
		{
			UINT MipSlice;
			UINT FirstArraySlice;
			UINT ArraySize;
		};

		struct D3D12_TEX2D_UAV
		{
			UINT MipSlice;
			UINT PlaneSlice;
		};

		struct D3D12_TEX2D_ARRAY_UAV
		{
			UINT MipSlice;
			UINT FirstArraySlice;
			UINT ArraySize;
			UINT PlaneSlice;
		};

		struct D3D12_TEX3D_UAV
		{
			UINT MipSlice;
			UINT FirstWSlice;
			UINT WSize;
		};

		enum D3D12_UAV_DIMENSION
		{
			D3D12_UAV_DIMENSION_UNKNOWN        = 0,
			D3D12_UAV_DIMENSION_BUFFER         = 1,
			D3D12_UAV_DIMENSION_TEXTURE1D      = 2,
			D3D12_UAV_DIMENSION_TEXTURE1DARRAY = 3,
			D3D12_UAV_DIMENSION_TEXTURE2D      = 4,
			D3D12_UAV_DIMENSION_TEXTURE2DARRAY = 5,
			D3D12_UAV_DIMENSION_TEXTURE3D      = 8
		};

		struct D3D12_UNORDERED_ACCESS_VIEW_DESC
		{
			DXGI_FORMAT         Format;
			D3D12_UAV_DIMENSION ViewDimension;
			union
			{
				D3D12_BUFFER_UAV      Buffer;
				D3D12_TEX1D_UAV       Texture1D;
				D3D12_TEX1D_ARRAY_UAV Texture1DArray;
				D3D12_TEX2D_UAV       Texture2D;
				D3D12_TEX2D_ARRAY_UAV Texture2DArray;
				D3D12_TEX3D_UAV       Texture3D;
			};
		};

		struct D3D12_BUFFER_RTV
		{
			std::uint64_t FirstElement;
			UINT          NumElements;
		};

		struct D3D12_TEX1D_RTV
		{
			UINT MipSlice;
		};

		struct D3D12_TEX1D_ARRAY_RTV
		{
			UINT MipSlice;
			UINT FirstArraySlice;
			UINT ArraySize;
		};

		struct D3D12_TEX2D_RTV
		{
			UINT MipSlice;
			UINT PlaneSlice;
		};

		struct D3D12_TEX2DMS_RTV
		{
			UINT UnusedField_NothingToDefine;
		};

		struct D3D12_TEX2D_ARRAY_RTV
		{
			UINT MipSlice;
			UINT FirstArraySlice;
			UINT ArraySize;
			UINT PlaneSlice;
		};

		struct D3D12_TEX2DMS_ARRAY_RTV
		{
			UINT FirstArraySlice;
			UINT ArraySize;
		};

		struct D3D12_TEX3D_RTV
		{
			UINT MipSlice;
			UINT FirstWSlice;
			UINT WSize;
		};

		enum D3D12_RTV_DIMENSION
		{
			D3D12_RTV_DIMENSION_UNKNOWN          = 0,
			D3D12_RTV_DIMENSION_BUFFER           = 1,
			D3D12_RTV_DIMENSION_TEXTURE1D        = 2,
			D3D12_RTV_DIMENSION_TEXTURE1DARRAY   = 3,
			D3D12_RTV_DIMENSION_TEXTURE2D        = 4,
			D3D12_RTV_DIMENSION_TEXTURE2DARRAY   = 5,
			D3D12_RTV_DIMENSION_TEXTURE2DMS      = 6,
			D3D12_RTV_DIMENSION_TEXTURE2DMSARRAY = 7,
			D3D12_RTV_DIMENSION_TEXTURE3D        = 8
		};

		struct D3D12_RENDER_TARGET_VIEW_DESC
		{
			DXGI_FORMAT         Format;
			D3D12_RTV_DIMENSION ViewDimension;
			union
			{
				D3D12_BUFFER_RTV        Buffer;
				D3D12_TEX1D_RTV         Texture1D;
				D3D12_TEX1D_ARRAY_RTV   Texture1DArray;
				D3D12_TEX2D_RTV         Texture2D;
				D3D12_TEX2D_ARRAY_RTV   Texture2DArray;
				D3D12_TEX2DMS_RTV       Texture2DMS;
				D3D12_TEX2DMS_ARRAY_RTV Texture2DMSArray;
				D3D12_TEX3D_RTV         Texture3D;
			};
		};

		struct D3D12_TEX1D_DSV
		{
			UINT MipSlice;
		};

		struct D3D12_TEX1D_ARRAY_DSV
		{
			UINT MipSlice;
			UINT FirstArraySlice;
			UINT ArraySize;
		};

		struct D3D12_TEX2D_DSV
		{
			UINT MipSlice;
		};

		struct D3D12_TEX2D_ARRAY_DSV
		{
			UINT MipSlice;
			UINT FirstArraySlice;
			UINT ArraySize;
		};

		struct D3D12_TEX2DMS_DSV
		{
			UINT UnusedField_NothingToDefine;
		};

		struct D3D12_TEX2DMS_ARRAY_DSV
		{
			UINT FirstArraySlice;
			UINT ArraySize;
		};

		enum D3D12_DSV_FLAGS
		{
			D3D12_DSV_FLAG_NONE              = 0,
			D3D12_DSV_FLAG_READ_ONLY_DEPTH   = 0x1,
			D3D12_DSV_FLAG_READ_ONLY_STENCIL = 0x2
		};

		enum D3D12_DSV_DIMENSION
		{
			D3D12_DSV_DIMENSION_UNKNOWN          = 0,
			D3D12_DSV_DIMENSION_TEXTURE1D        = 1,
			D3D12_DSV_DIMENSION_TEXTURE1DARRAY   = 2,
			D3D12_DSV_DIMENSION_TEXTURE2D        = 3,
			D3D12_DSV_DIMENSION_TEXTURE2DARRAY   = 4,
			D3D12_DSV_DIMENSION_TEXTURE2DMS      = 5,
			D3D12_DSV_DIMENSION_TEXTURE2DMSARRAY = 6
		};

		struct D3D12_DEPTH_STENCIL_VIEW_DESC
		{
			DXGI_FORMAT         Format;
			D3D12_DSV_DIMENSION ViewDimension;
			D3D12_DSV_FLAGS     Flags;
			union
			{
				D3D12_TEX1D_DSV         Texture1D;
				D3D12_TEX1D_ARRAY_DSV   Texture1DArray;
				D3D12_TEX2D_DSV         Texture2D;
				D3D12_TEX2D_ARRAY_DSV   Texture2DArray;
				D3D12_TEX2DMS_DSV       Texture2DMS;
				D3D12_TEX2DMS_ARRAY_DSV Texture2DMSArray;
			};
		};

		enum D3D12_CLEAR_FLAGS
		{
			D3D12_CLEAR_FLAG_DEPTH   = 0x1,
			D3D12_CLEAR_FLAG_STENCIL = 0x2
		};

		enum D3D12_FENCE_FLAGS
		{
			D3D12_FENCE_FLAG_NONE                 = 0,
			D3D12_FENCE_FLAG_SHARED               = 0x1,
			D3D12_FENCE_FLAG_SHARED_CROSS_ADAPTER = 0x2,
			D3D12_FENCE_FLAG_NON_MONITORED        = 0x4
		};

		enum D3D12_DESCRIPTOR_HEAP_TYPE
		{
			D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV = 0,
			D3D12_DESCRIPTOR_HEAP_TYPE_SAMPLER     = (D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV + 1),
			D3D12_DESCRIPTOR_HEAP_TYPE_RTV         = (D3D12_DESCRIPTOR_HEAP_TYPE_SAMPLER + 1),
			D3D12_DESCRIPTOR_HEAP_TYPE_DSV         = (D3D12_DESCRIPTOR_HEAP_TYPE_RTV + 1),
			D3D12_DESCRIPTOR_HEAP_TYPE_NUM_TYPES   = (D3D12_DESCRIPTOR_HEAP_TYPE_DSV + 1)
		};

		enum D3D12_DESCRIPTOR_HEAP_FLAGS
		{
			D3D12_DESCRIPTOR_HEAP_FLAG_NONE           = 0,
			D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE = 0x1
		};

		struct D3D12_DESCRIPTOR_HEAP_DESC
		{
			D3D12_DESCRIPTOR_HEAP_TYPE  Type;
			UINT                        NumDescriptors;
			D3D12_DESCRIPTOR_HEAP_FLAGS Flags;
			UINT                        NodeMask;
		};

		enum D3D12_DESCRIPTOR_RANGE_TYPE
		{
			D3D12_DESCRIPTOR_RANGE_TYPE_SRV     = 0,
			D3D12_DESCRIPTOR_RANGE_TYPE_UAV     = (D3D12_DESCRIPTOR_RANGE_TYPE_SRV + 1),
			D3D12_DESCRIPTOR_RANGE_TYPE_CBV     = (D3D12_DESCRIPTOR_RANGE_TYPE_UAV + 1),
			D3D12_DESCRIPTOR_RANGE_TYPE_SAMPLER = (D3D12_DESCRIPTOR_RANGE_TYPE_CBV + 1)
		};

		struct D3D12_DESCRIPTOR_RANGE
		{
			D3D12_DESCRIPTOR_RANGE_TYPE RangeType;
			UINT                        NumDescriptors;
			UINT                        BaseShaderRegister;
			UINT                        RegisterSpace;
			UINT                        OffsetInDescriptorsFromTableStart;
		};

		struct D3D12_ROOT_DESCRIPTOR_TABLE
		{
			UINT                          NumDescriptorRanges;
			const D3D12_DESCRIPTOR_RANGE* pDescriptorRanges;
		};

		struct D3D12_ROOT_CONSTANTS
		{
			UINT ShaderRegister;
			UINT RegisterSpace;
			UINT Num32BitValues;
		};

		struct D3D12_ROOT_DESCRIPTOR
		{
			UINT ShaderRegister;
			UINT RegisterSpace;
		};

		enum D3D12_SHADER_VISIBILITY
		{
			D3D12_SHADER_VISIBILITY_ALL           = 0,
			D3D12_SHADER_VISIBILITY_VERTEX        = 1,
			D3D12_SHADER_VISIBILITY_HULL          = 2,
			D3D12_SHADER_VISIBILITY_DOMAIN        = 3,
			D3D12_SHADER_VISIBILITY_GEOMETRY      = 4,
			D3D12_SHADER_VISIBILITY_PIXEL         = 5,
			D3D12_SHADER_VISIBILITY_AMPLIFICATION = 6,
			D3D12_SHADER_VISIBILITY_MESH          = 7
		};

		enum D3D12_ROOT_PARAMETER_TYPE
		{
			D3D12_ROOT_PARAMETER_TYPE_DESCRIPTOR_TABLE = 0,
			D3D12_ROOT_PARAMETER_TYPE_32BIT_CONSTANTS  = (D3D12_ROOT_PARAMETER_TYPE_DESCRIPTOR_TABLE + 1),
			D3D12_ROOT_PARAMETER_TYPE_CBV              = (D3D12_ROOT_PARAMETER_TYPE_32BIT_CONSTANTS + 1),
			D3D12_ROOT_PARAMETER_TYPE_SRV              = (D3D12_ROOT_PARAMETER_TYPE_CBV + 1),
			D3D12_ROOT_PARAMETER_TYPE_UAV              = (D3D12_ROOT_PARAMETER_TYPE_SRV + 1)
		};

		struct D3D12_ROOT_PARAMETER
		{
			D3D12_ROOT_PARAMETER_TYPE ParameterType;
			union
			{
				D3D12_ROOT_DESCRIPTOR_TABLE DescriptorTable;
				D3D12_ROOT_CONSTANTS        Constants;
				D3D12_ROOT_DESCRIPTOR       Descriptor;
			};
			D3D12_SHADER_VISIBILITY ShaderVisibility;
		};

		enum D3D12_ROOT_SIGNATURE_FLAGS
		{
			D3D12_ROOT_SIGNATURE_FLAG_NONE                                  = 0,
			D3D12_ROOT_SIGNATURE_FLAG_ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT    = 0x1,
			D3D12_ROOT_SIGNATURE_FLAG_DENY_VERTEX_SHADER_ROOT_ACCESS        = 0x2,
			D3D12_ROOT_SIGNATURE_FLAG_DENY_HULL_SHADER_ROOT_ACCESS          = 0x4,
			D3D12_ROOT_SIGNATURE_FLAG_DENY_DOMAIN_SHADER_ROOT_ACCESS        = 0x8,
			D3D12_ROOT_SIGNATURE_FLAG_DENY_GEOMETRY_SHADER_ROOT_ACCESS      = 0x10,
			D3D12_ROOT_SIGNATURE_FLAG_DENY_PIXEL_SHADER_ROOT_ACCESS         = 0x20,
			D3D12_ROOT_SIGNATURE_FLAG_ALLOW_STREAM_OUTPUT                   = 0x40,
			D3D12_ROOT_SIGNATURE_FLAG_LOCAL_ROOT_SIGNATURE                  = 0x80,
			D3D12_ROOT_SIGNATURE_FLAG_DENY_AMPLIFICATION_SHADER_ROOT_ACCESS = 0x100,
			D3D12_ROOT_SIGNATURE_FLAG_DENY_MESH_SHADER_ROOT_ACCESS          = 0x200,
			D3D12_ROOT_SIGNATURE_FLAG_CBV_SRV_UAV_HEAP_DIRECTLY_INDEXED     = 0x400,
			D3D12_ROOT_SIGNATURE_FLAG_SAMPLER_HEAP_DIRECTLY_INDEXED         = 0x800
		};

		enum D3D12_STATIC_BORDER_COLOR
		{
			D3D12_STATIC_BORDER_COLOR_TRANSPARENT_BLACK = 0,
			D3D12_STATIC_BORDER_COLOR_OPAQUE_BLACK      = (D3D12_STATIC_BORDER_COLOR_TRANSPARENT_BLACK + 1),
			D3D12_STATIC_BORDER_COLOR_OPAQUE_WHITE      = (D3D12_STATIC_BORDER_COLOR_OPAQUE_BLACK + 1)
		};

		struct D3D12_STATIC_SAMPLER_DESC
		{
			D3D12_FILTER               Filter;
			D3D12_TEXTURE_ADDRESS_MODE AddressU;
			D3D12_TEXTURE_ADDRESS_MODE AddressV;
			D3D12_TEXTURE_ADDRESS_MODE AddressW;
			FLOAT                      MipLODBias;
			UINT                       MaxAnisotropy;
			D3D12_COMPARISON_FUNC      ComparisonFunc;
			D3D12_STATIC_BORDER_COLOR  BorderColor;
			FLOAT                      MinLOD;
			FLOAT                      MaxLOD;
			UINT                       ShaderRegister;
			UINT                       RegisterSpace;
			D3D12_SHADER_VISIBILITY    ShaderVisibility;
		};

		struct D3D12_ROOT_SIGNATURE_DESC
		{
			UINT                             NumParameters;
			const D3D12_ROOT_PARAMETER*      pParameters;
			UINT                             NumStaticSamplers;
			const D3D12_STATIC_SAMPLER_DESC* pStaticSamplers;
			D3D12_ROOT_SIGNATURE_FLAGS       Flags;
		};

		enum D3D12_DESCRIPTOR_RANGE_FLAGS
		{
			D3D12_DESCRIPTOR_RANGE_FLAG_NONE                                            = 0,
			D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_VOLATILE                            = 0x1,
			D3D12_DESCRIPTOR_RANGE_FLAG_DATA_VOLATILE                                   = 0x2,
			D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC_WHILE_SET_AT_EXECUTE                = 0x4,
			D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC                                     = 0x8,
			D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_STATIC_KEEPING_BUFFER_BOUNDS_CHECKS = 0x10000
		};

		struct D3D12_DESCRIPTOR_RANGE1
		{
			D3D12_DESCRIPTOR_RANGE_TYPE  RangeType;
			UINT                         NumDescriptors;
			UINT                         BaseShaderRegister;
			UINT                         RegisterSpace;
			D3D12_DESCRIPTOR_RANGE_FLAGS Flags;
			UINT                         OffsetInDescriptorsFromTableStart;
		};

		struct D3D12_ROOT_DESCRIPTOR_TABLE1
		{
			UINT                           NumDescriptorRanges;
			const D3D12_DESCRIPTOR_RANGE1* pDescriptorRanges;
		};

		enum D3D12_ROOT_DESCRIPTOR_FLAGS
		{
			D3D12_ROOT_DESCRIPTOR_FLAG_NONE                             = 0,
			D3D12_ROOT_DESCRIPTOR_FLAG_DATA_VOLATILE                    = 0x2,
			D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC_WHILE_SET_AT_EXECUTE = 0x4,
			D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC                      = 0x8
		};

		struct D3D12_ROOT_DESCRIPTOR1
		{
			UINT                        ShaderRegister;
			UINT                        RegisterSpace;
			D3D12_ROOT_DESCRIPTOR_FLAGS Flags;
		};

		struct D3D12_ROOT_PARAMETER1
		{
			D3D12_ROOT_PARAMETER_TYPE ParameterType;
			union
			{
				D3D12_ROOT_DESCRIPTOR_TABLE1 DescriptorTable;
				D3D12_ROOT_CONSTANTS         Constants;
				D3D12_ROOT_DESCRIPTOR1       Descriptor;
			};
			D3D12_SHADER_VISIBILITY ShaderVisibility;
		};

		struct D3D12_ROOT_SIGNATURE_DESC1
		{
			UINT                             NumParameters;
			const D3D12_ROOT_PARAMETER1*     pParameters;
			UINT                             NumStaticSamplers;
			const D3D12_STATIC_SAMPLER_DESC* pStaticSamplers;
			D3D12_ROOT_SIGNATURE_FLAGS       Flags;
		};

		struct D3D12_VERSIONED_ROOT_SIGNATURE_DESC
		{
			D3D_ROOT_SIGNATURE_VERSION Version;
			union
			{
				D3D12_ROOT_SIGNATURE_DESC  Desc_1_0;
				D3D12_ROOT_SIGNATURE_DESC1 Desc_1_1;
			};
		};

		MIDL_INTERFACE("34AB647B-3CC8-46AC-841B-C0965645C046")
		ID3D12RootSignatureDeserializer : public IUnknown
		{
		public:
			virtual const D3D12_ROOT_SIGNATURE_DESC* GetRootSignatureDesc() = 0;
		};

		MIDL_INTERFACE("7F91CE67-090C-4BB7-B78E-ED8FF2E31DA0")
		ID3D12VersionedRootSignatureDeserializer : public IUnknown
		{
		public:
			virtual HRESULT GetRootSignatureDescAtVersion(D3D_ROOT_SIGNATURE_VERSION convertToVersion, const D3D12_VERSIONED_ROOT_SIGNATURE_DESC** ppDesc) = 0;

			virtual const D3D12_VERSIONED_ROOT_SIGNATURE_DESC* GetUnconvertedRootSignatureDesc() = 0;
		};

		using PFN_D3D12_SERIALIZE_ROOT_SIGNATURE = HRESULT (*)(const D3D12_ROOT_SIGNATURE_DESC* pRootSignature, D3D_ROOT_SIGNATURE_VERSION Version, ID3DBlob** ppBlob, ID3DBlob** ppErrorBlob);
		HRESULT D3D12SerializeRootSignature(const D3D12_ROOT_SIGNATURE_DESC* pRootSignature, D3D_ROOT_SIGNATURE_VERSION Version, ID3DBlob** ppBlob, ID3DBlob** ppErrorBlob);

		using PFN_D3D12_CREATE_ROOT_SIGNATURE_DESERIALIZER = HRESULT (*)(LPCVOID pSrcData, SIZE_T SrcDataSizeInBytes, const GUID& pRootSignatureDeserializerInterface, void** ppRootSignatureDeserializer);
		HRESULT D3D12CreateRootSignatureDeserializer(LPCVOID pSrcData, SIZE_T SrcDataSizeInBytes, const GUID& pRootSignatureDeserializerInterface, void** ppRootSignatureDeserializer);

		using PFN_D3D12_SERIALIZE_VERSIONED_ROOT_SIGNATURE = HRESULT (*)(const D3D12_VERSIONED_ROOT_SIGNATURE_DESC* pRootSignature, ID3DBlob** ppBlob, ID3DBlob** ppErrorBlob);
		HRESULT D3D12SerializeVersionedRootSignature(const D3D12_VERSIONED_ROOT_SIGNATURE_DESC* pRootSignature, ID3DBlob** ppBlob, ID3DBlob** ppErrorBlob);

		using PFN_D3D12_CREATE_VERSIONED_ROOT_SIGNATURE_DESERIALIZER = HRESULT (*)(LPCVOID pSrcData, SIZE_T SrcDataSizeInBytes, const GUID& pRootSignatureDeserializerInterface, void** ppRootSignatureDeserializer);
		HRESULT D3D12CreateVersionedRootSignatureDeserializer(LPCVOID pSrcData, SIZE_T SrcDataSizeInBytes, const GUID& pRootSignatureDeserializerInterface, void** ppRootSignatureDeserializer);

		struct D3D12_CPU_DESCRIPTOR_HANDLE
		{
			SIZE_T ptr;
		};

		struct D3D12_GPU_DESCRIPTOR_HANDLE
		{
			std::uint64_t ptr;
		};

		struct D3D12_DISCARD_REGION
		{
			UINT              NumRects;
			const D3D12_RECT* pRects;
			UINT              FirstSubresource;
			UINT              NumSubresources;
		};

		enum D3D12_QUERY_HEAP_TYPE
		{
			D3D12_QUERY_HEAP_TYPE_OCCLUSION               = 0,
			D3D12_QUERY_HEAP_TYPE_TIMESTAMP               = 1,
			D3D12_QUERY_HEAP_TYPE_PIPELINE_STATISTICS     = 2,
			D3D12_QUERY_HEAP_TYPE_SO_STATISTICS           = 3,
			D3D12_QUERY_HEAP_TYPE_VIDEO_DECODE_STATISTICS = 4,
			D3D12_QUERY_HEAP_TYPE_COPY_QUEUE_TIMESTAMP    = 5,
			D3D12_QUERY_HEAP_TYPE_PIPELINE_STATISTICS1    = 7
		};

		struct D3D12_QUERY_HEAP_DESC
		{
			D3D12_QUERY_HEAP_TYPE Type;
			UINT                  Count;
			UINT                  NodeMask;
		};

		enum D3D12_QUERY_TYPE
		{
			D3D12_QUERY_TYPE_OCCLUSION               = 0,
			D3D12_QUERY_TYPE_BINARY_OCCLUSION        = 1,
			D3D12_QUERY_TYPE_TIMESTAMP               = 2,
			D3D12_QUERY_TYPE_PIPELINE_STATISTICS     = 3,
			D3D12_QUERY_TYPE_SO_STATISTICS_STREAM0   = 4,
			D3D12_QUERY_TYPE_SO_STATISTICS_STREAM1   = 5,
			D3D12_QUERY_TYPE_SO_STATISTICS_STREAM2   = 6,
			D3D12_QUERY_TYPE_SO_STATISTICS_STREAM3   = 7,
			D3D12_QUERY_TYPE_VIDEO_DECODE_STATISTICS = 8,
			D3D12_QUERY_TYPE_PIPELINE_STATISTICS1    = 10
		};

		enum D3D12_PREDICATION_OP
		{
			D3D12_PREDICATION_OP_EQUAL_ZERO     = 0,
			D3D12_PREDICATION_OP_NOT_EQUAL_ZERO = 1
		};

		struct D3D12_QUERY_DATA_PIPELINE_STATISTICS
		{
			std::uint64_t IAVertices;
			std::uint64_t IAPrimitives;
			std::uint64_t VSInvocations;
			std::uint64_t GSInvocations;
			std::uint64_t GSPrimitives;
			std::uint64_t CInvocations;
			std::uint64_t CPrimitives;
			std::uint64_t PSInvocations;
			std::uint64_t HSInvocations;
			std::uint64_t DSInvocations;
			std::uint64_t CSInvocations;
		};

		struct D3D12_QUERY_DATA_PIPELINE_STATISTICS1
		{
			std::uint64_t IAVertices;
			std::uint64_t IAPrimitives;
			std::uint64_t VSInvocations;
			std::uint64_t GSInvocations;
			std::uint64_t GSPrimitives;
			std::uint64_t CInvocations;
			std::uint64_t CPrimitives;
			std::uint64_t PSInvocations;
			std::uint64_t HSInvocations;
			std::uint64_t DSInvocations;
			std::uint64_t CSInvocations;
			std::uint64_t ASInvocations;
			std::uint64_t MSInvocations;
			std::uint64_t MSPrimitives;
		};

		struct D3D12_QUERY_DATA_SO_STATISTICS
		{
			std::uint64_t NumPrimitivesWritten;
			std::uint64_t PrimitivesStorageNeeded;
		};

		struct D3D12_STREAM_OUTPUT_BUFFER_VIEW
		{
			D3D12_GPU_VIRTUAL_ADDRESS BufferLocation;
			std::uint64_t             SizeInBytes;
			D3D12_GPU_VIRTUAL_ADDRESS BufferFilledSizeLocation;
		};

		struct D3D12_DRAW_ARGUMENTS
		{
			UINT VertexCountPerInstance;
			UINT InstanceCount;
			UINT StartVertexLocation;
			UINT StartInstanceLocation;
		};

		struct D3D12_DRAW_INDEXED_ARGUMENTS
		{
			UINT IndexCountPerInstance;
			UINT InstanceCount;
			UINT StartIndexLocation;
			INT  BaseVertexLocation;
			UINT StartInstanceLocation;
		};

		struct D3D12_DISPATCH_ARGUMENTS
		{
			UINT ThreadGroupCountX;
			UINT ThreadGroupCountY;
			UINT ThreadGroupCountZ;
		};

		struct D3D12_VERTEX_BUFFER_VIEW
		{
			D3D12_GPU_VIRTUAL_ADDRESS BufferLocation;
			UINT                      SizeInBytes;
			UINT                      StrideInBytes;
		};

		struct D3D12_INDEX_BUFFER_VIEW
		{
			D3D12_GPU_VIRTUAL_ADDRESS BufferLocation;
			UINT                      SizeInBytes;
			DXGI_FORMAT               Format;
		};

		enum D3D12_INDIRECT_ARGUMENT_TYPE
		{
			D3D12_INDIRECT_ARGUMENT_TYPE_DRAW                  = 0,
			D3D12_INDIRECT_ARGUMENT_TYPE_DRAW_INDEXED          = (D3D12_INDIRECT_ARGUMENT_TYPE_DRAW + 1),
			D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH              = (D3D12_INDIRECT_ARGUMENT_TYPE_DRAW_INDEXED + 1),
			D3D12_INDIRECT_ARGUMENT_TYPE_VERTEX_BUFFER_VIEW    = (D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH + 1),
			D3D12_INDIRECT_ARGUMENT_TYPE_INDEX_BUFFER_VIEW     = (D3D12_INDIRECT_ARGUMENT_TYPE_VERTEX_BUFFER_VIEW + 1),
			D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT              = (D3D12_INDIRECT_ARGUMENT_TYPE_INDEX_BUFFER_VIEW + 1),
			D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT_BUFFER_VIEW  = (D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT + 1),
			D3D12_INDIRECT_ARGUMENT_TYPE_SHADER_RESOURCE_VIEW  = (D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT_BUFFER_VIEW + 1),
			D3D12_INDIRECT_ARGUMENT_TYPE_UNORDERED_ACCESS_VIEW = (D3D12_INDIRECT_ARGUMENT_TYPE_SHADER_RESOURCE_VIEW + 1),
			D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_RAYS         = (D3D12_INDIRECT_ARGUMENT_TYPE_UNORDERED_ACCESS_VIEW + 1),
			D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_MESH         = (D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_RAYS + 1)
		};

		struct D3D12_INDIRECT_ARGUMENT_DESC
		{
			D3D12_INDIRECT_ARGUMENT_TYPE Type;
			union
			{
				struct
				{
					UINT Slot;
				} VertexBuffer;
				struct
				{
					UINT RootParameterIndex;
					UINT DestOffsetIn32BitValues;
					UINT Num32BitValuesToSet;
				} Constant;
				struct
				{
					UINT RootParameterIndex;
				} ConstantBufferView;
				struct
				{
					UINT RootParameterIndex;
				} ShaderResourceView;
				struct
				{
					UINT RootParameterIndex;
				} UnorderedAccessView;
			};
		};

		struct D3D12_COMMAND_SIGNATURE_DESC
		{
			UINT                                ByteStride;
			UINT                                NumArgumentDescs;
			const D3D12_INDIRECT_ARGUMENT_DESC* pArgumentDescs;
			UINT                                NodeMask;
		};

		MIDL_INTERFACE("63ee58fb-1268-4835-86da-f008ce62f0d6")
		ID3D12Pageable : public ID3D12DeviceChild {
			public:
		};

		MIDL_INTERFACE("6b3b2502-6e51-45b3-90ee-9884265e8df3")
		ID3D12Heap : public ID3D12Pageable
		{
		public:
			virtual D3D12_HEAP_DESC GetDesc() = 0;
		};

		MIDL_INTERFACE("696442be-a72e-4059-bc79-5b5c98040fad")
		ID3D12Resource : public ID3D12Pageable
		{
		public:
			virtual HRESULT Map(UINT Subresource, const D3D12_RANGE* pReadRange, void** ppData) = 0;
			virtual void    Unmap(UINT Subresource, const D3D12_RANGE* pWrittenRange)           = 0;

			virtual D3D12_RESOURCE_DESC GetDesc() = 0;

			virtual D3D12_GPU_VIRTUAL_ADDRESS GetGPUVirtualAddress() = 0;

			virtual HRESULT WriteToSubresource(UINT DstSubresource, const D3D12_BOX* pDstBox, const void* pSrcData, UINT SrcRowPitch, UINT SrcDepthPitch) = 0;
			virtual HRESULT ReadFromSubresource(void* pDstData, UINT DstRowPitch, UINT DstDepthPitch, UINT SrcSubresource, const D3D12_BOX* pSrcBox)      = 0;

			virtual HRESULT GetHeapProperties(D3D12_HEAP_PROPERTIES * pHeapProperties, D3D12_HEAP_FLAGS * pHeapFlags) = 0;
		};

		MIDL_INTERFACE("6102dee4-af59-4b09-b999-b44d73f09b24")
		ID3D12CommandAllocator : public ID3D12Pageable
		{
		public:
			virtual HRESULT Reset() = 0;
		};

		MIDL_INTERFACE("0a753dcf-c4d8-4b91-adf6-be5a60d95a76")
		ID3D12Fence : public ID3D12Pageable
		{
		public:
			virtual std::uint64_t GetCompletedValue(void)                                  = 0;
			virtual HRESULT       SetEventOnCompletion(std::uint64_t Value, HANDLE hEvent) = 0;
			virtual HRESULT       Signal(std::uint64_t Value)                              = 0;
		};

		MIDL_INTERFACE("433685fe-e22b-4ca0-a8db-b5b4f4dd0e4a")
		ID3D12Fence1 : public ID3D12Fence
		{
		public:
			virtual D3D12_FENCE_FLAGS GetCreationFlags() = 0;
		};

		MIDL_INTERFACE("765a30f3-f624-4c6f-a828-ace948622445")
		ID3D12PipelineState : public ID3D12Pageable
		{
		public:
			virtual HRESULT GetCachedBlob(ID3DBlob * *ppBlob) = 0;
		};

		MIDL_INTERFACE("8efb471d-616c-4f49-90f7-127bb763fa51")
		ID3D12DescriptorHeap : public ID3D12Pageable
		{
		public:
			virtual D3D12_DESCRIPTOR_HEAP_DESC GetDesc() = 0;

			virtual D3D12_CPU_DESCRIPTOR_HANDLE GetCPUDescriptorHandleForHeapStart() = 0;
			virtual D3D12_GPU_DESCRIPTOR_HANDLE GetGPUDescriptorHandleForHeapStart() = 0;
		};

		MIDL_INTERFACE("0d9658ae-ed45-469e-a61d-970ec583cab4")
		ID3D12QueryHeap : public ID3D12Pageable {
			public:
		};

		MIDL_INTERFACE("c36a797c-ec80-4f0a-8985-a7b2475082d1")
		ID3D12CommandSignature : public ID3D12Pageable {
			public:
		};

		MIDL_INTERFACE("7116d91c-e7e4-47ce-b8c6-ec8168f437e5")
		ID3D12CommandList : public ID3D12DeviceChild
		{
		public:
			virtual D3D12_COMMAND_LIST_TYPE GetType() = 0;
		};

		MIDL_INTERFACE("5b160d0f-ac1b-4185-8ba8-b3ae42a5a455")
		ID3D12GraphicsCommandList : public ID3D12CommandList
		{
		public:
			virtual HRESULT Close() = 0;

			virtual HRESULT Reset(ID3D12CommandAllocator * pAllocator, ID3D12PipelineState * pInitialState) = 0;

			virtual void ClearState(ID3D12PipelineState * pPipelineState) = 0;

			virtual void DrawInstanced(UINT VertexCountPerInstance, UINT InstanceCount, UINT StartVertexLocation, UINT StartInstanceLocation)                              = 0;
			virtual void DrawIndexedInstanced(UINT IndexCountPerInstance, UINT InstanceCount, UINT StartIndexLocation, INT BaseVertexLocation, UINT StartInstanceLocation) = 0;

			virtual void Dispatch(UINT ThreadGroupCountX, UINT ThreadGroupCountY, UINT ThreadGroupCountZ) = 0;

			virtual void CopyBufferRegion(ID3D12Resource * pDstBuffer, std::uint64_t DstOffset, ID3D12Resource * pSrcBuffer, std::uint64_t SrcOffset, std::uint64_t NumBytes)                                                                                                       = 0;
			virtual void CopyTextureRegion(const D3D12_TEXTURE_COPY_LOCATION* pDst, UINT DstX, UINT DstY, UINT DstZ, const D3D12_TEXTURE_COPY_LOCATION* pSrc, const D3D12_BOX* pSrcBox)                                                                                             = 0;
			virtual void CopyResource(ID3D12Resource * pDstResource, ID3D12Resource * pSrcResource)                                                                                                                                                                                 = 0;
			virtual void CopyTiles(ID3D12Resource * pTiledResource, const D3D12_TILED_RESOURCE_COORDINATE* pTileRegionStartCoordinate, const D3D12_TILE_REGION_SIZE* pTileRegionSize, ID3D12Resource* pBuffer, std::uint64_t BufferStartOffsetInBytes, D3D12_TILE_COPY_FLAGS Flags) = 0;

			virtual void ResolveSubresource(ID3D12Resource * pDstResource, UINT DstSubresource, ID3D12Resource * pSrcResource, UINT SrcSubresource, DXGI_FORMAT Format) = 0;

			virtual void IASetPrimitiveTopology(D3D12_PRIMITIVE_TOPOLOGY PrimitiveTopology) = 0;

			virtual void RSSetViewports(UINT NumViewports, const D3D12_VIEWPORT* pViewports) = 0;
			virtual void RSSetScissorRects(UINT NumRects, const D3D12_RECT* pRects)          = 0;

			virtual void OMSetBlendFactor(const FLOAT BlendFactor[4]) = 0;
			virtual void OMSetStencilRef(UINT StencilRef)             = 0;

			virtual void SetPipelineState(ID3D12PipelineState * pPipelineState) = 0;

			virtual void ResourceBarrier(UINT NumBarriers, const D3D12_RESOURCE_BARRIER* pBarriers) = 0;

			virtual void ExecuteBundle(ID3D12GraphicsCommandList * pCommandList) = 0;

			virtual void SetDescriptorHeaps(UINT NumDescriptorHeaps, ID3D12DescriptorHeap* const* ppDescriptorHeaps)                                          = 0;
			virtual void SetComputeRootSignature(ID3D12RootSignature * pRootSignature)                                                                        = 0;
			virtual void SetGraphicsRootSignature(ID3D12RootSignature * pRootSignature)                                                                       = 0;
			virtual void SetComputeRootDescriptorTable(UINT RootParameterIndex, D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor)                                   = 0;
			virtual void SetGraphicsRootDescriptorTable(UINT RootParameterIndex, D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor)                                  = 0;
			virtual void SetComputeRoot32BitConstant(UINT RootParameterIndex, UINT SrcData, UINT DestOffsetIn32BitValues)                                     = 0;
			virtual void SetGraphicsRoot32BitConstant(UINT RootParameterIndex, UINT SrcData, UINT DestOffsetIn32BitValues)                                    = 0;
			virtual void SetComputeRoot32BitConstants(UINT RootParameterIndex, UINT Num32BitValuesToSet, const void* pSrcData, UINT DestOffsetIn32BitValues)  = 0;
			virtual void SetGraphicsRoot32BitConstants(UINT RootParameterIndex, UINT Num32BitValuesToSet, const void* pSrcData, UINT DestOffsetIn32BitValues) = 0;
			virtual void SetComputeRootConstantBufferView(UINT RootParameterIndex, D3D12_GPU_VIRTUAL_ADDRESS BufferLocation)                                  = 0;
			virtual void SetGraphicsRootConstantBufferView(UINT RootParameterIndex, D3D12_GPU_VIRTUAL_ADDRESS BufferLocation)                                 = 0;
			virtual void SetComputeRootShaderResourceView(UINT RootParameterIndex, D3D12_GPU_VIRTUAL_ADDRESS BufferLocation)                                  = 0;
			virtual void SetGraphicsRootShaderResourceView(UINT RootParameterIndex, D3D12_GPU_VIRTUAL_ADDRESS BufferLocation)                                 = 0;
			virtual void SetComputeRootUnorderedAccessView(UINT RootParameterIndex, D3D12_GPU_VIRTUAL_ADDRESS BufferLocation)                                 = 0;
			virtual void SetGraphicsRootUnorderedAccessView(UINT RootParameterIndex, D3D12_GPU_VIRTUAL_ADDRESS BufferLocation)                                = 0;

			virtual void IASetIndexBuffer(const D3D12_INDEX_BUFFER_VIEW* pView)                                    = 0;
			virtual void IASetVertexBuffers(UINT StartSlot, UINT NumViews, const D3D12_VERTEX_BUFFER_VIEW* pViews) = 0;

			virtual void SOSetTargets(UINT StartSlot, UINT NumViews, const D3D12_STREAM_OUTPUT_BUFFER_VIEW* pViews)                                                                                                                          = 0;
			virtual void OMSetRenderTargets(UINT NumRenderTargetDescriptors, const D3D12_CPU_DESCRIPTOR_HANDLE* pRenderTargetDescriptors, BOOL RTsSingleHandleToDescriptorRange, const D3D12_CPU_DESCRIPTOR_HANDLE* pDepthStencilDescriptor) = 0;

			virtual void ClearDepthStencilView(D3D12_CPU_DESCRIPTOR_HANDLE DepthStencilView, D3D12_CLEAR_FLAGS ClearFlags, FLOAT Depth, std::uint8_t Stencil, UINT NumRects, const D3D12_RECT* pRects)                                                = 0;
			virtual void ClearRenderTargetView(D3D12_CPU_DESCRIPTOR_HANDLE RenderTargetView, const FLOAT ColorRGBA[4], UINT NumRects, const D3D12_RECT* pRects)                                                                                       = 0;
			virtual void ClearUnorderedAccessViewUint(D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap, D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle, ID3D12Resource * pResource, const UINT Values[4], UINT NumRects, const D3D12_RECT* pRects)   = 0;
			virtual void ClearUnorderedAccessViewFloat(D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap, D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle, ID3D12Resource * pResource, const FLOAT Values[4], UINT NumRects, const D3D12_RECT* pRects) = 0;

			virtual void DiscardResource(ID3D12Resource * pResource, const D3D12_DISCARD_REGION* pRegion) = 0;

			virtual void BeginQuery(ID3D12QueryHeap * pQueryHeap, D3D12_QUERY_TYPE Type, UINT Index) = 0;
			virtual void EndQuery(ID3D12QueryHeap * pQueryHeap, D3D12_QUERY_TYPE Type, UINT Index)   = 0;

			virtual void ResolveQueryData(ID3D12QueryHeap * pQueryHeap, D3D12_QUERY_TYPE Type, UINT StartIndex, UINT NumQueries, ID3D12Resource * pDestinationBuffer, std::uint64_t AlignedDestinationBufferOffset) = 0;

			virtual void SetPredication(ID3D12Resource * pBuffer, std::uint64_t AlignedBufferOffset, D3D12_PREDICATION_OP Operation) = 0;

			virtual void SetMarker(UINT Metadata, const void* pData, UINT Size) = 0;

			virtual void BeginEvent(UINT Metadata, const void* pData, UINT Size) = 0;
			virtual void EndEvent()                                              = 0;

			virtual void ExecuteIndirect(ID3D12CommandSignature * pCommandSignature, UINT MaxCommandCount, ID3D12Resource * pArgumentBuffer, std::uint64_t ArgumentBufferOffset, ID3D12Resource * pCountBuffer, std::uint64_t CountBufferOffset) = 0;
		};

		MIDL_INTERFACE("553103fb-1fe7-4557-bb38-946d7d0e7ca7")
		ID3D12GraphicsCommandList1 : public ID3D12GraphicsCommandList
		{
		public:
			virtual void AtomicCopyBufferUINT(ID3D12Resource * pDstBuffer, std::uint64_t DstOffset, ID3D12Resource * pSrcBuffer, std::uint64_t SrcOffset, UINT Dependencies, ID3D12Resource* const* ppDependentResources, const D3D12_SUBRESOURCE_RANGE_UINT64* pDependentSubresourceRanges)   = 0;
			virtual void AtomicCopyBufferUINT64(ID3D12Resource * pDstBuffer, std::uint64_t DstOffset, ID3D12Resource * pSrcBuffer, std::uint64_t SrcOffset, UINT Dependencies, ID3D12Resource* const* ppDependentResources, const D3D12_SUBRESOURCE_RANGE_UINT64* pDependentSubresourceRanges) = 0;

			virtual void OMSetDepthBounds(FLOAT Min, FLOAT Max) = 0;

			virtual void SetSamplePositions(UINT NumSamplesPerPixel, UINT NumPixels, D3D12_SAMPLE_POSITION * pSamplePositions) = 0;

			virtual void ResolveSubresourceRegion(ID3D12Resource * pDstResource, UINT DstSubresource, UINT DstX, UINT DstY, ID3D12Resource * pSrcResource, UINT SrcSubresource, D3D12_RECT * pSrcRect, DXGI_FORMAT Format, D3D12_RESOLVE_MODE ResolveMode) = 0;

			virtual void SetViewInstanceMask(UINT Mask) = 0;
		};

		struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER
		{
			D3D12_GPU_VIRTUAL_ADDRESS Dest;
			std::uint32_t             Value;
		};

		enum D3D12_WRITEBUFFERIMMEDIATE_MODE
		{
			D3D12_WRITEBUFFERIMMEDIATE_MODE_DEFAULT    = 0,
			D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_IN  = 0x1,
			D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_OUT = 0x2
		};

		MIDL_INTERFACE("38C3E585-FF17-412C-9150-4FC6F9D72A28")
		ID3D12GraphicsCommandList2 : public ID3D12GraphicsCommandList1
		{
		public:
			virtual void WriteBufferImmediate(UINT Count, const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER* pParams, const D3D12_WRITEBUFFERIMMEDIATE_MODE* pModes) = 0;
		};

		MIDL_INTERFACE("0ec870a6-5d7e-4c22-8cfc-5baae07616ed")
		ID3D12CommandQueue : public ID3D12Pageable
		{
		public:
			virtual void UpdateTileMappings(ID3D12Resource * pResource, UINT NumResourceRegions, const D3D12_TILED_RESOURCE_COORDINATE* pResourceRegionStartCoordinates, const D3D12_TILE_REGION_SIZE* pResourceRegionSizes, ID3D12Heap* pHeap, UINT NumRanges, const D3D12_TILE_RANGE_FLAGS* pRangeFlags, const UINT* pHeapRangeStartOffsets, const UINT* pRangeTileCounts, D3D12_TILE_MAPPING_FLAGS Flags) = 0;

			virtual void CopyTileMappings(ID3D12Resource * pDstResource, const D3D12_TILED_RESOURCE_COORDINATE* pDstRegionStartCoordinate, ID3D12Resource* pSrcResource, const D3D12_TILED_RESOURCE_COORDINATE* pSrcRegionStartCoordinate, const D3D12_TILE_REGION_SIZE* pRegionSize, D3D12_TILE_MAPPING_FLAGS Flags) = 0;

			virtual void ExecuteCommandLists(UINT NumCommandLists, ID3D12CommandList* const* ppCommandLists) = 0;

			virtual void SetMarker(UINT Metadata, const void* pData, UINT Size) = 0;

			virtual void BeginEvent(UINT Metadata, const void* pData, UINT Size) = 0;
			virtual void EndEvent()                                              = 0;

			virtual HRESULT Signal(ID3D12Fence * pFence, std::uint64_t Value) = 0;
			virtual HRESULT Wait(ID3D12Fence * pFence, std::uint64_t Value)   = 0;

			virtual HRESULT GetTimestampFrequency(std::uint64_t * pFrequency)                                 = 0;
			virtual HRESULT GetClockCalibration(std::uint64_t * pGpuTimestamp, std::uint64_t * pCpuTimestamp) = 0;

			virtual D3D12_COMMAND_QUEUE_DESC GetDesc() = 0;
		};

		MIDL_INTERFACE("189819f1-1db6-4b57-be54-1821339b85f7")
		ID3D12Device : public ID3D12Object
		{
		public:
			virtual UINT GetNodeCount() = 0;

			virtual HRESULT CreateCommandQueue(const D3D12_COMMAND_QUEUE_DESC* pDesc, const GUID& riid, void** ppCommandQueue) = 0;

			virtual HRESULT CreateCommandAllocator(D3D12_COMMAND_LIST_TYPE type, const GUID& riid, void** ppCommandAllocator) = 0;

			virtual HRESULT CreateGraphicsPipelineState(const D3D12_GRAPHICS_PIPELINE_STATE_DESC* pDesc, const GUID& riid, void** ppPipelineState) = 0;

			virtual HRESULT CreateComputePipelineState(const D3D12_COMPUTE_PIPELINE_STATE_DESC* pDesc, const GUID& riid, void** ppPipelineState) = 0;

			virtual HRESULT CreateCommandList(UINT nodeMask, D3D12_COMMAND_LIST_TYPE type, ID3D12CommandAllocator * pCommandAllocator, ID3D12PipelineState * pInitialState, const GUID& riid, void** ppCommandList) = 0;

			virtual HRESULT CheckFeatureSupport(D3D12_FEATURE Feature, void* pFeatureSupportData, UINT FeatureSupportDataSize) = 0;

			virtual HRESULT CreateDescriptorHeap(const D3D12_DESCRIPTOR_HEAP_DESC* pDescriptorHeapDesc, const GUID& riid, void** ppvHeap) = 0;

			virtual UINT GetDescriptorHandleIncrementSize(D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapType) = 0;

			virtual HRESULT CreateRootSignature(UINT nodeMask, const void* pBlobWithRootSignature, SIZE_T blobLengthInBytes, const GUID& riid, void** ppvRootSignature) = 0;

			virtual void CreateConstantBufferView(const D3D12_CONSTANT_BUFFER_VIEW_DESC* pDesc, D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor) = 0;

			virtual void CreateShaderResourceView(ID3D12Resource * pResource, const D3D12_SHADER_RESOURCE_VIEW_DESC* pDesc, D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor) = 0;

			virtual void CreateUnorderedAccessView(ID3D12Resource * pResource, ID3D12Resource * pCounterResource, const D3D12_UNORDERED_ACCESS_VIEW_DESC* pDesc, D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor) = 0;

			virtual void CreateRenderTargetView(ID3D12Resource * pResource, const D3D12_RENDER_TARGET_VIEW_DESC* pDesc, D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor) = 0;

			virtual void CreateDepthStencilView(ID3D12Resource * pResource, const D3D12_DEPTH_STENCIL_VIEW_DESC* pDesc, D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor) = 0;

			virtual void CreateSampler(const D3D12_SAMPLER_DESC* pDesc, D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor) = 0;

			virtual void CopyDescriptors(UINT NumDestDescriptorRanges, const D3D12_CPU_DESCRIPTOR_HANDLE* pDestDescriptorRangeStarts, const UINT* pDestDescriptorRangeSizes, UINT NumSrcDescriptorRanges, const D3D12_CPU_DESCRIPTOR_HANDLE* pSrcDescriptorRangeStarts, const UINT* pSrcDescriptorRangeSizes, D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType) = 0;

			virtual void CopyDescriptorsSimple(UINT NumDescriptors, D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptorRangeStart, D3D12_CPU_DESCRIPTOR_HANDLE SrcDescriptorRangeStart, D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType) = 0;

			virtual D3D12_RESOURCE_ALLOCATION_INFO GetResourceAllocationInfo(UINT visibleMask, UINT numResourceDescs, const D3D12_RESOURCE_DESC* pResourceDescs) = 0;

			virtual D3D12_HEAP_PROPERTIES GetCustomHeapProperties(UINT nodeMask, D3D12_HEAP_TYPE heapType) = 0;

			virtual HRESULT CreateCommittedResource(const D3D12_HEAP_PROPERTIES* pHeapProperties, D3D12_HEAP_FLAGS HeapFlags, const D3D12_RESOURCE_DESC* pDesc, D3D12_RESOURCE_STATES InitialResourceState, const D3D12_CLEAR_VALUE* pOptimizedClearValue, const GUID& riidResource, void** ppvResource) = 0;

			virtual HRESULT CreateHeap(const D3D12_HEAP_DESC* pDesc, const GUID& riid, void** ppvHeap) = 0;

			virtual HRESULT CreatePlacedResource(ID3D12Heap * pHeap, std::uint64_t HeapOffset, const D3D12_RESOURCE_DESC* pDesc, D3D12_RESOURCE_STATES InitialState, const D3D12_CLEAR_VALUE* pOptimizedClearValue, const GUID& riid, void** ppvResource) = 0;

			virtual HRESULT CreateReservedResource(const D3D12_RESOURCE_DESC* pDesc, D3D12_RESOURCE_STATES InitialState, const D3D12_CLEAR_VALUE* pOptimizedClearValue, const GUID& riid, void** ppvResource) = 0;

			virtual HRESULT CreateSharedHandle(ID3D12DeviceChild * pObject, const SECURITY_ATTRIBUTES* pAttributes, DWORD Access, LPCWSTR Name, HANDLE* pHandle) = 0;

			virtual HRESULT OpenSharedHandle(HANDLE NTHandle, const GUID& riid, void** ppvObj) = 0;

			virtual HRESULT OpenSharedHandleByName(LPCWSTR Name, DWORD Access, HANDLE * pNTHandle) = 0;

			virtual HRESULT MakeResident(UINT NumObjects, ID3D12Pageable* const* ppObjects) = 0;

			virtual HRESULT Evict(UINT NumObjects, ID3D12Pageable* const* ppObjects) = 0;

			virtual HRESULT CreateFence(std::uint64_t InitialValue, D3D12_FENCE_FLAGS Flags, const GUID& riid, void** ppFence) = 0;

			virtual HRESULT GetDeviceRemovedReason() = 0;

			virtual void GetCopyableFootprints(const D3D12_RESOURCE_DESC* pResourceDesc, UINT FirstSubresource, UINT NumSubresources, std::uint64_t BaseOffset, D3D12_PLACED_SUBRESOURCE_FOOTPRINT* pLayouts, UINT* pNumRows, std::uint64_t* pRowSizeInBytes, std::uint64_t* pTotalBytes) = 0;

			virtual HRESULT CreateQueryHeap(const D3D12_QUERY_HEAP_DESC* pDesc, const GUID& riid, void** ppvHeap) = 0;

			virtual HRESULT SetStablePowerState(BOOL Enable) = 0;

			virtual HRESULT CreateCommandSignature(const D3D12_COMMAND_SIGNATURE_DESC* pDesc, ID3D12RootSignature* pRootSignature, const GUID& riid, void** ppvCommandSignature) = 0;

			virtual void GetResourceTiling(ID3D12Resource * pTiledResource, UINT * pNumTilesForEntireResource, D3D12_PACKED_MIP_INFO * pPackedMipDesc, D3D12_TILE_SHAPE * pStandardTileShapeForNonPackedMips, UINT * pNumSubresourceTilings, UINT FirstSubresourceTilingToGet, D3D12_SUBRESOURCE_TILING * pSubresourceTilingsForNonPackedMips) = 0;

			virtual LUID GetAdapterLuid() = 0;
		};

		MIDL_INTERFACE("c64226a8-9201-46af-b4cc-53fb9ff7414f")
		ID3D12PipelineLibrary : public ID3D12DeviceChild
		{
		public:
			virtual HRESULT StorePipeline(LPCWSTR pName, ID3D12PipelineState * pPipeline) = 0;

			virtual HRESULT LoadGraphicsPipeline(LPCWSTR pName, const D3D12_GRAPHICS_PIPELINE_STATE_DESC* pDesc, const GUID& riid, void** ppPipelineState) = 0;
			virtual HRESULT LoadComputePipeline(LPCWSTR pName, const D3D12_COMPUTE_PIPELINE_STATE_DESC* pDesc, const GUID& riid, void** ppPipelineState)   = 0;

			virtual SIZE_T GetSerializedSize() = 0;

			virtual HRESULT Serialize(void* pData, SIZE_T DataSizeInBytes) = 0;
		};

		MIDL_INTERFACE("80eabf42-2568-4e5e-bd82-c37f86961dc3")
		ID3D12PipelineLibrary1 : public ID3D12PipelineLibrary
		{
		public:
			virtual HRESULT LoadPipeline(LPCWSTR pName, const D3D12_PIPELINE_STATE_STREAM_DESC* pDesc, const GUID& riid, void** ppPipelineState) = 0;
		};

		enum D3D12_MULTIPLE_FENCE_WAIT_FLAGS
		{
			D3D12_MULTIPLE_FENCE_WAIT_FLAG_NONE = 0,
			D3D12_MULTIPLE_FENCE_WAIT_FLAG_ANY  = 0x1,
			D3D12_MULTIPLE_FENCE_WAIT_FLAG_ALL  = 0
		};

		enum D3D12_RESIDENCY_PRIORITY
		{
			D3D12_RESIDENCY_PRIORITY_MINIMUM = 0x28000000,
			D3D12_RESIDENCY_PRIORITY_LOW     = 0x50000000,
			D3D12_RESIDENCY_PRIORITY_NORMAL  = 0x78000000,
			D3D12_RESIDENCY_PRIORITY_HIGH    = 0xa0010000,
			D3D12_RESIDENCY_PRIORITY_MAXIMUM = 0xc8000000
		};

		MIDL_INTERFACE("77acce80-638e-4e65-8895-c1f23386863e")
		ID3D12Device1 : public ID3D12Device
		{
		public:
			virtual HRESULT CreatePipelineLibrary(const void* pLibraryBlob, SIZE_T BlobLength, const GUID& riid, void** ppPipelineLibrary) = 0;

			virtual HRESULT SetEventOnMultipleFenceCompletion(ID3D12Fence* const* ppFences, const std::uint64_t* pFenceValues, UINT NumFences, D3D12_MULTIPLE_FENCE_WAIT_FLAGS Flags, HANDLE hEvent) = 0;

			virtual HRESULT SetResidencyPriority(UINT NumObjects, ID3D12Pageable* const* ppObjects, const D3D12_RESIDENCY_PRIORITY* pPriorities) = 0;
		};

		MIDL_INTERFACE("30baa41e-b15b-475c-a0bb-1af5c5b64328")
		ID3D12Device2 : public ID3D12Device1
		{
		public:
			virtual HRESULT CreatePipelineState(const D3D12_PIPELINE_STATE_STREAM_DESC* pDesc, const GUID& riid, void** ppPipelineState) = 0;
		};

		enum D3D12_RESIDENCY_FLAGS
		{
			D3D12_RESIDENCY_FLAG_NONE            = 0,
			D3D12_RESIDENCY_FLAG_DENY_OVERBUDGET = 0x1
		};

		MIDL_INTERFACE("81dadc15-2bad-4392-93c5-101345c4aa98")
		ID3D12Device3 : public ID3D12Device2
		{
		public:
			virtual HRESULT OpenExistingHeapFromAddress(const void* pAddress, const GUID& riid, void** ppvHeap)    = 0;
			virtual HRESULT OpenExistingHeapFromFileMapping(HANDLE hFileMapping, const GUID& riid, void** ppvHeap) = 0;

			virtual HRESULT EnqueueMakeResident(D3D12_RESIDENCY_FLAGS Flags, UINT NumObjects, ID3D12Pageable* const* ppObjects, ID3D12Fence* pFenceToSignal, std::uint64_t FenceValueToSignal) = 0;
		};

		enum D3D12_COMMAND_LIST_FLAGS
		{
			D3D12_COMMAND_LIST_FLAG_NONE = 0
		};

		enum D3D12_COMMAND_POOL_FLAGS
		{
			D3D12_COMMAND_POOL_FLAG_NONE = 0
		};

		enum D3D12_COMMAND_RECORDER_FLAGS
		{
			D3D12_COMMAND_RECORDER_FLAG_NONE = 0
		};

		enum D3D12_PROTECTED_SESSION_STATUS
		{
			D3D12_PROTECTED_SESSION_STATUS_OK      = 0,
			D3D12_PROTECTED_SESSION_STATUS_INVALID = 1
		};

		MIDL_INTERFACE("A1533D18-0AC1-4084-85B9-89A96116806B")
		ID3D12ProtectedSession : public ID3D12DeviceChild
		{
		public:
			virtual HRESULT GetStatusFence(const GUID& riid, void** ppFence) = 0;

			virtual D3D12_PROTECTED_SESSION_STATUS GetSessionStatus() = 0;
		};

		enum D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS
		{
			D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_NONE      = 0,
			D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_SUPPORTED = 0x1
		};

		struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT
		{
			UINT                                           NodeIndex;
			D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS Support;
		};

		enum D3D12_PROTECTED_RESOURCE_SESSION_FLAGS
		{
			D3D12_PROTECTED_RESOURCE_SESSION_FLAG_NONE = 0
		};

		struct D3D12_PROTECTED_RESOURCE_SESSION_DESC
		{
			UINT                                   NodeMask;
			D3D12_PROTECTED_RESOURCE_SESSION_FLAGS Flags;
		};

		MIDL_INTERFACE("6CD696F4-F289-40CC-8091-5A6C0A099C3D")
		ID3D12ProtectedResourceSession : public ID3D12ProtectedSession
		{
		public:
			virtual D3D12_PROTECTED_RESOURCE_SESSION_DESC GetDesc() = 0;
		};

		MIDL_INTERFACE("e865df17-a9ee-46f9-a463-3098315aa2e5")
		ID3D12Device4 : public ID3D12Device3
		{
		public:
			virtual HRESULT CreateCommandList1(UINT nodeMask, D3D12_COMMAND_LIST_TYPE type, D3D12_COMMAND_LIST_FLAGS flags, const GUID& riid, void** ppCommandList) = 0;

			virtual HRESULT CreateProtectedResourceSession(const D3D12_PROTECTED_RESOURCE_SESSION_DESC* pDesc, const GUID& riid, void** ppSession) = 0;

			virtual HRESULT CreateCommittedResource1(const D3D12_HEAP_PROPERTIES* pHeapProperties, D3D12_HEAP_FLAGS HeapFlags, const D3D12_RESOURCE_DESC* pDesc, D3D12_RESOURCE_STATES InitialResourceState, const D3D12_CLEAR_VALUE* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, const GUID& riidResource, void** ppvResource) = 0;

			virtual HRESULT CreateHeap1(const D3D12_HEAP_DESC* pDesc, ID3D12ProtectedResourceSession* pProtectedSession, const GUID& riid, void** ppvHeap) = 0;

			virtual HRESULT CreateReservedResource1(const D3D12_RESOURCE_DESC* pDesc, D3D12_RESOURCE_STATES InitialState, const D3D12_CLEAR_VALUE* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, const GUID& riid, void** ppvResource) = 0;

			virtual D3D12_RESOURCE_ALLOCATION_INFO GetResourceAllocationInfo1(UINT visibleMask, UINT numResourceDescs, const D3D12_RESOURCE_DESC* pResourceDescs, D3D12_RESOURCE_ALLOCATION_INFO1* pResourceAllocationInfo1) = 0;
		};

		enum D3D12_LIFETIME_STATE
		{
			D3D12_LIFETIME_STATE_IN_USE     = 0,
			D3D12_LIFETIME_STATE_NOT_IN_USE = (D3D12_LIFETIME_STATE_IN_USE + 1)
		};

		MIDL_INTERFACE("e667af9f-cd56-4f46-83ce-032e595d70a8")
		ID3D12LifetimeOwner : public IUnknown
		{
		public:
			virtual void LifetimeStateUpdated(D3D12_LIFETIME_STATE NewState) = 0;
		};

		MIDL_INTERFACE("f1df64b6-57fd-49cd-8807-c0eb88b45c8f")
		ID3D12SwapChainAssistant : public IUnknown
		{
		public:
			virtual LUID GetLUID() = 0;

			virtual HRESULT GetSwapChainObject(const GUID& riid, void** ppv) = 0;

			virtual HRESULT GetCurrentResourceAndCommandQueue(const GUID& riidResource, void** ppvResource, const GUID& riidQueue, void** ppvQueue) = 0;

			virtual HRESULT InsertImplicitSync() = 0;
		};

		MIDL_INTERFACE("3fd03d36-4eb1-424a-a582-494ecb8ba813")
		ID3D12LifetimeTracker : public ID3D12DeviceChild
		{
		public:
			virtual HRESULT DestroyOwnedObject(ID3D12DeviceChild * pObject) = 0;
		};

		enum D3D12_META_COMMAND_PARAMETER_TYPE
		{
			D3D12_META_COMMAND_PARAMETER_TYPE_FLOAT                                       = 0,
			D3D12_META_COMMAND_PARAMETER_TYPE_UINT64                                      = 1,
			D3D12_META_COMMAND_PARAMETER_TYPE_GPU_VIRTUAL_ADDRESS                         = 2,
			D3D12_META_COMMAND_PARAMETER_TYPE_CPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV = 3,
			D3D12_META_COMMAND_PARAMETER_TYPE_GPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV = 4
		};

		enum D3D12_META_COMMAND_PARAMETER_FLAGS
		{
			D3D12_META_COMMAND_PARAMETER_FLAG_INPUT  = 0x1,
			D3D12_META_COMMAND_PARAMETER_FLAG_OUTPUT = 0x2
		};

		enum D3D12_META_COMMAND_PARAMETER_STAGE
		{
			D3D12_META_COMMAND_PARAMETER_STAGE_CREATION       = 0,
			D3D12_META_COMMAND_PARAMETER_STAGE_INITIALIZATION = 1,
			D3D12_META_COMMAND_PARAMETER_STAGE_EXECUTION      = 2
		};

		struct D3D12_META_COMMAND_PARAMETER_DESC
		{
			LPCWSTR                            Name;
			D3D12_META_COMMAND_PARAMETER_TYPE  Type;
			D3D12_META_COMMAND_PARAMETER_FLAGS Flags;
			D3D12_RESOURCE_STATES              RequiredResourceState;
			UINT                               StructureOffset;
		};

		enum D3D12_GRAPHICS_STATES
		{
			D3D12_GRAPHICS_STATE_NONE                    = 0,
			D3D12_GRAPHICS_STATE_IA_VERTEX_BUFFERS       = (1 << 0),
			D3D12_GRAPHICS_STATE_IA_INDEX_BUFFER         = (1 << 1),
			D3D12_GRAPHICS_STATE_IA_PRIMITIVE_TOPOLOGY   = (1 << 2),
			D3D12_GRAPHICS_STATE_DESCRIPTOR_HEAP         = (1 << 3),
			D3D12_GRAPHICS_STATE_GRAPHICS_ROOT_SIGNATURE = (1 << 4),
			D3D12_GRAPHICS_STATE_COMPUTE_ROOT_SIGNATURE  = (1 << 5),
			D3D12_GRAPHICS_STATE_RS_VIEWPORTS            = (1 << 6),
			D3D12_GRAPHICS_STATE_RS_SCISSOR_RECTS        = (1 << 7),
			D3D12_GRAPHICS_STATE_PREDICATION             = (1 << 8),
			D3D12_GRAPHICS_STATE_OM_RENDER_TARGETS       = (1 << 9),
			D3D12_GRAPHICS_STATE_OM_STENCIL_REF          = (1 << 10),
			D3D12_GRAPHICS_STATE_OM_BLEND_FACTOR         = (1 << 11),
			D3D12_GRAPHICS_STATE_PIPELINE_STATE          = (1 << 12),
			D3D12_GRAPHICS_STATE_SO_TARGETS              = (1 << 13),
			D3D12_GRAPHICS_STATE_OM_DEPTH_BOUNDS         = (1 << 14),
			D3D12_GRAPHICS_STATE_SAMPLE_POSITIONS        = (1 << 15),
			D3D12_GRAPHICS_STATE_VIEW_INSTANCE_MASK      = (1 << 16)
		};

		struct D3D12_META_COMMAND_DESC
		{
			GUID                  Id;
			LPCWSTR               Name;
			D3D12_GRAPHICS_STATES InitializationDirtyState;
			D3D12_GRAPHICS_STATES ExecutionDirtyState;
		};

		MIDL_INTERFACE("47016943-fca8-4594-93ea-af258b55346d")
		ID3D12StateObject : public ID3D12Pageable {
			public:
		};

		MIDL_INTERFACE("de5fa827-9bf9-4f26-89ff-d7f56fde3860")
		ID3D12StateObjectProperties : public IUnknown
		{
		public:
			virtual void*         GetShaderIdentifier(LPCWSTR pExportName) = 0;
			virtual std::uint64_t GetShaderStackSize(LPCWSTR pExportName)  = 0;

			virtual std::uint64_t GetPipelineStackSize()                                       = 0;
			virtual void          SetPipelineStackSize(std::uint64_t PipelineStackSizeInBytes) = 0;
		};

		enum D3D12_STATE_SUBOBJECT_TYPE
		{
			D3D12_STATE_SUBOBJECT_TYPE_STATE_OBJECT_CONFIG                   = 0,
			D3D12_STATE_SUBOBJECT_TYPE_GLOBAL_ROOT_SIGNATURE                 = 1,
			D3D12_STATE_SUBOBJECT_TYPE_LOCAL_ROOT_SIGNATURE                  = 2,
			D3D12_STATE_SUBOBJECT_TYPE_NODE_MASK                             = 3,
			D3D12_STATE_SUBOBJECT_TYPE_DXIL_LIBRARY                          = 5,
			D3D12_STATE_SUBOBJECT_TYPE_EXISTING_COLLECTION                   = 6,
			D3D12_STATE_SUBOBJECT_TYPE_SUBOBJECT_TO_EXPORTS_ASSOCIATION      = 7,
			D3D12_STATE_SUBOBJECT_TYPE_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION = 8,
			D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_SHADER_CONFIG              = 9,
			D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG            = 10,
			D3D12_STATE_SUBOBJECT_TYPE_HIT_GROUP                             = 11,
			D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG1           = 12,
			D3D12_STATE_SUBOBJECT_TYPE_MAX_VALID                             = (D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG1 + 1)
		};

		struct D3D12_STATE_SUBOBJECT
		{
			D3D12_STATE_SUBOBJECT_TYPE Type;
			const void*                pDesc;
		};

		enum D3D12_STATE_OBJECT_FLAGS
		{
			D3D12_STATE_OBJECT_FLAG_NONE                                             = 0,
			D3D12_STATE_OBJECT_FLAG_ALLOW_LOCAL_DEPENDENCIES_ON_EXTERNAL_DEFINITIONS = 0x1,
			D3D12_STATE_OBJECT_FLAG_ALLOW_EXTERNAL_DEPENDENCIES_ON_LOCAL_DEFINITIONS = 0x2,
			D3D12_STATE_OBJECT_FLAG_ALLOW_STATE_OBJECT_ADDITIONS                     = 0x4
		};

		struct D3D12_STATE_OBJECT_CONFIG
		{
			D3D12_STATE_OBJECT_FLAGS Flags;
		};

		struct D3D12_GLOBAL_ROOT_SIGNATURE
		{
			ID3D12RootSignature* pGlobalRootSignature;
		};

		struct D3D12_LOCAL_ROOT_SIGNATURE
		{
			ID3D12RootSignature* pLocalRootSignature;
		};

		struct D3D12_NODE_MASK
		{
			UINT NodeMask;
		};

		enum D3D12_EXPORT_FLAGS
		{
			D3D12_EXPORT_FLAG_NONE = 0
		};

		struct D3D12_EXPORT_DESC
		{
			LPCWSTR            Name;
			LPCWSTR            ExportToRename;
			D3D12_EXPORT_FLAGS Flags;
		};

		struct D3D12_DXIL_LIBRARY_DESC
		{
			D3D12_SHADER_BYTECODE DXILLibrary;
			UINT                  NumExports;
			D3D12_EXPORT_DESC*    pExports;
		};

		struct D3D12_EXISTING_COLLECTION_DESC
		{
			ID3D12StateObject* pExistingCollection;
			UINT               NumExports;
			D3D12_EXPORT_DESC* pExports;
		};

		struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION
		{
			const D3D12_STATE_SUBOBJECT* pSubobjectToAssociate;
			UINT                         NumExports;
			LPCWSTR*                     pExports;
		};

		struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION
		{
			LPCWSTR  SubobjectToAssociate;
			UINT     NumExports;
			LPCWSTR* pExports;
		};

		enum D3D12_HIT_GROUP_TYPE
		{
			D3D12_HIT_GROUP_TYPE_TRIANGLES            = 0,
			D3D12_HIT_GROUP_TYPE_PROCEDURAL_PRIMITIVE = 0x1
		};

		struct D3D12_HIT_GROUP_DESC
		{
			LPCWSTR              HitGroupExport;
			D3D12_HIT_GROUP_TYPE Type;
			LPCWSTR              AnyHitShaderImport;
			LPCWSTR              ClosestHitShaderImport;
			LPCWSTR              IntersectionShaderImport;
		};

		struct D3D12_RAYTRACING_SHADER_CONFIG
		{
			UINT MaxPayloadSizeInBytes;
			UINT MaxAttributeSizeInBytes;
		};

		struct D3D12_RAYTRACING_PIPELINE_CONFIG
		{
			UINT MaxTraceRecursionDepth;
		};

		enum D3D12_RAYTRACING_PIPELINE_FLAGS
		{
			D3D12_RAYTRACING_PIPELINE_FLAG_NONE                       = 0,
			D3D12_RAYTRACING_PIPELINE_FLAG_SKIP_TRIANGLES             = 0x100,
			D3D12_RAYTRACING_PIPELINE_FLAG_SKIP_PROCEDURAL_PRIMITIVES = 0x200
		};

		struct D3D12_RAYTRACING_PIPELINE_CONFIG1
		{
			UINT                            MaxTraceRecursionDepth;
			D3D12_RAYTRACING_PIPELINE_FLAGS Flags;
		};

		enum D3D12_STATE_OBJECT_TYPE
		{
			D3D12_STATE_OBJECT_TYPE_COLLECTION          = 0,
			D3D12_STATE_OBJECT_TYPE_RAYTRACING_PIPELINE = 3
		};

		struct D3D12_STATE_OBJECT_DESC
		{
			D3D12_STATE_OBJECT_TYPE      Type;
			UINT                         NumSubobjects;
			const D3D12_STATE_SUBOBJECT* pSubobjects;
		};

		enum D3D12_RAYTRACING_GEOMETRY_FLAGS
		{
			D3D12_RAYTRACING_GEOMETRY_FLAG_NONE                           = 0,
			D3D12_RAYTRACING_GEOMETRY_FLAG_OPAQUE                         = 0x1,
			D3D12_RAYTRACING_GEOMETRY_FLAG_NO_DUPLICATE_ANYHIT_INVOCATION = 0x2
		};

		enum D3D12_RAYTRACING_GEOMETRY_TYPE
		{
			D3D12_RAYTRACING_GEOMETRY_TYPE_TRIANGLES                  = 0,
			D3D12_RAYTRACING_GEOMETRY_TYPE_PROCEDURAL_PRIMITIVE_AABBS = (D3D12_RAYTRACING_GEOMETRY_TYPE_TRIANGLES + 1)
		};

		enum D3D12_RAYTRACING_INSTANCE_FLAGS
		{
			D3D12_RAYTRACING_INSTANCE_FLAG_NONE                            = 0,
			D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_CULL_DISABLE           = 0x1,
			D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_FRONT_COUNTERCLOCKWISE = 0x2,
			D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_OPAQUE                    = 0x4,
			D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_NON_OPAQUE                = 0x8
		};

		struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE
		{
			D3D12_GPU_VIRTUAL_ADDRESS StartAddress;
			std::uint64_t             StrideInBytes;
		};

		struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE
		{
			D3D12_GPU_VIRTUAL_ADDRESS StartAddress;
			std::uint64_t             SizeInBytes;
		};

		struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE
		{
			D3D12_GPU_VIRTUAL_ADDRESS StartAddress;
			std::uint64_t             SizeInBytes;
			std::uint64_t             StrideInBytes;
		};

		struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC
		{
			D3D12_GPU_VIRTUAL_ADDRESS            Transform3x4;
			DXGI_FORMAT                          IndexFormat;
			DXGI_FORMAT                          VertexFormat;
			UINT                                 IndexCount;
			UINT                                 VertexCount;
			D3D12_GPU_VIRTUAL_ADDRESS            IndexBuffer;
			D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE VertexBuffer;
		};

		struct D3D12_RAYTRACING_AABB
		{
			FLOAT MinX;
			FLOAT MinY;
			FLOAT MinZ;
			FLOAT MaxX;
			FLOAT MaxY;
			FLOAT MaxZ;
		};

		struct D3D12_RAYTRACING_GEOMETRY_AABBS_DESC
		{
			std::uint64_t                        AABBCount;
			D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE AABBs;
		};

		enum D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS
		{
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_NONE              = 0,
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_UPDATE      = 0x1,
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_COMPACTION  = 0x2,
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_TRACE = 0x4,
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_BUILD = 0x8,
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_MINIMIZE_MEMORY   = 0x10,
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PERFORM_UPDATE    = 0x20
		};

		enum D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE
		{
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_CLONE                          = 0,
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_COMPACT                        = 0x1,
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_VISUALIZATION_DECODE_FOR_TOOLS = 0x2,
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_SERIALIZE                      = 0x3,
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_DESERIALIZE                    = 0x4
		};

		enum D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE
		{
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL    = 0,
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL = 0x1
		};

		enum D3D12_ELEMENTS_LAYOUT
		{
			D3D12_ELEMENTS_LAYOUT_ARRAY             = 0,
			D3D12_ELEMENTS_LAYOUT_ARRAY_OF_POINTERS = 0x1
		};

		enum D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE
		{
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE      = 0,
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION = 0x1,
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION       = 0x2,
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE        = 0x3
		};

		struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC
		{
			D3D12_GPU_VIRTUAL_ADDRESS                                   DestBuffer;
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE InfoType;
		};

		struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC
		{
			std::uint64_t CompactedSizeInBytes;
		};

		struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC
		{
			std::uint64_t DecodedSizeInBytes;
		};

		struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER
		{
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE Type;
			UINT                                         NumDescs;
		};

		struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC
		{
			std::uint64_t SerializedSizeInBytes;
			std::uint64_t NumBottomLevelAccelerationStructurePointers;
		};

		struct D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER
		{
			GUID DriverOpaqueGUID;
			BYTE DriverOpaqueVersioningData[16];
		};

		enum D3D12_SERIALIZED_DATA_TYPE
		{
			D3D12_SERIALIZED_DATA_RAYTRACING_ACCELERATION_STRUCTURE = 0
		};

		enum D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS
		{
			D3D12_DRIVER_MATCHING_IDENTIFIER_COMPATIBLE_WITH_DEVICE = 0,
			D3D12_DRIVER_MATCHING_IDENTIFIER_UNSUPPORTED_TYPE       = 0x1,
			D3D12_DRIVER_MATCHING_IDENTIFIER_UNRECOGNIZED           = 0x2,
			D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_VERSION   = 0x3,
			D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_TYPE      = 0x4
		};

		struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER
		{
			D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER DriverMatchingIdentifier;
			std::uint64_t                                    SerializedSizeInBytesIncludingHeader;
			std::uint64_t                                    DeserializedSizeInBytes;
			std::uint64_t                                    NumBottomLevelAccelerationStructurePointersAfterHeader;
		};

		struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC
		{
			std::uint64_t CurrentSizeInBytes;
		};

		struct D3D12_RAYTRACING_INSTANCE_DESC
		{
			FLOAT                     Transform[3][4];
			UINT                      InstanceID : 24;
			UINT                      InstanceMask : 8;
			UINT                      InstanceContributionToHitGroupIndex : 24;
			UINT                      Flags : 8;
			D3D12_GPU_VIRTUAL_ADDRESS AccelerationStructure;
		};

		struct D3D12_RAYTRACING_GEOMETRY_DESC
		{
			D3D12_RAYTRACING_GEOMETRY_TYPE  Type;
			D3D12_RAYTRACING_GEOMETRY_FLAGS Flags;
			union
			{
				D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC Triangles;
				D3D12_RAYTRACING_GEOMETRY_AABBS_DESC     AABBs;
			};
		};

		struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS
		{
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE        Type;
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS Flags;
			UINT                                                NumDescs;
			D3D12_ELEMENTS_LAYOUT                               DescsLayout;
			union
			{
				D3D12_GPU_VIRTUAL_ADDRESS                    InstanceDescs;
				const D3D12_RAYTRACING_GEOMETRY_DESC*        pGeometryDescs;
				const D3D12_RAYTRACING_GEOMETRY_DESC* const* ppGeometryDescs;
			};
		};

		struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC
		{
			D3D12_GPU_VIRTUAL_ADDRESS                            DestAccelerationStructureData;
			D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS Inputs;
			D3D12_GPU_VIRTUAL_ADDRESS                            SourceAccelerationStructureData;
			D3D12_GPU_VIRTUAL_ADDRESS                            ScratchAccelerationStructureData;
		};

		struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO
		{
			std::uint64_t ResultDataMaxSizeInBytes;
			std::uint64_t ScratchDataSizeInBytes;
			std::uint64_t UpdateScratchDataSizeInBytes;
		};

		enum D3D12_RAY_FLAGS
		{
			D3D12_RAY_FLAG_NONE                            = 0,
			D3D12_RAY_FLAG_FORCE_OPAQUE                    = 0x1,
			D3D12_RAY_FLAG_FORCE_NON_OPAQUE                = 0x2,
			D3D12_RAY_FLAG_ACCEPT_FIRST_HIT_AND_END_SEARCH = 0x4,
			D3D12_RAY_FLAG_SKIP_CLOSEST_HIT_SHADER         = 0x8,
			D3D12_RAY_FLAG_CULL_BACK_FACING_TRIANGLES      = 0x10,
			D3D12_RAY_FLAG_CULL_FRONT_FACING_TRIANGLES     = 0x20,
			D3D12_RAY_FLAG_CULL_OPAQUE                     = 0x40,
			D3D12_RAY_FLAG_CULL_NON_OPAQUE                 = 0x80,
			D3D12_RAY_FLAG_SKIP_TRIANGLES                  = 0x100,
			D3D12_RAY_FLAG_SKIP_PROCEDURAL_PRIMITIVES      = 0x200
		};

		enum D3D12_HIT_KIND
		{
			D3D12_HIT_KIND_TRIANGLE_FRONT_FACE = 0xfe,
			D3D12_HIT_KIND_TRIANGLE_BACK_FACE  = 0xff
		};

		MIDL_INTERFACE("8b4f173b-2fea-4b80-8f58-4307191ab95d")
		ID3D12Device5 : public ID3D12Device4
		{
		public:
			virtual HRESULT CreateLifetimeTracker(ID3D12LifetimeOwner * pOwner, const GUID& riid, void** ppvTracker) = 0;

			virtual void RemoveDevice() = 0;

			virtual HRESULT EnumerateMetaCommands(UINT * pNumMetaCommands, D3D12_META_COMMAND_DESC * pDescs) = 0;

			virtual HRESULT EnumerateMetaCommandParameters(const GUID& CommandId, D3D12_META_COMMAND_PARAMETER_STAGE Stage, UINT* pTotalStructureSizeInBytes, UINT* pParameterCount, D3D12_META_COMMAND_PARAMETER_DESC* pParameterDescs) = 0;

			virtual HRESULT CreateMetaCommand(const GUID& CommandId, UINT NodeMask, const void* pCreationParametersData, SIZE_T CreationParametersDataSizeInBytes, const GUID& riid, void** ppMetaCommand) = 0;

			virtual HRESULT CreateStateObject(const D3D12_STATE_OBJECT_DESC* pDesc, const GUID& riid, void** ppStateObject) = 0;

			virtual void GetRaytracingAccelerationStructurePrebuildInfo(const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS* pDesc, D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO* pInfo) = 0;

			virtual D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS CheckDriverMatchingIdentifier(D3D12_SERIALIZED_DATA_TYPE SerializedDataType, const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER* pIdentifierToCheck) = 0;
		};

		enum D3D12_AUTO_BREADCRUMB_OP
		{
			D3D12_AUTO_BREADCRUMB_OP_SETMARKER                                        = 0,
			D3D12_AUTO_BREADCRUMB_OP_BEGINEVENT                                       = 1,
			D3D12_AUTO_BREADCRUMB_OP_ENDEVENT                                         = 2,
			D3D12_AUTO_BREADCRUMB_OP_DRAWINSTANCED                                    = 3,
			D3D12_AUTO_BREADCRUMB_OP_DRAWINDEXEDINSTANCED                             = 4,
			D3D12_AUTO_BREADCRUMB_OP_EXECUTEINDIRECT                                  = 5,
			D3D12_AUTO_BREADCRUMB_OP_DISPATCH                                         = 6,
			D3D12_AUTO_BREADCRUMB_OP_COPYBUFFERREGION                                 = 7,
			D3D12_AUTO_BREADCRUMB_OP_COPYTEXTUREREGION                                = 8,
			D3D12_AUTO_BREADCRUMB_OP_COPYRESOURCE                                     = 9,
			D3D12_AUTO_BREADCRUMB_OP_COPYTILES                                        = 10,
			D3D12_AUTO_BREADCRUMB_OP_RESOLVESUBRESOURCE                               = 11,
			D3D12_AUTO_BREADCRUMB_OP_CLEARRENDERTARGETVIEW                            = 12,
			D3D12_AUTO_BREADCRUMB_OP_CLEARUNORDEREDACCESSVIEW                         = 13,
			D3D12_AUTO_BREADCRUMB_OP_CLEARDEPTHSTENCILVIEW                            = 14,
			D3D12_AUTO_BREADCRUMB_OP_RESOURCEBARRIER                                  = 15,
			D3D12_AUTO_BREADCRUMB_OP_EXECUTEBUNDLE                                    = 16,
			D3D12_AUTO_BREADCRUMB_OP_PRESENT                                          = 17,
			D3D12_AUTO_BREADCRUMB_OP_RESOLVEQUERYDATA                                 = 18,
			D3D12_AUTO_BREADCRUMB_OP_BEGINSUBMISSION                                  = 19,
			D3D12_AUTO_BREADCRUMB_OP_ENDSUBMISSION                                    = 20,
			D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME                                      = 21,
			D3D12_AUTO_BREADCRUMB_OP_PROCESSFRAMES                                    = 22,
			D3D12_AUTO_BREADCRUMB_OP_ATOMICCOPYBUFFERUINT                             = 23,
			D3D12_AUTO_BREADCRUMB_OP_ATOMICCOPYBUFFERUINT64                           = 24,
			D3D12_AUTO_BREADCRUMB_OP_RESOLVESUBRESOURCEREGION                         = 25,
			D3D12_AUTO_BREADCRUMB_OP_WRITEBUFFERIMMEDIATE                             = 26,
			D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME1                                     = 27,
			D3D12_AUTO_BREADCRUMB_OP_SETPROTECTEDRESOURCESESSION                      = 28,
			D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME2                                     = 29,
			D3D12_AUTO_BREADCRUMB_OP_PROCESSFRAMES1                                   = 30,
			D3D12_AUTO_BREADCRUMB_OP_BUILDRAYTRACINGACCELERATIONSTRUCTURE             = 31,
			D3D12_AUTO_BREADCRUMB_OP_EMITRAYTRACINGACCELERATIONSTRUCTUREPOSTBUILDINFO = 32,
			D3D12_AUTO_BREADCRUMB_OP_COPYRAYTRACINGACCELERATIONSTRUCTURE              = 33,
			D3D12_AUTO_BREADCRUMB_OP_DISPATCHRAYS                                     = 34,
			D3D12_AUTO_BREADCRUMB_OP_INITIALIZEMETACOMMAND                            = 35,
			D3D12_AUTO_BREADCRUMB_OP_EXECUTEMETACOMMAND                               = 36,
			D3D12_AUTO_BREADCRUMB_OP_ESTIMATEMOTION                                   = 37,
			D3D12_AUTO_BREADCRUMB_OP_RESOLVEMOTIONVECTORHEAP                          = 38,
			D3D12_AUTO_BREADCRUMB_OP_SETPIPELINESTATE1                                = 39,
			D3D12_AUTO_BREADCRUMB_OP_INITIALIZEEXTENSIONCOMMAND                       = 40,
			D3D12_AUTO_BREADCRUMB_OP_EXECUTEEXTENSIONCOMMAND                          = 41,
			D3D12_AUTO_BREADCRUMB_OP_DISPATCHMESH                                     = 42,
			D3D12_AUTO_BREADCRUMB_OP_ENCODEFRAME                                      = 43,
			D3D12_AUTO_BREADCRUMB_OP_RESOLVEENCODEROUTPUTMETADATA                     = 44
		};

		struct D3D12_AUTO_BREADCRUMB_NODE
		{
			const char*                              pCommandListDebugNameA;
			const wchar_t*                           pCommandListDebugNameW;
			const char*                              pCommandQueueDebugNameA;
			const wchar_t*                           pCommandQueueDebugNameW;
			ID3D12GraphicsCommandList*               pCommandList;
			ID3D12CommandQueue*                      pCommandQueue;
			std::uint32_t                            BreadcrumbCount;
			const std::uint32_t*                     pLastBreadcrumbValue;
			const D3D12_AUTO_BREADCRUMB_OP*          pCommandHistory;
			const struct D3D12_AUTO_BREADCRUMB_NODE* pNext;
		};

		struct D3D12_DRED_BREADCRUMB_CONTEXT
		{
			UINT           BreadcrumbIndex;
			const wchar_t* pContextString;
		};

		struct D3D12_AUTO_BREADCRUMB_NODE1
		{
			const char*                               pCommandListDebugNameA;
			const wchar_t*                            pCommandListDebugNameW;
			const char*                               pCommandQueueDebugNameA;
			const wchar_t*                            pCommandQueueDebugNameW;
			ID3D12GraphicsCommandList*                pCommandList;
			ID3D12CommandQueue*                       pCommandQueue;
			UINT                                      BreadcrumbCount;
			const UINT*                               pLastBreadcrumbValue;
			const D3D12_AUTO_BREADCRUMB_OP*           pCommandHistory;
			const struct D3D12_AUTO_BREADCRUMB_NODE1* pNext;
			UINT                                      BreadcrumbContextsCount;
			D3D12_DRED_BREADCRUMB_CONTEXT*            pBreadcrumbContexts;
		};

		enum D3D12_DRED_VERSION
		{
			D3D12_DRED_VERSION_1_0 = 0x1,
			D3D12_DRED_VERSION_1_1 = 0x2,
			D3D12_DRED_VERSION_1_2 = 0x3,
			D3D12_DRED_VERSION_1_3 = 0x4
		};

		enum D3D12_DRED_FLAGS
		{
			D3D12_DRED_FLAG_NONE                    = 0,
			D3D12_DRED_FLAG_FORCE_ENABLE            = 1,
			D3D12_DRED_FLAG_DISABLE_AUTOBREADCRUMBS = 2
		};

		enum D3D12_DRED_ENABLEMENT
		{
			D3D12_DRED_ENABLEMENT_SYSTEM_CONTROLLED = 0,
			D3D12_DRED_ENABLEMENT_FORCED_OFF        = 1,
			D3D12_DRED_ENABLEMENT_FORCED_ON         = 2
		};

		struct D3D12_DEVICE_REMOVED_EXTENDED_DATA
		{
			D3D12_DRED_FLAGS            Flags;
			D3D12_AUTO_BREADCRUMB_NODE* pHeadAutoBreadcrumbNode;
		};

		enum D3D12_DRED_ALLOCATION_TYPE
		{
			D3D12_DRED_ALLOCATION_TYPE_COMMAND_QUEUE            = 19,
			D3D12_DRED_ALLOCATION_TYPE_COMMAND_ALLOCATOR        = 20,
			D3D12_DRED_ALLOCATION_TYPE_PIPELINE_STATE           = 21,
			D3D12_DRED_ALLOCATION_TYPE_COMMAND_LIST             = 22,
			D3D12_DRED_ALLOCATION_TYPE_FENCE                    = 23,
			D3D12_DRED_ALLOCATION_TYPE_DESCRIPTOR_HEAP          = 24,
			D3D12_DRED_ALLOCATION_TYPE_HEAP                     = 25,
			D3D12_DRED_ALLOCATION_TYPE_QUERY_HEAP               = 27,
			D3D12_DRED_ALLOCATION_TYPE_COMMAND_SIGNATURE        = 28,
			D3D12_DRED_ALLOCATION_TYPE_PIPELINE_LIBRARY         = 29,
			D3D12_DRED_ALLOCATION_TYPE_VIDEO_DECODER            = 30,
			D3D12_DRED_ALLOCATION_TYPE_VIDEO_PROCESSOR          = 32,
			D3D12_DRED_ALLOCATION_TYPE_RESOURCE                 = 34,
			D3D12_DRED_ALLOCATION_TYPE_PASS                     = 35,
			D3D12_DRED_ALLOCATION_TYPE_CRYPTOSESSION            = 36,
			D3D12_DRED_ALLOCATION_TYPE_CRYPTOSESSIONPOLICY      = 37,
			D3D12_DRED_ALLOCATION_TYPE_PROTECTEDRESOURCESESSION = 38,
			D3D12_DRED_ALLOCATION_TYPE_VIDEO_DECODER_HEAP       = 39,
			D3D12_DRED_ALLOCATION_TYPE_COMMAND_POOL             = 40,
			D3D12_DRED_ALLOCATION_TYPE_COMMAND_RECORDER         = 41,
			D3D12_DRED_ALLOCATION_TYPE_STATE_OBJECT             = 42,
			D3D12_DRED_ALLOCATION_TYPE_METACOMMAND              = 43,
			D3D12_DRED_ALLOCATION_TYPE_SCHEDULINGGROUP          = 44,
			D3D12_DRED_ALLOCATION_TYPE_VIDEO_MOTION_ESTIMATOR   = 45,
			D3D12_DRED_ALLOCATION_TYPE_VIDEO_MOTION_VECTOR_HEAP = 46,
			D3D12_DRED_ALLOCATION_TYPE_VIDEO_EXTENSION_COMMAND  = 47,
			D3D12_DRED_ALLOCATION_TYPE_VIDEO_ENCODER            = 48,
			D3D12_DRED_ALLOCATION_TYPE_VIDEO_ENCODER_HEAP       = 49,
			D3D12_DRED_ALLOCATION_TYPE_INVALID                  = 0xffffffff
		};

		struct D3D12_DRED_ALLOCATION_NODE
		{
			const char*                              ObjectNameA;
			const wchar_t*                           ObjectNameW;
			D3D12_DRED_ALLOCATION_TYPE               AllocationType;
			const struct D3D12_DRED_ALLOCATION_NODE* pNext;
		};

		struct D3D12_DRED_ALLOCATION_NODE1
		{
			const char*                               ObjectNameA;
			const wchar_t*                            ObjectNameW;
			D3D12_DRED_ALLOCATION_TYPE                AllocationType;
			const struct D3D12_DRED_ALLOCATION_NODE1* pNext;
			const IUnknown*                           pObject;
		};

		struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT
		{
			const D3D12_AUTO_BREADCRUMB_NODE* pHeadAutoBreadcrumbNode;
		};

		struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1
		{
			const D3D12_AUTO_BREADCRUMB_NODE1* pHeadAutoBreadcrumbNode;
		};

		struct D3D12_DRED_PAGE_FAULT_OUTPUT
		{
			D3D12_GPU_VIRTUAL_ADDRESS         PageFaultVA;
			const D3D12_DRED_ALLOCATION_NODE* pHeadExistingAllocationNode;
			const D3D12_DRED_ALLOCATION_NODE* pHeadRecentFreedAllocationNode;
		};

		struct D3D12_DRED_PAGE_FAULT_OUTPUT1
		{
			D3D12_GPU_VIRTUAL_ADDRESS          PageFaultVA;
			const D3D12_DRED_ALLOCATION_NODE1* pHeadExistingAllocationNode;
			const D3D12_DRED_ALLOCATION_NODE1* pHeadRecentFreedAllocationNode;
		};

		enum D3D12_DRED_PAGE_FAULT_FLAGS
		{
			D3D12_DRED_PAGE_FAULT_FLAGS_NONE = 0
		};

		enum D3D12_DRED_DEVICE_STATE
		{
			D3D12_DRED_DEVICE_STATE_UNKNOWN   = 0,
			D3D12_DRED_DEVICE_STATE_HUNG      = 3,
			D3D12_DRED_DEVICE_STATE_FAULT     = 6,
			D3D12_DRED_DEVICE_STATE_PAGEFAULT = 7
		};

		struct D3D12_DRED_PAGE_FAULT_OUTPUT2
		{
			D3D12_GPU_VIRTUAL_ADDRESS          PageFaultVA;
			const D3D12_DRED_ALLOCATION_NODE1* pHeadExistingAllocationNode;
			const D3D12_DRED_ALLOCATION_NODE1* pHeadRecentFreedAllocationNode;
			D3D12_DRED_PAGE_FAULT_FLAGS        PageFaultFlags;
		};

		struct D3D12_DEVICE_REMOVED_EXTENDED_DATA1
		{
			HRESULT                            DeviceRemovedReason;
			D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT AutoBreadcrumbsOutput;
			D3D12_DRED_PAGE_FAULT_OUTPUT       PageFaultOutput;
		};

		struct D3D12_DEVICE_REMOVED_EXTENDED_DATA2
		{
			HRESULT                             DeviceRemovedReason;
			D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1 AutoBreadcrumbsOutput;
			D3D12_DRED_PAGE_FAULT_OUTPUT1       PageFaultOutput;
		};

		struct D3D12_DEVICE_REMOVED_EXTENDED_DATA3
		{
			HRESULT                             DeviceRemovedReason;
			D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1 AutoBreadcrumbsOutput;
			D3D12_DRED_PAGE_FAULT_OUTPUT2       PageFaultOutput;
			D3D12_DRED_DEVICE_STATE             DeviceState;
		};

		struct D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA
		{
			D3D12_DRED_VERSION Version;
			union
			{
				D3D12_DEVICE_REMOVED_EXTENDED_DATA  Dred_1_0;
				D3D12_DEVICE_REMOVED_EXTENDED_DATA1 Dred_1_1;
				D3D12_DEVICE_REMOVED_EXTENDED_DATA2 Dred_1_2;
				D3D12_DEVICE_REMOVED_EXTENDED_DATA3 Dred_1_3;
			};
		};

		MIDL_INTERFACE("82BC481C-6B9B-4030-AEDB-7EE3D1DF1E63")
		ID3D12DeviceRemovedExtendedDataSettings : public IUnknown
		{
		public:
			virtual void SetAutoBreadcrumbsEnablement(D3D12_DRED_ENABLEMENT Enablement) = 0;
			virtual void SetPageFaultEnablement(D3D12_DRED_ENABLEMENT Enablement)       = 0;
			virtual void SetWatsonDumpEnablement(D3D12_DRED_ENABLEMENT Enablement)      = 0;
		};

		MIDL_INTERFACE("DBD5AE51-3317-4F0A-ADF9-1D7CEDCAAE0B")
		ID3D12DeviceRemovedExtendedDataSettings1 : public ID3D12DeviceRemovedExtendedDataSettings
		{
		public:
			virtual void SetBreadcrumbContextEnablement(D3D12_DRED_ENABLEMENT Enablement) = 0;
		};

		MIDL_INTERFACE("98931D33-5AE8-4791-AA3C-1A73A2934E71")
		ID3D12DeviceRemovedExtendedData : public IUnknown
		{
		public:
			virtual HRESULT GetAutoBreadcrumbsOutput(D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT * pOutput) = 0;
			virtual HRESULT GetPageFaultAllocationOutput(D3D12_DRED_PAGE_FAULT_OUTPUT * pOutput)   = 0;
		};

		MIDL_INTERFACE("9727A022-CF1D-4DDA-9EBA-EFFA653FC506")
		ID3D12DeviceRemovedExtendedData1 : public ID3D12DeviceRemovedExtendedData
		{
		public:
			virtual HRESULT GetAutoBreadcrumbsOutput1(D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1 * pOutput) = 0;
			virtual HRESULT GetPageFaultAllocationOutput1(D3D12_DRED_PAGE_FAULT_OUTPUT1 * pOutput)   = 0;
		};

		MIDL_INTERFACE("67FC5816-E4CA-4915-BF18-42541272DA54")
		ID3D12DeviceRemovedExtendedData2 : public ID3D12DeviceRemovedExtendedData1
		{
		public:
			virtual HRESULT GetPageFaultAllocationOutput2(D3D12_DRED_PAGE_FAULT_OUTPUT2 * pOutput) = 0;

			virtual D3D12_DRED_DEVICE_STATE GetDeviceState() = 0;
		};

		enum D3D12_BACKGROUND_PROCESSING_MODE
		{
			D3D12_BACKGROUND_PROCESSING_MODE_ALLOWED                      = 0,
			D3D12_BACKGROUND_PROCESSING_MODE_ALLOW_INTRUSIVE_MEASUREMENTS = (D3D12_BACKGROUND_PROCESSING_MODE_ALLOWED + 1),
			D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_BACKGROUND_WORK      = (D3D12_BACKGROUND_PROCESSING_MODE_ALLOW_INTRUSIVE_MEASUREMENTS + 1),
			D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_PROFILING_BY_SYSTEM  = (D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_BACKGROUND_WORK + 1)
		};

		enum D3D12_MEASUREMENTS_ACTION
		{
			D3D12_MEASUREMENTS_ACTION_KEEP_ALL                     = 0,
			D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS               = (D3D12_MEASUREMENTS_ACTION_KEEP_ALL + 1),
			D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS_HIGH_PRIORITY = (D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS + 1),
			D3D12_MEASUREMENTS_ACTION_DISCARD_PREVIOUS             = (D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS_HIGH_PRIORITY + 1)
		};

		MIDL_INTERFACE("c70b221b-40e4-4a17-89af-025a0727a6dc")
		ID3D12Device6 : public ID3D12Device5
		{
		public:
			virtual HRESULT SetBackgroundProcessingMode(D3D12_BACKGROUND_PROCESSING_MODE Mode, D3D12_MEASUREMENTS_ACTION MeasurementsAction, HANDLE hEventToSignalUponCompletion, BOOL* pbFurtherMeasurementsDesired) = 0;
		};

		struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT
		{
			UINT NodeIndex;
			UINT Count;
		};

		struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES
		{
			UINT  NodeIndex;
			UINT  Count;
			GUID* pTypes;
		};

		struct D3D12_PROTECTED_RESOURCE_SESSION_DESC1
		{
			UINT                                   NodeMask;
			D3D12_PROTECTED_RESOURCE_SESSION_FLAGS Flags;
			GUID                                   ProtectionType;
		};

		MIDL_INTERFACE("D6F12DD6-76FB-406E-8961-4296EEFC0409")
		ID3D12ProtectedResourceSession1 : public ID3D12ProtectedResourceSession
		{
		public:
			virtual D3D12_PROTECTED_RESOURCE_SESSION_DESC1 GetDesc1() = 0;
		};

		MIDL_INTERFACE("5c014b53-68a1-4b9b-8bd1-dd6046b9358b")
		ID3D12Device7 : public ID3D12Device6
		{
		public:
			virtual HRESULT AddToStateObject(D3D12_STATE_OBJECT_DESC * pAddition, ID3D12StateObject * pStateObjectToGrowFrom, const GUID& riid, void** ppNewStateObject) = 0;

			virtual HRESULT CreateProtectedResourceSession1(const D3D12_PROTECTED_RESOURCE_SESSION_DESC1* pDesc, const GUID& riid, void** ppSession) = 0;
		};

		MIDL_INTERFACE("9218E6BB-F944-4F7E-A75C-B1B2C7B701F3")
		ID3D12Device8 : public ID3D12Device7
		{
		public:
			virtual D3D12_RESOURCE_ALLOCATION_INFO GetResourceAllocationInfo2(UINT visibleMask, UINT numResourceDescs, const D3D12_RESOURCE_DESC1* pResourceDescs, D3D12_RESOURCE_ALLOCATION_INFO1* pResourceAllocationInfo1) = 0;

			virtual HRESULT CreateCommittedResource2(const D3D12_HEAP_PROPERTIES* pHeapProperties, D3D12_HEAP_FLAGS HeapFlags, const D3D12_RESOURCE_DESC1* pDesc, D3D12_RESOURCE_STATES InitialResourceState, const D3D12_CLEAR_VALUE* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, const GUID& riidResource, void** ppvResource) = 0;

			virtual HRESULT CreatePlacedResource1(ID3D12Heap * pHeap, std::uint64_t HeapOffset, const D3D12_RESOURCE_DESC1* pDesc, D3D12_RESOURCE_STATES InitialState, const D3D12_CLEAR_VALUE* pOptimizedClearValue, const GUID& riid, void** ppvResource) = 0;

			virtual void CreateSamplerFeedbackUnorderedAccessView(ID3D12Resource * pTargetedResource, ID3D12Resource * pFeedbackResource, D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor) = 0;

			virtual void GetCopyableFootprints1(const D3D12_RESOURCE_DESC1* pResourceDesc, UINT FirstSubresource, UINT NumSubresources, std::uint64_t BaseOffset, D3D12_PLACED_SUBRESOURCE_FOOTPRINT* pLayouts, UINT* pNumRows, std::uint64_t* pRowSizeInBytes, std::uint64_t* pTotalBytes) = 0;
		};

		MIDL_INTERFACE("9D5E227A-4430-4161-88B3-3ECA6BB16E19")
		ID3D12Resource1 : public ID3D12Resource
		{
		public:
			virtual HRESULT GetProtectedResourceSession(const GUID& riid, void** ppProtectedSession) = 0;
		};

		MIDL_INTERFACE("BE36EC3B-EA85-4AEB-A45A-E9D76404A495")
		ID3D12Resource2 : public ID3D12Resource1
		{
		public:
			virtual D3D12_RESOURCE_DESC1 GetDesc1() = 0;
		};

		MIDL_INTERFACE("572F7389-2168-49E3-9693-D6DF5871BF6D")
		ID3D12Heap1 : public ID3D12Heap
		{
		public:
			virtual HRESULT GetProtectedResourceSession(const GUID& riid, void** ppProtectedSession) = 0;
		};

		MIDL_INTERFACE("6FDA83A7-B84C-4E38-9AC8-C7BD22016B3D")
		ID3D12GraphicsCommandList3 : public ID3D12GraphicsCommandList2
		{
		public:
			virtual void SetProtectedResourceSession(ID3D12ProtectedResourceSession * pProtectedResourceSession) = 0;
		};

		enum D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE
		{
			D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_DISCARD   = 0,
			D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_PRESERVE  = (D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_DISCARD + 1),
			D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_CLEAR     = (D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_PRESERVE + 1),
			D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_NO_ACCESS = (D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_CLEAR + 1)
		};

		struct D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS
		{
			D3D12_CLEAR_VALUE ClearValue;
		};

		struct D3D12_RENDER_PASS_BEGINNING_ACCESS
		{
			D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE Type;
			union
			{
				D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS Clear;
			};
		};

		enum D3D12_RENDER_PASS_ENDING_ACCESS_TYPE
		{
			D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_DISCARD   = 0,
			D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_PRESERVE  = (D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_DISCARD + 1),
			D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_RESOLVE   = (D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_PRESERVE + 1),
			D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_NO_ACCESS = (D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_RESOLVE + 1)
		};

		struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS
		{
			UINT       SrcSubresource;
			UINT       DstSubresource;
			UINT       DstX;
			UINT       DstY;
			D3D12_RECT SrcRect;
		};

		struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS
		{
			ID3D12Resource*                                                       pSrcResource;
			ID3D12Resource*                                                       pDstResource;
			UINT                                                                  SubresourceCount;
			const D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS* pSubresourceParameters;
			DXGI_FORMAT                                                           Format;
			D3D12_RESOLVE_MODE                                                    ResolveMode;
			BOOL                                                                  PreserveResolveSource;
		};

		struct D3D12_RENDER_PASS_ENDING_ACCESS
		{
			D3D12_RENDER_PASS_ENDING_ACCESS_TYPE Type;
			union
			{
				D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS Resolve;
			};
		};

		struct D3D12_RENDER_PASS_RENDER_TARGET_DESC
		{
			D3D12_CPU_DESCRIPTOR_HANDLE        cpuDescriptor;
			D3D12_RENDER_PASS_BEGINNING_ACCESS BeginningAccess;
			D3D12_RENDER_PASS_ENDING_ACCESS    EndingAccess;
		};

		struct D3D12_RENDER_PASS_DEPTH_STENCIL_DESC
		{
			D3D12_CPU_DESCRIPTOR_HANDLE        cpuDescriptor;
			D3D12_RENDER_PASS_BEGINNING_ACCESS DepthBeginningAccess;
			D3D12_RENDER_PASS_BEGINNING_ACCESS StencilBeginningAccess;
			D3D12_RENDER_PASS_ENDING_ACCESS    DepthEndingAccess;
			D3D12_RENDER_PASS_ENDING_ACCESS    StencilEndingAccess;
		};

		enum D3D12_RENDER_PASS_FLAGS
		{
			D3D12_RENDER_PASS_FLAG_NONE             = 0,
			D3D12_RENDER_PASS_FLAG_ALLOW_UAV_WRITES = 0x1,
			D3D12_RENDER_PASS_FLAG_SUSPENDING_PASS  = 0x2,
			D3D12_RENDER_PASS_FLAG_RESUMING_PASS    = 0x4
		};

		MIDL_INTERFACE("DBB84C27-36CE-4FC9-B801-F048C46AC570")
		ID3D12MetaCommand : public ID3D12Pageable
		{
		public:
			virtual std::uint64_t GetRequiredParameterResourceSize(D3D12_META_COMMAND_PARAMETER_STAGE Stage, UINT ParameterIndex) = 0;
		};

		struct D3D12_DISPATCH_RAYS_DESC
		{
			D3D12_GPU_VIRTUAL_ADDRESS_RANGE            RayGenerationShaderRecord;
			D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE MissShaderTable;
			D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE HitGroupTable;
			D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE CallableShaderTable;
			UINT                                       Width;
			UINT                                       Height;
			UINT                                       Depth;
		};

		MIDL_INTERFACE("8754318e-d3a9-4541-98cf-645b50dc4874")
		ID3D12GraphicsCommandList4 : public ID3D12GraphicsCommandList3
		{
		public:
			virtual void BeginRenderPass(UINT NumRenderTargets, const D3D12_RENDER_PASS_RENDER_TARGET_DESC* pRenderTargets, const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC* pDepthStencil, D3D12_RENDER_PASS_FLAGS Flags) = 0;

			virtual void EndRenderPass() = 0;

			virtual void InitializeMetaCommand(ID3D12MetaCommand * pMetaCommand, const void* pInitializationParametersData, SIZE_T InitializationParametersDataSizeInBytes) = 0;
			virtual void ExecuteMetaCommand(ID3D12MetaCommand * pMetaCommand, const void* pExecutionParametersData, SIZE_T ExecutionParametersDataSizeInBytes)              = 0;

			virtual void BuildRaytracingAccelerationStructure(const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC* pDesc, UINT NumPostbuildInfoDescs, const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC* pPostbuildInfoDescs)           = 0;
			virtual void EmitRaytracingAccelerationStructurePostbuildInfo(const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC* pDesc, UINT NumSourceAccelerationStructures, const D3D12_GPU_VIRTUAL_ADDRESS* pSourceAccelerationStructureData) = 0;
			virtual void CopyRaytracingAccelerationStructure(D3D12_GPU_VIRTUAL_ADDRESS DestAccelerationStructureData, D3D12_GPU_VIRTUAL_ADDRESS SourceAccelerationStructureData, D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE Mode)                     = 0;

			virtual void SetPipelineState1(ID3D12StateObject * pStateObject) = 0;

			virtual void DispatchRays(const D3D12_DISPATCH_RAYS_DESC* pDesc) = 0;
		};

		enum D3D12_SHADER_CACHE_MODE
		{
			D3D12_SHADER_CACHE_MODE_MEMORY = 0,
			D3D12_SHADER_CACHE_MODE_DISK   = (D3D12_SHADER_CACHE_MODE_MEMORY + 1)
		};

		enum D3D12_SHADER_CACHE_FLAGS
		{
			D3D12_SHADER_CACHE_FLAG_NONE             = 0,
			D3D12_SHADER_CACHE_FLAG_DRIVER_VERSIONED = 0x1,
			D3D12_SHADER_CACHE_FLAG_USE_WORKING_DIR  = 0x2
		};

		struct D3D12_SHADER_CACHE_SESSION_DESC
		{
			GUID                     Identifier;
			D3D12_SHADER_CACHE_MODE  Mode;
			D3D12_SHADER_CACHE_FLAGS Flags;
			UINT                     MaximumInMemoryCacheSizeBytes;
			UINT                     MaximumInMemoryCacheEntries;
			UINT                     MaximumValueFileSizeBytes;
			std::uint64_t            Version;
		};

		enum D3D12_BARRIER_LAYOUT
		{
			D3D12_BARRIER_LAYOUT_UNDEFINED                      = 0xffffffff,
			D3D12_BARRIER_LAYOUT_COMMON                         = 0,
			D3D12_BARRIER_LAYOUT_PRESENT                        = 0,
			D3D12_BARRIER_LAYOUT_GENERIC_READ                   = (D3D12_BARRIER_LAYOUT_PRESENT + 1),
			D3D12_BARRIER_LAYOUT_RENDER_TARGET                  = (D3D12_BARRIER_LAYOUT_GENERIC_READ + 1),
			D3D12_BARRIER_LAYOUT_UNORDERED_ACCESS               = (D3D12_BARRIER_LAYOUT_RENDER_TARGET + 1),
			D3D12_BARRIER_LAYOUT_DEPTH_STENCIL_WRITE            = (D3D12_BARRIER_LAYOUT_UNORDERED_ACCESS + 1),
			D3D12_BARRIER_LAYOUT_DEPTH_STENCIL_READ             = (D3D12_BARRIER_LAYOUT_DEPTH_STENCIL_WRITE + 1),
			D3D12_BARRIER_LAYOUT_SHADER_RESOURCE                = (D3D12_BARRIER_LAYOUT_DEPTH_STENCIL_READ + 1),
			D3D12_BARRIER_LAYOUT_COPY_SOURCE                    = (D3D12_BARRIER_LAYOUT_SHADER_RESOURCE + 1),
			D3D12_BARRIER_LAYOUT_COPY_DEST                      = (D3D12_BARRIER_LAYOUT_COPY_SOURCE + 1),
			D3D12_BARRIER_LAYOUT_RESOLVE_SOURCE                 = (D3D12_BARRIER_LAYOUT_COPY_DEST + 1),
			D3D12_BARRIER_LAYOUT_RESOLVE_DEST                   = (D3D12_BARRIER_LAYOUT_RESOLVE_SOURCE + 1),
			D3D12_BARRIER_LAYOUT_SHADING_RATE_SOURCE            = (D3D12_BARRIER_LAYOUT_RESOLVE_DEST + 1),
			D3D12_BARRIER_LAYOUT_VIDEO_DECODE_READ              = (D3D12_BARRIER_LAYOUT_SHADING_RATE_SOURCE + 1),
			D3D12_BARRIER_LAYOUT_VIDEO_DECODE_WRITE             = (D3D12_BARRIER_LAYOUT_VIDEO_DECODE_READ + 1),
			D3D12_BARRIER_LAYOUT_VIDEO_PROCESS_READ             = (D3D12_BARRIER_LAYOUT_VIDEO_DECODE_WRITE + 1),
			D3D12_BARRIER_LAYOUT_VIDEO_PROCESS_WRITE            = (D3D12_BARRIER_LAYOUT_VIDEO_PROCESS_READ + 1),
			D3D12_BARRIER_LAYOUT_VIDEO_ENCODE_READ              = (D3D12_BARRIER_LAYOUT_VIDEO_PROCESS_WRITE + 1),
			D3D12_BARRIER_LAYOUT_VIDEO_ENCODE_WRITE             = (D3D12_BARRIER_LAYOUT_VIDEO_ENCODE_READ + 1),
			D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_COMMON            = (D3D12_BARRIER_LAYOUT_VIDEO_ENCODE_WRITE + 1),
			D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_GENERIC_READ      = (D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_COMMON + 1),
			D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_UNORDERED_ACCESS  = (D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_GENERIC_READ + 1),
			D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_SHADER_RESOURCE   = (D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_UNORDERED_ACCESS + 1),
			D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_COPY_SOURCE       = (D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_SHADER_RESOURCE + 1),
			D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_COPY_DEST         = (D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_COPY_SOURCE + 1),
			D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_COMMON           = (D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_COPY_DEST + 1),
			D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_GENERIC_READ     = (D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_COMMON + 1),
			D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_UNORDERED_ACCESS = (D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_GENERIC_READ + 1),
			D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_SHADER_RESOURCE  = (D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_UNORDERED_ACCESS + 1),
			D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_COPY_SOURCE      = (D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_SHADER_RESOURCE + 1),
			D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_COPY_DEST        = (D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_COPY_SOURCE + 1),
			D3D12_BARRIER_LAYOUT_VIDEO_QUEUE_COMMON             = (D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_COPY_DEST + 1)
		};

		enum D3D12_BARRIER_SYNC
		{
			D3D12_BARRIER_SYNC_NONE                                                  = 0,
			D3D12_BARRIER_SYNC_ALL                                                   = 0x1,
			D3D12_BARRIER_SYNC_DRAW                                                  = 0x2,
			D3D12_BARRIER_SYNC_INPUT_ASSEMBLER                                       = 0x4,
			D3D12_BARRIER_SYNC_VERTEX_SHADING                                        = 0x8,
			D3D12_BARRIER_SYNC_PIXEL_SHADING                                         = 0x10,
			D3D12_BARRIER_SYNC_DEPTH_STENCIL                                         = 0x20,
			D3D12_BARRIER_SYNC_RENDER_TARGET                                         = 0x40,
			D3D12_BARRIER_SYNC_COMPUTE_SHADING                                       = 0x80,
			D3D12_BARRIER_SYNC_RAYTRACING                                            = 0x100,
			D3D12_BARRIER_SYNC_COPY                                                  = 0x200,
			D3D12_BARRIER_SYNC_RESOLVE                                               = 0x400,
			D3D12_BARRIER_SYNC_EXECUTE_INDIRECT                                      = 0x800,
			D3D12_BARRIER_SYNC_PREDICATION                                           = 0x800,
			D3D12_BARRIER_SYNC_ALL_SHADING                                           = 0x1000,
			D3D12_BARRIER_SYNC_NON_PIXEL_SHADING                                     = 0x2000,
			D3D12_BARRIER_SYNC_EMIT_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO = 0x4000,
			D3D12_BARRIER_SYNC_VIDEO_DECODE                                          = 0x100000,
			D3D12_BARRIER_SYNC_VIDEO_PROCESS                                         = 0x200000,
			D3D12_BARRIER_SYNC_VIDEO_ENCODE                                          = 0x400000,
			D3D12_BARRIER_SYNC_BUILD_RAYTRACING_ACCELERATION_STRUCTURE               = 0x800000,
			D3D12_BARRIER_SYNC_COPY_RAYTRACING_ACCELERATION_STRUCTURE                = 0x1000000,
			D3D12_BARRIER_SYNC_SPLIT                                                 = 0x80000000
		};

		enum D3D12_BARRIER_ACCESS
		{
			D3D12_BARRIER_ACCESS_COMMON                                  = 0,
			D3D12_BARRIER_ACCESS_VERTEX_BUFFER                           = 0x1,
			D3D12_BARRIER_ACCESS_CONSTANT_BUFFER                         = 0x2,
			D3D12_BARRIER_ACCESS_INDEX_BUFFER                            = 0x4,
			D3D12_BARRIER_ACCESS_RENDER_TARGET                           = 0x8,
			D3D12_BARRIER_ACCESS_UNORDERED_ACCESS                        = 0x10,
			D3D12_BARRIER_ACCESS_DEPTH_STENCIL_WRITE                     = 0x20,
			D3D12_BARRIER_ACCESS_DEPTH_STENCIL_READ                      = 0x40,
			D3D12_BARRIER_ACCESS_SHADER_RESOURCE                         = 0x80,
			D3D12_BARRIER_ACCESS_STREAM_OUTPUT                           = 0x100,
			D3D12_BARRIER_ACCESS_INDIRECT_ARGUMENT                       = 0x200,
			D3D12_BARRIER_ACCESS_PREDICATION                             = 0x200,
			D3D12_BARRIER_ACCESS_COPY_DEST                               = 0x400,
			D3D12_BARRIER_ACCESS_COPY_SOURCE                             = 0x800,
			D3D12_BARRIER_ACCESS_RESOLVE_DEST                            = 0x1000,
			D3D12_BARRIER_ACCESS_RESOLVE_SOURCE                          = 0x2000,
			D3D12_BARRIER_ACCESS_RAYTRACING_ACCELERATION_STRUCTURE_READ  = 0x4000,
			D3D12_BARRIER_ACCESS_RAYTRACING_ACCELERATION_STRUCTURE_WRITE = 0x8000,
			D3D12_BARRIER_ACCESS_SHADING_RATE_SOURCE                     = 0x10000,
			D3D12_BARRIER_ACCESS_VIDEO_DECODE_READ                       = 0x20000,
			D3D12_BARRIER_ACCESS_VIDEO_DECODE_WRITE                      = 0x40000,
			D3D12_BARRIER_ACCESS_VIDEO_PROCESS_READ                      = 0x80000,
			D3D12_BARRIER_ACCESS_VIDEO_PROCESS_WRITE                     = 0x100000,
			D3D12_BARRIER_ACCESS_VIDEO_ENCODE_READ                       = 0x200000,
			D3D12_BARRIER_ACCESS_VIDEO_ENCODE_WRITE                      = 0x400000,
			D3D12_BARRIER_ACCESS_NO_ACCESS                               = 0x80000000
		};

		enum D3D12_BARRIER_TYPE
		{
			D3D12_BARRIER_TYPE_GLOBAL  = 0,
			D3D12_BARRIER_TYPE_TEXTURE = (D3D12_BARRIER_TYPE_GLOBAL + 1),
			D3D12_BARRIER_TYPE_BUFFER  = (D3D12_BARRIER_TYPE_TEXTURE + 1)
		};

		enum D3D12_TEXTURE_BARRIER_FLAGS
		{
			D3D12_TEXTURE_BARRIER_FLAG_NONE    = 0,
			D3D12_TEXTURE_BARRIER_FLAG_DISCARD = 0x1
		};

		struct D3D12_BARRIER_SUBRESOURCE_RANGE
		{
			UINT IndexOrFirstMipLevel;
			UINT NumMipLevels;
			UINT FirstArraySlice;
			UINT NumArraySlices;
			UINT FirstPlane;
			UINT NumPlanes;
		};

		struct D3D12_GLOBAL_BARRIER
		{
			D3D12_BARRIER_SYNC   SyncBefore;
			D3D12_BARRIER_SYNC   SyncAfter;
			D3D12_BARRIER_ACCESS AccessBefore;
			D3D12_BARRIER_ACCESS AccessAfter;
		};

		struct D3D12_TEXTURE_BARRIER
		{
			D3D12_BARRIER_SYNC              SyncBefore;
			D3D12_BARRIER_SYNC              SyncAfter;
			D3D12_BARRIER_ACCESS            AccessBefore;
			D3D12_BARRIER_ACCESS            AccessAfter;
			D3D12_BARRIER_LAYOUT            LayoutBefore;
			D3D12_BARRIER_LAYOUT            LayoutAfter;
			ID3D12Resource*                 pResource;
			D3D12_BARRIER_SUBRESOURCE_RANGE Subresources;
			D3D12_TEXTURE_BARRIER_FLAGS     Flags;
		};

		struct D3D12_BUFFER_BARRIER
		{
			D3D12_BARRIER_SYNC   SyncBefore;
			D3D12_BARRIER_SYNC   SyncAfter;
			D3D12_BARRIER_ACCESS AccessBefore;
			D3D12_BARRIER_ACCESS AccessAfter;
			ID3D12Resource*      pResource;
			std::uint64_t        Offset;
			std::uint64_t        Size;
		};

		struct D3D12_BARRIER_GROUP
		{
			D3D12_BARRIER_TYPE Type;
			std::uint32_t      NumBarriers;
			union
			{
				const D3D12_GLOBAL_BARRIER*  pGlobalBarriers;
				const D3D12_TEXTURE_BARRIER* pTextureBarriers;
				const D3D12_BUFFER_BARRIER*  pBufferBarriers;
			};
		};

		MIDL_INTERFACE("28e2495d-0f64-4ae4-a6ec-129255dc49a8")
		ID3D12ShaderCacheSession : public ID3D12DeviceChild
		{
		public:
			virtual HRESULT FindValue(const void* pKey, UINT KeySize, void* pValue, UINT* pValueSize)      = 0;
			virtual HRESULT StoreValue(const void* pKey, UINT KeySize, const void* pValue, UINT ValueSize) = 0;

			virtual void SetDeleteOnDestroy() = 0;

			virtual D3D12_SHADER_CACHE_SESSION_DESC GetDesc() = 0;
		};

		enum D3D12_SHADER_CACHE_KIND_FLAGS
		{
			D3D12_SHADER_CACHE_KIND_FLAG_IMPLICIT_D3D_CACHE_FOR_DRIVER = 0x1,
			D3D12_SHADER_CACHE_KIND_FLAG_IMPLICIT_D3D_CONVERSIONS      = 0x2,
			D3D12_SHADER_CACHE_KIND_FLAG_IMPLICIT_DRIVER_MANAGED       = 0x4,
			D3D12_SHADER_CACHE_KIND_FLAG_APPLICATION_MANAGED           = 0x8
		};

		enum D3D12_SHADER_CACHE_CONTROL_FLAGS
		{
			D3D12_SHADER_CACHE_CONTROL_FLAG_DISABLE = 0x1,
			D3D12_SHADER_CACHE_CONTROL_FLAG_ENABLE  = 0x2,
			D3D12_SHADER_CACHE_CONTROL_FLAG_CLEAR   = 0x4
		};

		MIDL_INTERFACE("4c80e962-f032-4f60-bc9e-ebc2cfa1d83c")
		ID3D12Device9 : public ID3D12Device8
		{
		public:
			virtual HRESULT CreateShaderCacheSession(const D3D12_SHADER_CACHE_SESSION_DESC* pDesc, const GUID& riid, void** ppvSession) = 0;
			virtual HRESULT ShaderCacheControl(D3D12_SHADER_CACHE_KIND_FLAGS Kinds, D3D12_SHADER_CACHE_CONTROL_FLAGS Control)           = 0;

			virtual HRESULT CreateCommandQueue1(const D3D12_COMMAND_QUEUE_DESC* pDesc, const GUID& CreatorID, const GUID& riid, void** ppCommandQueue) = 0;
		};

		MIDL_INTERFACE("517f8718-aa66-49f9-b02b-a7ab89c06031")
		ID3D12Device10 : public ID3D12Device9
		{
		public:
			virtual HRESULT CreateCommittedResource3(const D3D12_HEAP_PROPERTIES* pHeapProperties, D3D12_HEAP_FLAGS HeapFlags, const D3D12_RESOURCE_DESC1* pDesc, D3D12_BARRIER_LAYOUT InitialLayout, const D3D12_CLEAR_VALUE* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, std::uint32_t NumCastableFormats, DXGI_FORMAT* pCastableFormats, const GUID& riidResource, void** ppvResource) = 0;

			virtual HRESULT CreatePlacedResource2(ID3D12Heap * pHeap, std::uint64_t HeapOffset, const D3D12_RESOURCE_DESC1* pDesc, D3D12_BARRIER_LAYOUT InitialLayout, const D3D12_CLEAR_VALUE* pOptimizedClearValue, std::uint32_t NumCastableFormats, DXGI_FORMAT* pCastableFormats, const GUID& riid, void** ppvResource) = 0;

			virtual HRESULT CreateReservedResource2(const D3D12_RESOURCE_DESC* pDesc, D3D12_BARRIER_LAYOUT InitialLayout, const D3D12_CLEAR_VALUE* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, std::uint32_t NumCastableFormats, DXGI_FORMAT* pCastableFormats, const GUID& riid, void** ppvResource) = 0;
		};

		MIDL_INTERFACE("bc66d368-7373-4943-8757-fc87dc79e476")
		ID3D12VirtualizationGuestDevice : public IUnknown
		{
		public:
			virtual HRESULT ShareWithHost(ID3D12DeviceChild * pObject, HANDLE * pHandle) = 0;

			virtual HRESULT CreateFenceFd(ID3D12Fence * pFence, std::uint64_t FenceValue, int* pFenceFd) = 0;
		};

		MIDL_INTERFACE("7071e1f0-e84b-4b33-974f-12fa49de65c5")
		ID3D12Tools : public IUnknown
		{
		public:
			virtual void EnableShaderInstrumentation(BOOL bEnable) = 0;

			virtual BOOL ShaderInstrumentationEnabled() = 0;
		};

		struct D3D12_SUBRESOURCE_DATA
		{
			const void* pData;
			LONG_PTR    RowPitch;
			LONG_PTR    SlicePitch;
		};

		struct D3D12_MEMCPY_DEST
		{
			void*  pData;
			SIZE_T RowPitch;
			SIZE_T SlicePitch;
		};

		MIDL_INTERFACE("344488b7-6846-474b-b989-f027448245e0")
		ID3D12Debug : public IUnknown
		{
		public:
			virtual void EnableDebugLayer() = 0;
		};

		enum D3D12_GPU_BASED_VALIDATION_FLAGS
		{
			D3D12_GPU_BASED_VALIDATION_FLAGS_NONE                   = 0,
			D3D12_GPU_BASED_VALIDATION_FLAGS_DISABLE_STATE_TRACKING = 0x1
		};

		MIDL_INTERFACE("affaa4ca-63fe-4d8e-b8ad-159000af4304")
		ID3D12Debug1 : public IUnknown
		{
		public:
			virtual void EnableDebugLayer() = 0;

			virtual void SetEnableGPUBasedValidation(BOOL Enable) = 0;

			virtual void SetEnableSynchronizedCommandQueueValidation(BOOL Enable) = 0;
		};

		MIDL_INTERFACE("93a665c4-a3b2-4e5d-b692-a26ae14e3374")
		ID3D12Debug2 : public IUnknown
		{
		public:
			virtual void SetGPUBasedValidationFlags(D3D12_GPU_BASED_VALIDATION_FLAGS Flags) = 0;
		};

		MIDL_INTERFACE("5cf4e58f-f671-4ff1-a542-3686e3d153d1")
		ID3D12Debug3 : public ID3D12Debug
		{
		public:
			virtual void SetEnableGPUBasedValidation(BOOL Enable) = 0;

			virtual void SetEnableSynchronizedCommandQueueValidation(BOOL Enable) = 0;

			virtual void SetGPUBasedValidationFlags(D3D12_GPU_BASED_VALIDATION_FLAGS Flags) = 0;
		};

		MIDL_INTERFACE("014b816e-9ec5-4a2f-a845-ffbe441ce13a")
		ID3D12Debug4 : public ID3D12Debug3
		{
		public:
			virtual void DisableDebugLayer() = 0;
		};

		MIDL_INTERFACE("548d6b12-09fa-40e0-9069-5dcd589a52c9")
		ID3D12Debug5 : public ID3D12Debug4
		{
		public:
			virtual void SetEnableAutoName(BOOL Enable) = 0;
		};

		MIDL_INTERFACE("82a816d6-5d01-4157-97d0-4975463fd1ed")
		ID3D12Debug6 : public ID3D12Debug5
		{
		public:
			virtual void SetForceLegacyBarrierValidation(BOOL Enable) = 0;
		};

		enum D3D12_RLDO_FLAGS
		{
			D3D12_RLDO_NONE            = 0,
			D3D12_RLDO_SUMMARY         = 0x1,
			D3D12_RLDO_DETAIL          = 0x2,
			D3D12_RLDO_IGNORE_INTERNAL = 0x4
		};

		enum D3D12_DEBUG_DEVICE_PARAMETER_TYPE
		{
			D3D12_DEBUG_DEVICE_PARAMETER_FEATURE_FLAGS                   = 0,
			D3D12_DEBUG_DEVICE_PARAMETER_GPU_BASED_VALIDATION_SETTINGS   = (D3D12_DEBUG_DEVICE_PARAMETER_FEATURE_FLAGS + 1),
			D3D12_DEBUG_DEVICE_PARAMETER_GPU_SLOWDOWN_PERFORMANCE_FACTOR = (D3D12_DEBUG_DEVICE_PARAMETER_GPU_BASED_VALIDATION_SETTINGS + 1)
		};

		enum D3D12_DEBUG_FEATURE
		{
			D3D12_DEBUG_FEATURE_NONE                                   = 0,
			D3D12_DEBUG_FEATURE_ALLOW_BEHAVIOR_CHANGING_DEBUG_AIDS     = 0x1,
			D3D12_DEBUG_FEATURE_CONSERVATIVE_RESOURCE_STATE_TRACKING   = 0x2,
			D3D12_DEBUG_FEATURE_DISABLE_VIRTUALIZED_BUNDLES_VALIDATION = 0x4,
			D3D12_DEBUG_FEATURE_EMULATE_WINDOWS7                       = 0x8
		};

		enum D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE
		{
			D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_NONE                 = 0,
			D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_STATE_TRACKING_ONLY  = (D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_NONE + 1),
			D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_UNGUARDED_VALIDATION = (D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_STATE_TRACKING_ONLY + 1),
			D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_GUARDED_VALIDATION   = (D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_UNGUARDED_VALIDATION + 1),
			NUM_D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODES                 = (D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_GUARDED_VALIDATION + 1)
		};

		enum D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS
		{
			D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_NONE                                           = 0,
			D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_FRONT_LOAD_CREATE_TRACKING_ONLY_SHADERS        = 0x1,
			D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_FRONT_LOAD_CREATE_UNGUARDED_VALIDATION_SHADERS = 0x2,
			D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_FRONT_LOAD_CREATE_GUARDED_VALIDATION_SHADERS   = 0x4,
			D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS_VALID_MASK                                    = 0x7
		};

		struct D3D12_DEBUG_DEVICE_GPU_BASED_VALIDATION_SETTINGS
		{
			UINT                                                   MaxMessagesPerCommandList;
			D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE           DefaultShaderPatchMode;
			D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS PipelineStateCreateFlags;
		};

		struct D3D12_DEBUG_DEVICE_GPU_SLOWDOWN_PERFORMANCE_FACTOR
		{
			FLOAT SlowdownFactor;
		};

		MIDL_INTERFACE("a9b71770-d099-4a65-a698-3dee10020f88")
		ID3D12DebugDevice1 : public IUnknown
		{
		public:
			virtual HRESULT SetDebugParameter(D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type, const void* pData, UINT DataSize) = 0;
			virtual HRESULT GetDebugParameter(D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type, void* pData, UINT DataSize)       = 0;

			virtual HRESULT ReportLiveDeviceObjects(D3D12_RLDO_FLAGS Flags) = 0;
		};

		MIDL_INTERFACE("3febd6dd-4973-4787-8194-e45f9e28923e")
		ID3D12DebugDevice : public IUnknown
		{
		public:
			virtual HRESULT             SetFeatureMask(D3D12_DEBUG_FEATURE Mask) = 0;
			virtual D3D12_DEBUG_FEATURE GetFeatureMask()                         = 0;

			virtual HRESULT ReportLiveDeviceObjects(D3D12_RLDO_FLAGS Flags) = 0;
		};

		MIDL_INTERFACE("60eccbc1-378d-4df1-894c-f8ac5ce4d7dd")
		ID3D12DebugDevice2 : public ID3D12DebugDevice
		{
		public:
			virtual HRESULT SetDebugParameter(D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type, const void* pData, UINT DataSize) = 0;
			virtual HRESULT GetDebugParameter(D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type, void* pData, UINT DataSize)       = 0;
		};

		MIDL_INTERFACE("09e0bf36-54ac-484f-8847-4baeeab6053a")
		ID3D12DebugCommandQueue : public IUnknown
		{
		public:
			virtual BOOL AssertResourceState(ID3D12Resource * pResource, UINT Subresource, UINT State) = 0;
		};

		enum D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE
		{
			D3D12_DEBUG_COMMAND_LIST_PARAMETER_GPU_BASED_VALIDATION_SETTINGS = 0
		};

		struct D3D12_DEBUG_COMMAND_LIST_GPU_BASED_VALIDATION_SETTINGS
		{
			D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE ShaderPatchMode;
		};

		MIDL_INTERFACE("102ca951-311b-4b01-b11f-ecb83e061b37")
		ID3D12DebugCommandList1 : public IUnknown
		{
		public:
			virtual BOOL AssertResourceState(ID3D12Resource * pResource, UINT Subresource, UINT State) = 0;

			virtual HRESULT SetDebugParameter(D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type, const void* pData, UINT DataSize) = 0;
			virtual HRESULT GetDebugParameter(D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type, void* pData, UINT DataSize)       = 0;
		};

		MIDL_INTERFACE("09e0bf36-54ac-484f-8847-4baeeab6053f")
		ID3D12DebugCommandList : public IUnknown
		{
		public:
			virtual BOOL AssertResourceState(ID3D12Resource * pResource, UINT Subresource, UINT State) = 0;

			virtual HRESULT             SetFeatureMask(D3D12_DEBUG_FEATURE Mask) = 0;
			virtual D3D12_DEBUG_FEATURE GetFeatureMask()                         = 0;
		};

		MIDL_INTERFACE("aeb575cf-4e06-48be-ba3b-c450fc96652e")
		ID3D12DebugCommandList2 : public ID3D12DebugCommandList
		{
		public:
			virtual HRESULT SetDebugParameter(D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type, const void* pData, UINT DataSize) = 0;
			virtual HRESULT GetDebugParameter(D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type, void* pData, UINT DataSize)       = 0;
		};

		MIDL_INTERFACE("0adf7d52-929c-4e61-addb-ffed30de66ef")
		ID3D12SharingContract : public IUnknown
		{
		public:
			virtual void Present(ID3D12Resource * pResource, UINT Subresource, HWND window) = 0;

			virtual void SharedFenceSignal(ID3D12Fence * pFence, std::uint64_t FenceValue) = 0;

			virtual void BeginCapturableWork(const GUID& guid) = 0;
			virtual void EndCapturableWork(const GUID& guid)   = 0;
		};

		enum D3D12_MESSAGE_CATEGORY
		{
			D3D12_MESSAGE_CATEGORY_APPLICATION_DEFINED   = 0,
			D3D12_MESSAGE_CATEGORY_MISCELLANEOUS         = (D3D12_MESSAGE_CATEGORY_APPLICATION_DEFINED + 1),
			D3D12_MESSAGE_CATEGORY_INITIALIZATION        = (D3D12_MESSAGE_CATEGORY_MISCELLANEOUS + 1),
			D3D12_MESSAGE_CATEGORY_CLEANUP               = (D3D12_MESSAGE_CATEGORY_INITIALIZATION + 1),
			D3D12_MESSAGE_CATEGORY_COMPILATION           = (D3D12_MESSAGE_CATEGORY_CLEANUP + 1),
			D3D12_MESSAGE_CATEGORY_STATE_CREATION        = (D3D12_MESSAGE_CATEGORY_COMPILATION + 1),
			D3D12_MESSAGE_CATEGORY_STATE_SETTING         = (D3D12_MESSAGE_CATEGORY_STATE_CREATION + 1),
			D3D12_MESSAGE_CATEGORY_STATE_GETTING         = (D3D12_MESSAGE_CATEGORY_STATE_SETTING + 1),
			D3D12_MESSAGE_CATEGORY_RESOURCE_MANIPULATION = (D3D12_MESSAGE_CATEGORY_STATE_GETTING + 1),
			D3D12_MESSAGE_CATEGORY_EXECUTION             = (D3D12_MESSAGE_CATEGORY_RESOURCE_MANIPULATION + 1),
			D3D12_MESSAGE_CATEGORY_SHADER                = (D3D12_MESSAGE_CATEGORY_EXECUTION + 1)
		};

		enum D3D12_MESSAGE_SEVERITY
		{
			D3D12_MESSAGE_SEVERITY_CORRUPTION = 0,
			D3D12_MESSAGE_SEVERITY_ERROR      = (D3D12_MESSAGE_SEVERITY_CORRUPTION + 1),
			D3D12_MESSAGE_SEVERITY_WARNING    = (D3D12_MESSAGE_SEVERITY_ERROR + 1),
			D3D12_MESSAGE_SEVERITY_INFO       = (D3D12_MESSAGE_SEVERITY_WARNING + 1),
			D3D12_MESSAGE_SEVERITY_MESSAGE    = (D3D12_MESSAGE_SEVERITY_INFO + 1)
		};

		enum D3D12_MESSAGE_ID
		{
			D3D12_MESSAGE_ID_UNKNOWN                                                                                       = 0,
			D3D12_MESSAGE_ID_STRING_FROM_APPLICATION                                                                       = 1,
			D3D12_MESSAGE_ID_CORRUPTED_THIS                                                                                = 2,
			D3D12_MESSAGE_ID_CORRUPTED_PARAMETER1                                                                          = 3,
			D3D12_MESSAGE_ID_CORRUPTED_PARAMETER2                                                                          = 4,
			D3D12_MESSAGE_ID_CORRUPTED_PARAMETER3                                                                          = 5,
			D3D12_MESSAGE_ID_CORRUPTED_PARAMETER4                                                                          = 6,
			D3D12_MESSAGE_ID_CORRUPTED_PARAMETER5                                                                          = 7,
			D3D12_MESSAGE_ID_CORRUPTED_PARAMETER6                                                                          = 8,
			D3D12_MESSAGE_ID_CORRUPTED_PARAMETER7                                                                          = 9,
			D3D12_MESSAGE_ID_CORRUPTED_PARAMETER8                                                                          = 10,
			D3D12_MESSAGE_ID_CORRUPTED_PARAMETER9                                                                          = 11,
			D3D12_MESSAGE_ID_CORRUPTED_PARAMETER10                                                                         = 12,
			D3D12_MESSAGE_ID_CORRUPTED_PARAMETER11                                                                         = 13,
			D3D12_MESSAGE_ID_CORRUPTED_PARAMETER12                                                                         = 14,
			D3D12_MESSAGE_ID_CORRUPTED_PARAMETER13                                                                         = 15,
			D3D12_MESSAGE_ID_CORRUPTED_PARAMETER14                                                                         = 16,
			D3D12_MESSAGE_ID_CORRUPTED_PARAMETER15                                                                         = 17,
			D3D12_MESSAGE_ID_CORRUPTED_MULTITHREADING                                                                      = 18,
			D3D12_MESSAGE_ID_MESSAGE_REPORTING_OUTOFMEMORY                                                                 = 19,
			D3D12_MESSAGE_ID_GETPRIVATEDATA_MOREDATA                                                                       = 20,
			D3D12_MESSAGE_ID_SETPRIVATEDATA_INVALIDFREEDATA                                                                = 21,
			D3D12_MESSAGE_ID_SETPRIVATEDATA_CHANGINGPARAMS                                                                 = 24,
			D3D12_MESSAGE_ID_SETPRIVATEDATA_OUTOFMEMORY                                                                    = 25,
			D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_UNRECOGNIZEDFORMAT                                                   = 26,
			D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDESC                                                          = 27,
			D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFORMAT                                                        = 28,
			D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDVIDEOPLANESLICE                                               = 29,
			D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDPLANESLICE                                                    = 30,
			D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDIMENSIONS                                                    = 31,
			D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDRESOURCE                                                      = 32,
			D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_UNRECOGNIZEDFORMAT                                                     = 35,
			D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_UNSUPPORTEDFORMAT                                                      = 36,
			D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDESC                                                            = 37,
			D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDFORMAT                                                          = 38,
			D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDVIDEOPLANESLICE                                                 = 39,
			D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDPLANESLICE                                                      = 40,
			D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDIMENSIONS                                                      = 41,
			D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDRESOURCE                                                        = 42,
			D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_UNRECOGNIZEDFORMAT                                                     = 45,
			D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDESC                                                            = 46,
			D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFORMAT                                                          = 47,
			D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDIMENSIONS                                                      = 48,
			D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDRESOURCE                                                        = 49,
			D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_OUTOFMEMORY                                                                 = 52,
			D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TOOMANYELEMENTS                                                             = 53,
			D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDFORMAT                                                               = 54,
			D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INCOMPATIBLEFORMAT                                                          = 55,
			D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOT                                                                 = 56,
			D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDINPUTSLOTCLASS                                                       = 57,
			D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_STEPRATESLOTCLASSMISMATCH                                                   = 58,
			D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOTCLASSCHANGE                                                      = 59,
			D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSTEPRATECHANGE                                                       = 60,
			D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDALIGNMENT                                                            = 61,
			D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_DUPLICATESEMANTIC                                                           = 62,
			D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_UNPARSEABLEINPUTSIGNATURE                                                   = 63,
			D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_NULLSEMANTIC                                                                = 64,
			D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_MISSINGELEMENT                                                              = 65,
			D3D12_MESSAGE_ID_CREATEVERTEXSHADER_OUTOFMEMORY                                                                = 66,
			D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERBYTECODE                                                      = 67,
			D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERTYPE                                                          = 68,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_OUTOFMEMORY                                                              = 69,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERBYTECODE                                                    = 70,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERTYPE                                                        = 71,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTOFMEMORY                                              = 72,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERBYTECODE                                    = 73,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE                                        = 74,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMENTRIES                                        = 75,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSTREAMSTRIDEUNUSED                                 = 76,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSLOT0EXPECTED                                      = 79,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSLOT                                        = 80,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_ONLYONEELEMENTPERSLOT                                    = 81,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCOMPONENTCOUNT                                    = 82,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTARTCOMPONENTANDCOMPONENTCOUNT                   = 83,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDGAPDEFINITION                                     = 84,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_REPEATEDOUTPUT                                           = 85,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSTREAMSTRIDE                                = 86,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGSEMANTIC                                          = 87,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MASKMISMATCH                                             = 88,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_CANTHAVEONLYGAPS                                         = 89,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DECLTOOCOMPLEX                                           = 90,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGOUTPUTSIGNATURE                                   = 91,
			D3D12_MESSAGE_ID_CREATEPIXELSHADER_OUTOFMEMORY                                                                 = 92,
			D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERBYTECODE                                                       = 93,
			D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERTYPE                                                           = 94,
			D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFILLMODE                                                         = 95,
			D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDCULLMODE                                                         = 96,
			D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDDEPTHBIASCLAMP                                                   = 97,
			D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDSLOPESCALEDDEPTHBIAS                                             = 98,
			D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHWRITEMASK                                                 = 100,
			D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHFUNC                                                      = 101,
			D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFAILOP                                         = 102,
			D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILZFAILOP                                        = 103,
			D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILPASSOP                                         = 104,
			D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFUNC                                           = 105,
			D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFAILOP                                          = 106,
			D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILZFAILOP                                         = 107,
			D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILPASSOP                                          = 108,
			D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFUNC                                            = 109,
			D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLEND                                                              = 111,
			D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLEND                                                             = 112,
			D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOP                                                               = 113,
			D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLENDALPHA                                                         = 114,
			D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLENDALPHA                                                        = 115,
			D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOPALPHA                                                          = 116,
			D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDRENDERTARGETWRITEMASK                                                 = 117,
			D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_INVALID                                                                 = 135,
			D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_ROOT_SIGNATURE_NOT_SET                                                      = 200,
			D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_ROOT_SIGNATURE_MISMATCH                                                     = 201,
			D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_NOT_SET                                                       = 202,
			D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_STRIDE_TOO_SMALL                                              = 209,
			D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_TOO_SMALL                                                     = 210,
			D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_NOT_SET                                                        = 211,
			D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_FORMAT_INVALID                                                 = 212,
			D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_TOO_SMALL                                                      = 213,
			D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INVALID_PRIMITIVETOPOLOGY                                                   = 219,
			D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_STRIDE_UNALIGNED                                                     = 221,
			D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_OFFSET_UNALIGNED                                                      = 222,
			D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_AT_FAULT                                                               = 232,
			D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_POSSIBLY_AT_FAULT                                                      = 233,
			D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_NOT_AT_FAULT                                                           = 234,
			D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TRAILING_DIGIT_IN_SEMANTIC                                                  = 239,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_TRAILING_DIGIT_IN_SEMANTIC                               = 240,
			D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TYPE_MISMATCH                                                               = 245,
			D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_EMPTY_LAYOUT                                                                = 253,
			D3D12_MESSAGE_ID_LIVE_OBJECT_SUMMARY                                                                           = 255,
			D3D12_MESSAGE_ID_LIVE_DEVICE                                                                                   = 274,
			D3D12_MESSAGE_ID_LIVE_SWAPCHAIN                                                                                = 275,
			D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFLAGS                                                           = 276,
			D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDCLASSLINKAGE                                                        = 277,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDCLASSLINKAGE                                                      = 278,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAMTORASTERIZER                                = 280,
			D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDCLASSLINKAGE                                                         = 283,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAM                                            = 284,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDENTRIES                                        = 285,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTRIDES                                        = 286,
			D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTRIDES                                        = 287,
			D3D12_MESSAGE_ID_CREATEHULLSHADER_OUTOFMEMORY                                                                  = 289,
			D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERBYTECODE                                                        = 290,
			D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERTYPE                                                            = 291,
			D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDCLASSLINKAGE                                                          = 292,
			D3D12_MESSAGE_ID_CREATEDOMAINSHADER_OUTOFMEMORY                                                                = 294,
			D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERBYTECODE                                                      = 295,
			D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERTYPE                                                          = 296,
			D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCLASSLINKAGE                                                        = 297,
			D3D12_MESSAGE_ID_RESOURCE_UNMAP_NOTMAPPED                                                                      = 310,
			D3D12_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_MISMATCHED_DATA_SIZE                                               = 318,
			D3D12_MESSAGE_ID_CREATECOMPUTESHADER_OUTOFMEMORY                                                               = 321,
			D3D12_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDSHADERBYTECODE                                                     = 322,
			D3D12_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCLASSLINKAGE                                                       = 323,
			D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEFLOATOPSNOTSUPPORTED                                          = 331,
			D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEFLOATOPSNOTSUPPORTED                                            = 332,
			D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEFLOATOPSNOTSUPPORTED                                          = 333,
			D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEFLOATOPSNOTSUPPORTED                                        = 334,
			D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEFLOATOPSNOTSUPPORTED                        = 335,
			D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEFLOATOPSNOTSUPPORTED                                           = 336,
			D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEFLOATOPSNOTSUPPORTED                                         = 337,
			D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDRESOURCE                                                     = 340,
			D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDESC                                                         = 341,
			D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFORMAT                                                       = 342,
			D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDVIDEOPLANESLICE                                              = 343,
			D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDPLANESLICE                                                   = 344,
			D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS                                                   = 345,
			D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_UNRECOGNIZEDFORMAT                                                  = 346,
			D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFLAGS                                                        = 354,
			D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFORCEDSAMPLECOUNT                                                = 401,
			D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDLOGICOPS                                                              = 403,
			D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEEXTENSIONSNOTSUPPORTED                                        = 410,
			D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEEXTENSIONSNOTSUPPORTED                                          = 412,
			D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEEXTENSIONSNOTSUPPORTED                                        = 414,
			D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEEXTENSIONSNOTSUPPORTED                                      = 416,
			D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEEXTENSIONSNOTSUPPORTED                      = 418,
			D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEEXTENSIONSNOTSUPPORTED                                         = 420,
			D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEEXTENSIONSNOTSUPPORTED                                       = 422,
			D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_UAVSNOTSUPPORTED                                                    = 425,
			D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_UAVSNOTSUPPORTED                                                      = 426,
			D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_UAVSNOTSUPPORTED                                                    = 427,
			D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_UAVSNOTSUPPORTED                                                  = 428,
			D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UAVSNOTSUPPORTED                                  = 429,
			D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_UAVSNOTSUPPORTED                                                     = 430,
			D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_UAVSNOTSUPPORTED                                                   = 431,
			D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDSOURCERECT                                                            = 447,
			D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_EMPTYRECT                                                                    = 448,
			D3D12_MESSAGE_ID_UPDATETILEMAPPINGS_INVALID_PARAMETER                                                          = 493,
			D3D12_MESSAGE_ID_COPYTILEMAPPINGS_INVALID_PARAMETER                                                            = 494,
			D3D12_MESSAGE_ID_CREATEDEVICE_INVALIDARGS                                                                      = 506,
			D3D12_MESSAGE_ID_CREATEDEVICE_WARNING                                                                          = 507,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_TYPE                                                                 = 519,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_NULL_POINTER                                                                 = 520,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_SUBRESOURCE                                                          = 521,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_RESERVED_BITS                                                                = 522,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISSING_BIND_FLAGS                                                           = 523,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISMATCHING_MISC_FLAGS                                                       = 524,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_MATCHING_STATES                                                              = 525,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMBINATION                                                          = 526,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_BEFORE_AFTER_MISMATCH                                                        = 527,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_RESOURCE                                                             = 528,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_SAMPLE_COUNT                                                                 = 529,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAGS                                                                = 530,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMBINED_FLAGS                                                       = 531,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAGS_FOR_FORMAT                                                     = 532,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_SPLIT_BARRIER                                                        = 533,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_UNMATCHED_END                                                                = 534,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_UNMATCHED_BEGIN                                                              = 535,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAG                                                                 = 536,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMMAND_LIST_TYPE                                                    = 537,
			D3D12_MESSAGE_ID_INVALID_SUBRESOURCE_STATE                                                                     = 538,
			D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_CONTENTION                                                                  = 540,
			D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_RESET                                                                       = 541,
			D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_RESET_BUNDLE                                                                = 542,
			D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_CANNOT_RESET                                                                = 543,
			D3D12_MESSAGE_ID_COMMAND_LIST_OPEN                                                                             = 544,
			D3D12_MESSAGE_ID_INVALID_BUNDLE_API                                                                            = 546,
			D3D12_MESSAGE_ID_COMMAND_LIST_CLOSED                                                                           = 547,
			D3D12_MESSAGE_ID_WRONG_COMMAND_ALLOCATOR_TYPE                                                                  = 549,
			D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_SYNC                                                                        = 552,
			D3D12_MESSAGE_ID_COMMAND_LIST_SYNC                                                                             = 553,
			D3D12_MESSAGE_ID_SET_DESCRIPTOR_HEAP_INVALID                                                                   = 554,
			D3D12_MESSAGE_ID_CREATE_COMMANDQUEUE                                                                           = 557,
			D3D12_MESSAGE_ID_CREATE_COMMANDALLOCATOR                                                                       = 558,
			D3D12_MESSAGE_ID_CREATE_PIPELINESTATE                                                                          = 559,
			D3D12_MESSAGE_ID_CREATE_COMMANDLIST12                                                                          = 560,
			D3D12_MESSAGE_ID_CREATE_RESOURCE                                                                               = 562,
			D3D12_MESSAGE_ID_CREATE_DESCRIPTORHEAP                                                                         = 563,
			D3D12_MESSAGE_ID_CREATE_ROOTSIGNATURE                                                                          = 564,
			D3D12_MESSAGE_ID_CREATE_LIBRARY                                                                                = 565,
			D3D12_MESSAGE_ID_CREATE_HEAP                                                                                   = 566,
			D3D12_MESSAGE_ID_CREATE_MONITOREDFENCE                                                                         = 567,
			D3D12_MESSAGE_ID_CREATE_QUERYHEAP                                                                              = 568,
			D3D12_MESSAGE_ID_CREATE_COMMANDSIGNATURE                                                                       = 569,
			D3D12_MESSAGE_ID_LIVE_COMMANDQUEUE                                                                             = 570,
			D3D12_MESSAGE_ID_LIVE_COMMANDALLOCATOR                                                                         = 571,
			D3D12_MESSAGE_ID_LIVE_PIPELINESTATE                                                                            = 572,
			D3D12_MESSAGE_ID_LIVE_COMMANDLIST12                                                                            = 573,
			D3D12_MESSAGE_ID_LIVE_RESOURCE                                                                                 = 575,
			D3D12_MESSAGE_ID_LIVE_DESCRIPTORHEAP                                                                           = 576,
			D3D12_MESSAGE_ID_LIVE_ROOTSIGNATURE                                                                            = 577,
			D3D12_MESSAGE_ID_LIVE_LIBRARY                                                                                  = 578,
			D3D12_MESSAGE_ID_LIVE_HEAP                                                                                     = 579,
			D3D12_MESSAGE_ID_LIVE_MONITOREDFENCE                                                                           = 580,
			D3D12_MESSAGE_ID_LIVE_QUERYHEAP                                                                                = 581,
			D3D12_MESSAGE_ID_LIVE_COMMANDSIGNATURE                                                                         = 582,
			D3D12_MESSAGE_ID_DESTROY_COMMANDQUEUE                                                                          = 583,
			D3D12_MESSAGE_ID_DESTROY_COMMANDALLOCATOR                                                                      = 584,
			D3D12_MESSAGE_ID_DESTROY_PIPELINESTATE                                                                         = 585,
			D3D12_MESSAGE_ID_DESTROY_COMMANDLIST12                                                                         = 586,
			D3D12_MESSAGE_ID_DESTROY_RESOURCE                                                                              = 588,
			D3D12_MESSAGE_ID_DESTROY_DESCRIPTORHEAP                                                                        = 589,
			D3D12_MESSAGE_ID_DESTROY_ROOTSIGNATURE                                                                         = 590,
			D3D12_MESSAGE_ID_DESTROY_LIBRARY                                                                               = 591,
			D3D12_MESSAGE_ID_DESTROY_HEAP                                                                                  = 592,
			D3D12_MESSAGE_ID_DESTROY_MONITOREDFENCE                                                                        = 593,
			D3D12_MESSAGE_ID_DESTROY_QUERYHEAP                                                                             = 594,
			D3D12_MESSAGE_ID_DESTROY_COMMANDSIGNATURE                                                                      = 595,
			D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDIMENSIONS                                                              = 597,
			D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDMISCFLAGS                                                               = 599,
			D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDARG_RETURN                                                              = 602,
			D3D12_MESSAGE_ID_CREATERESOURCE_OUTOFMEMORY_RETURN                                                             = 603,
			D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDESC                                                                    = 604,
			D3D12_MESSAGE_ID_POSSIBLY_INVALID_SUBRESOURCE_STATE                                                            = 607,
			D3D12_MESSAGE_ID_INVALID_USE_OF_NON_RESIDENT_RESOURCE                                                          = 608,
			D3D12_MESSAGE_ID_POSSIBLE_INVALID_USE_OF_NON_RESIDENT_RESOURCE                                                 = 609,
			D3D12_MESSAGE_ID_BUNDLE_PIPELINE_STATE_MISMATCH                                                                = 610,
			D3D12_MESSAGE_ID_PRIMITIVE_TOPOLOGY_MISMATCH_PIPELINE_STATE                                                    = 611,
			D3D12_MESSAGE_ID_RENDER_TARGET_FORMAT_MISMATCH_PIPELINE_STATE                                                  = 613,
			D3D12_MESSAGE_ID_RENDER_TARGET_SAMPLE_DESC_MISMATCH_PIPELINE_STATE                                             = 614,
			D3D12_MESSAGE_ID_DEPTH_STENCIL_FORMAT_MISMATCH_PIPELINE_STATE                                                  = 615,
			D3D12_MESSAGE_ID_DEPTH_STENCIL_SAMPLE_DESC_MISMATCH_PIPELINE_STATE                                             = 616,
			D3D12_MESSAGE_ID_CREATESHADER_INVALIDBYTECODE                                                                  = 622,
			D3D12_MESSAGE_ID_CREATEHEAP_NULLDESC                                                                           = 623,
			D3D12_MESSAGE_ID_CREATEHEAP_INVALIDSIZE                                                                        = 624,
			D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDHEAPTYPE                                                               = 625,
			D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDCPUPAGEPROPERTIES                                                      = 626,
			D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDMEMORYPOOL                                                             = 627,
			D3D12_MESSAGE_ID_CREATEHEAP_INVALIDPROPERTIES                                                                  = 628,
			D3D12_MESSAGE_ID_CREATEHEAP_INVALIDALIGNMENT                                                                   = 629,
			D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDMISCFLAGS                                                              = 630,
			D3D12_MESSAGE_ID_CREATEHEAP_INVALIDMISCFLAGS                                                                   = 631,
			D3D12_MESSAGE_ID_CREATEHEAP_INVALIDARG_RETURN                                                                  = 632,
			D3D12_MESSAGE_ID_CREATEHEAP_OUTOFMEMORY_RETURN                                                                 = 633,
			D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLHEAPPROPERTIES                                                      = 634,
			D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDHEAPTYPE                                                    = 635,
			D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDCPUPAGEPROPERTIES                                           = 636,
			D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDMEMORYPOOL                                                  = 637,
			D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDHEAPPROPERTIES                                                   = 638,
			D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDHEAPMISCFLAGS                                               = 639,
			D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDHEAPMISCFLAGS                                                    = 640,
			D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDARG_RETURN                                                       = 641,
			D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_OUTOFMEMORY_RETURN                                                      = 642,
			D3D12_MESSAGE_ID_GETCUSTOMHEAPPROPERTIES_UNRECOGNIZEDHEAPTYPE                                                  = 643,
			D3D12_MESSAGE_ID_GETCUSTOMHEAPPROPERTIES_INVALIDHEAPTYPE                                                       = 644,
			D3D12_MESSAGE_ID_CREATE_DESCRIPTOR_HEAP_INVALID_DESC                                                           = 645,
			D3D12_MESSAGE_ID_INVALID_DESCRIPTOR_HANDLE                                                                     = 646,
			D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALID_CONSERVATIVERASTERMODE                                          = 647,
			D3D12_MESSAGE_ID_CREATE_CONSTANT_BUFFER_VIEW_INVALID_RESOURCE                                                  = 649,
			D3D12_MESSAGE_ID_CREATE_CONSTANT_BUFFER_VIEW_INVALID_DESC                                                      = 650,
			D3D12_MESSAGE_ID_CREATE_UNORDEREDACCESS_VIEW_INVALID_COUNTER_USAGE                                             = 652,
			D3D12_MESSAGE_ID_COPY_DESCRIPTORS_INVALID_RANGES                                                               = 653,
			D3D12_MESSAGE_ID_COPY_DESCRIPTORS_WRITE_ONLY_DESCRIPTOR                                                        = 654,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RTV_FORMAT_NOT_UNKNOWN                                            = 655,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_RENDER_TARGET_COUNT                                       = 656,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VERTEX_SHADER_NOT_SET                                             = 657,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INPUTLAYOUT_NOT_SET                                               = 658,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_HS_DS_SIGNATURE_MISMATCH                           = 659,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_REGISTERINDEX                                      = 660,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_COMPONENTTYPE                                      = 661,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_REGISTERMASK                                       = 662,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_SYSTEMVALUE                                        = 663,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_NEVERWRITTEN_ALWAYSREADS                           = 664,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_MINPRECISION                                       = 665,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_SEMANTICNAME_NOT_FOUND                             = 666,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_XOR_DS_MISMATCH                                                = 667,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HULL_SHADER_INPUT_TOPOLOGY_MISMATCH                               = 668,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_DS_CONTROL_POINT_COUNT_MISMATCH                                = 669,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_DS_TESSELLATOR_DOMAIN_MISMATCH                                 = 670,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_USE_OF_CENTER_MULTISAMPLE_PATTERN                         = 671,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_USE_OF_FORCED_SAMPLE_COUNT                                = 672,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_PRIMITIVETOPOLOGY                                         = 673,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_SYSTEMVALUE                                               = 674,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_DUAL_SOURCE_BLENDING_CAN_ONLY_HAVE_RENDER_TARGET_0             = 675,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_RENDER_TARGET_DOES_NOT_SUPPORT_BLENDING                        = 676,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_OUTPUT_TYPE_MISMATCH                                           = 677,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_RENDER_TARGET_DOES_NOT_SUPPORT_LOGIC_OPS                       = 678,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RENDERTARGETVIEW_NOT_SET                                          = 679,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_DEPTHSTENCILVIEW_NOT_SET                                          = 680,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_GS_INPUT_PRIMITIVE_MISMATCH                                       = 681,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_POSITION_NOT_PRESENT                                              = 682,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MISSING_ROOT_SIGNATURE_FLAGS                                      = 683,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_INDEX_BUFFER_PROPERTIES                                   = 684,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_SAMPLE_DESC                                               = 685,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_ROOT_SIGNATURE_MISMATCH                                        = 686,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_DS_ROOT_SIGNATURE_MISMATCH                                        = 687,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VS_ROOT_SIGNATURE_MISMATCH                                        = 688,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_GS_ROOT_SIGNATURE_MISMATCH                                        = 689,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_ROOT_SIGNATURE_MISMATCH                                        = 690,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MISSING_ROOT_SIGNATURE                                            = 691,
			D3D12_MESSAGE_ID_EXECUTE_BUNDLE_OPEN_BUNDLE                                                                    = 692,
			D3D12_MESSAGE_ID_EXECUTE_BUNDLE_DESCRIPTOR_HEAP_MISMATCH                                                       = 693,
			D3D12_MESSAGE_ID_EXECUTE_BUNDLE_TYPE                                                                           = 694,
			D3D12_MESSAGE_ID_DRAW_EMPTY_SCISSOR_RECTANGLE                                                                  = 695,
			D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_BLOB_NOT_FOUND                                                          = 696,
			D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_DESERIALIZE_FAILED                                                      = 697,
			D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_INVALID_CONFIGURATION                                                   = 698,
			D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_NOT_SUPPORTED_ON_DEVICE                                                 = 699,
			D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLRESOURCEPROPERTIES                                                  = 700,
			D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLHEAP                                                                = 701,
			D3D12_MESSAGE_ID_GETRESOURCEALLOCATIONINFO_INVALIDRDESCS                                                       = 702,
			D3D12_MESSAGE_ID_MAKERESIDENT_NULLOBJECTARRAY                                                                  = 703,
			D3D12_MESSAGE_ID_EVICT_NULLOBJECTARRAY                                                                         = 705,
			D3D12_MESSAGE_ID_SET_DESCRIPTOR_TABLE_INVALID                                                                  = 708,
			D3D12_MESSAGE_ID_SET_ROOT_CONSTANT_INVALID                                                                     = 709,
			D3D12_MESSAGE_ID_SET_ROOT_CONSTANT_BUFFER_VIEW_INVALID                                                         = 710,
			D3D12_MESSAGE_ID_SET_ROOT_SHADER_RESOURCE_VIEW_INVALID                                                         = 711,
			D3D12_MESSAGE_ID_SET_ROOT_UNORDERED_ACCESS_VIEW_INVALID                                                        = 712,
			D3D12_MESSAGE_ID_SET_VERTEX_BUFFERS_INVALID_DESC                                                               = 713,
			D3D12_MESSAGE_ID_SET_INDEX_BUFFER_INVALID_DESC                                                                 = 715,
			D3D12_MESSAGE_ID_SET_STREAM_OUTPUT_BUFFERS_INVALID_DESC                                                        = 717,
			D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDDIMENSIONALITY                                                     = 718,
			D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDLAYOUT                                                             = 719,
			D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDIMENSIONALITY                                                          = 720,
			D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDALIGNMENT                                                               = 721,
			D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDMIPLEVELS                                                               = 722,
			D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDSAMPLEDESC                                                              = 723,
			D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDLAYOUT                                                                  = 724,
			D3D12_MESSAGE_ID_SET_INDEX_BUFFER_INVALID                                                                      = 725,
			D3D12_MESSAGE_ID_SET_VERTEX_BUFFERS_INVALID                                                                    = 726,
			D3D12_MESSAGE_ID_SET_STREAM_OUTPUT_BUFFERS_INVALID                                                             = 727,
			D3D12_MESSAGE_ID_SET_RENDER_TARGETS_INVALID                                                                    = 728,
			D3D12_MESSAGE_ID_CREATEQUERY_HEAP_INVALID_PARAMETERS                                                           = 729,
			D3D12_MESSAGE_ID_BEGIN_END_QUERY_INVALID_PARAMETERS                                                            = 731,
			D3D12_MESSAGE_ID_CLOSE_COMMAND_LIST_OPEN_QUERY                                                                 = 732,
			D3D12_MESSAGE_ID_RESOLVE_QUERY_DATA_INVALID_PARAMETERS                                                         = 733,
			D3D12_MESSAGE_ID_SET_PREDICATION_INVALID_PARAMETERS                                                            = 734,
			D3D12_MESSAGE_ID_TIMESTAMPS_NOT_SUPPORTED                                                                      = 735,
			D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDFORMAT                                                             = 737,
			D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDFORMAT                                                                  = 738,
			D3D12_MESSAGE_ID_GETCOPYABLEFOOTPRINTS_INVALIDSUBRESOURCERANGE                                                 = 739,
			D3D12_MESSAGE_ID_GETCOPYABLEFOOTPRINTS_INVALIDBASEOFFSET                                                       = 740,
			D3D12_MESSAGE_ID_GETCOPYABLELAYOUT_INVALIDSUBRESOURCERANGE                                                     = 739,
			D3D12_MESSAGE_ID_GETCOPYABLELAYOUT_INVALIDBASEOFFSET                                                           = 740,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_HEAP                                                                 = 741,
			D3D12_MESSAGE_ID_CREATE_SAMPLER_INVALID                                                                        = 742,
			D3D12_MESSAGE_ID_CREATECOMMANDSIGNATURE_INVALID                                                                = 743,
			D3D12_MESSAGE_ID_EXECUTE_INDIRECT_INVALID_PARAMETERS                                                           = 744,
			D3D12_MESSAGE_ID_GETGPUVIRTUALADDRESS_INVALID_RESOURCE_DIMENSION                                               = 745,
			D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDCLEARVALUE                                                              = 815,
			D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDCLEARVALUEFORMAT                                                   = 816,
			D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDCLEARVALUEFORMAT                                                        = 817,
			D3D12_MESSAGE_ID_CREATERESOURCE_CLEARVALUEDENORMFLUSH                                                          = 818,
			D3D12_MESSAGE_ID_CLEARRENDERTARGETVIEW_MISMATCHINGCLEARVALUE                                                   = 820,
			D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_MISMATCHINGCLEARVALUE                                                   = 821,
			D3D12_MESSAGE_ID_MAP_INVALIDHEAP                                                                               = 822,
			D3D12_MESSAGE_ID_UNMAP_INVALIDHEAP                                                                             = 823,
			D3D12_MESSAGE_ID_MAP_INVALIDRESOURCE                                                                           = 824,
			D3D12_MESSAGE_ID_UNMAP_INVALIDRESOURCE                                                                         = 825,
			D3D12_MESSAGE_ID_MAP_INVALIDSUBRESOURCE                                                                        = 826,
			D3D12_MESSAGE_ID_UNMAP_INVALIDSUBRESOURCE                                                                      = 827,
			D3D12_MESSAGE_ID_MAP_INVALIDRANGE                                                                              = 828,
			D3D12_MESSAGE_ID_UNMAP_INVALIDRANGE                                                                            = 829,
			D3D12_MESSAGE_ID_MAP_INVALIDDATAPOINTER                                                                        = 832,
			D3D12_MESSAGE_ID_MAP_INVALIDARG_RETURN                                                                         = 833,
			D3D12_MESSAGE_ID_MAP_OUTOFMEMORY_RETURN                                                                        = 834,
			D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_BUNDLENOTSUPPORTED                                                        = 835,
			D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_COMMANDLISTMISMATCH                                                       = 836,
			D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_OPENCOMMANDLIST                                                           = 837,
			D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_FAILEDCOMMANDLIST                                                         = 838,
			D3D12_MESSAGE_ID_COPYBUFFERREGION_NULLDST                                                                      = 839,
			D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDDSTRESOURCEDIMENSION                                                  = 840,
			D3D12_MESSAGE_ID_COPYBUFFERREGION_DSTRANGEOUTOFBOUNDS                                                          = 841,
			D3D12_MESSAGE_ID_COPYBUFFERREGION_NULLSRC                                                                      = 842,
			D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDSRCRESOURCEDIMENSION                                                  = 843,
			D3D12_MESSAGE_ID_COPYBUFFERREGION_SRCRANGEOUTOFBOUNDS                                                          = 844,
			D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDCOPYFLAGS                                                             = 845,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_NULLDST                                                                     = 846,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDDSTTYPE                                                         = 847,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTRESOURCEDIMENSION                                                 = 848,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTRESOURCE                                                          = 849,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTSUBRESOURCE                                                       = 850,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTOFFSET                                                            = 851,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDDSTFORMAT                                                       = 852,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTFORMAT                                                            = 853,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTDIMENSIONS                                                        = 854,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTROWPITCH                                                          = 855,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTPLACEMENT                                                         = 856,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTDSPLACEDFOOTPRINTFORMAT                                           = 857,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_DSTREGIONOUTOFBOUNDS                                                        = 858,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_NULLSRC                                                                     = 859,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDSRCTYPE                                                         = 860,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCRESOURCEDIMENSION                                                 = 861,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCRESOURCE                                                          = 862,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCSUBRESOURCE                                                       = 863,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCOFFSET                                                            = 864,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDSRCFORMAT                                                       = 865,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCFORMAT                                                            = 866,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCDIMENSIONS                                                        = 867,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCROWPITCH                                                          = 868,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCPLACEMENT                                                         = 869,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCDSPLACEDFOOTPRINTFORMAT                                           = 870,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_SRCREGIONOUTOFBOUNDS                                                        = 871,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTCOORDINATES                                                       = 872,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCBOX                                                               = 873,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_FORMATMISMATCH                                                              = 874,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_EMPTYBOX                                                                    = 875,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDCOPYFLAGS                                                            = 876,
			D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_SUBRESOURCE_INDEX                                                  = 877,
			D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_FORMAT                                                             = 878,
			D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_RESOURCE_MISMATCH                                                          = 879,
			D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_SAMPLE_COUNT                                                       = 880,
			D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_INVALID_SHADER                                                     = 881,
			D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_CS_ROOT_SIGNATURE_MISMATCH                                         = 882,
			D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_MISSING_ROOT_SIGNATURE                                             = 883,
			D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALIDCACHEDBLOB                                                         = 884,
			D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBADAPTERMISMATCH                                                 = 885,
			D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBDRIVERVERSIONMISMATCH                                           = 886,
			D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBDESCMISMATCH                                                    = 887,
			D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBIGNORED                                                         = 888,
			D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDHEAP                                                                = 889,
			D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDRESOURCE                                                            = 890,
			D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDBOX                                                                 = 891,
			D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDSUBRESOURCE                                                         = 892,
			D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_EMPTYBOX                                                                   = 893,
			D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDHEAP                                                               = 894,
			D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDRESOURCE                                                           = 895,
			D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDBOX                                                                = 896,
			D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDSUBRESOURCE                                                        = 897,
			D3D12_MESSAGE_ID_READFROMSUBRESOURCE_EMPTYBOX                                                                  = 898,
			D3D12_MESSAGE_ID_TOO_MANY_NODES_SPECIFIED                                                                      = 899,
			D3D12_MESSAGE_ID_INVALID_NODE_INDEX                                                                            = 900,
			D3D12_MESSAGE_ID_GETHEAPPROPERTIES_INVALIDRESOURCE                                                             = 901,
			D3D12_MESSAGE_ID_NODE_MASK_MISMATCH                                                                            = 902,
			D3D12_MESSAGE_ID_COMMAND_LIST_OUTOFMEMORY                                                                      = 903,
			D3D12_MESSAGE_ID_COMMAND_LIST_MULTIPLE_SWAPCHAIN_BUFFER_REFERENCES                                             = 904,
			D3D12_MESSAGE_ID_COMMAND_LIST_TOO_MANY_SWAPCHAIN_REFERENCES                                                    = 905,
			D3D12_MESSAGE_ID_COMMAND_QUEUE_TOO_MANY_SWAPCHAIN_REFERENCES                                                   = 906,
			D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_WRONGSWAPCHAINBUFFERREFERENCE                                             = 907,
			D3D12_MESSAGE_ID_COMMAND_LIST_SETRENDERTARGETS_INVALIDNUMRENDERTARGETS                                         = 908,
			D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_TYPE                                                                     = 909,
			D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_FLAGS                                                                    = 910,
			D3D12_MESSAGE_ID_CREATESHAREDRESOURCE_INVALIDFLAGS                                                             = 911,
			D3D12_MESSAGE_ID_CREATESHAREDRESOURCE_INVALIDFORMAT                                                            = 912,
			D3D12_MESSAGE_ID_CREATESHAREDHEAP_INVALIDFLAGS                                                                 = 913,
			D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_UNRECOGNIZEDPROPERTIES                                                = 914,
			D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_INVALIDSIZE                                                           = 915,
			D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_INVALIDOBJECT                                                         = 916,
			D3D12_MESSAGE_ID_KEYEDMUTEX_INVALIDOBJECT                                                                      = 917,
			D3D12_MESSAGE_ID_KEYEDMUTEX_INVALIDKEY                                                                         = 918,
			D3D12_MESSAGE_ID_KEYEDMUTEX_WRONGSTATE                                                                         = 919,
			D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_PRIORITY                                                                 = 920,
			D3D12_MESSAGE_ID_OBJECT_DELETED_WHILE_STILL_IN_USE                                                             = 921,
			D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALID_FLAGS                                                             = 922,
			D3D12_MESSAGE_ID_HEAP_ADDRESS_RANGE_HAS_NO_RESOURCE                                                            = 923,
			D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RENDER_TARGET_DELETED                                                       = 924,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_ALL_RENDER_TARGETS_HAVE_UNKNOWN_FORMAT                            = 925,
			D3D12_MESSAGE_ID_HEAP_ADDRESS_RANGE_INTERSECTS_MULTIPLE_BUFFERS                                                = 926,
			D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_GPU_WRITTEN_READBACK_RESOURCE_MAPPED                                      = 927,
			D3D12_MESSAGE_ID_UNMAP_RANGE_NOT_EMPTY                                                                         = 929,
			D3D12_MESSAGE_ID_MAP_INVALID_NULLRANGE                                                                         = 930,
			D3D12_MESSAGE_ID_UNMAP_INVALID_NULLRANGE                                                                       = 931,
			D3D12_MESSAGE_ID_NO_GRAPHICS_API_SUPPORT                                                                       = 932,
			D3D12_MESSAGE_ID_NO_COMPUTE_API_SUPPORT                                                                        = 933,
			D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_RESOURCE_FLAGS_NOT_SUPPORTED                                               = 934,
			D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_ROOT_ARGUMENT_UNINITIALIZED                                              = 935,
			D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_HEAP_INDEX_OUT_OF_BOUNDS                                      = 936,
			D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_TABLE_REGISTER_INDEX_OUT_OF_BOUNDS                            = 937,
			D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_UNINITIALIZED                                                 = 938,
			D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_TYPE_MISMATCH                                                 = 939,
			D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_SRV_RESOURCE_DIMENSION_MISMATCH                                          = 940,
			D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_UAV_RESOURCE_DIMENSION_MISMATCH                                          = 941,
			D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_INCOMPATIBLE_RESOURCE_STATE                                              = 942,
			D3D12_MESSAGE_ID_COPYRESOURCE_NULLDST                                                                          = 943,
			D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDDSTRESOURCE                                                               = 944,
			D3D12_MESSAGE_ID_COPYRESOURCE_NULLSRC                                                                          = 945,
			D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDSRCRESOURCE                                                               = 946,
			D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_NULLDST                                                                    = 947,
			D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALIDDSTRESOURCE                                                         = 948,
			D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_NULLSRC                                                                    = 949,
			D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALIDSRCRESOURCE                                                         = 950,
			D3D12_MESSAGE_ID_PIPELINE_STATE_TYPE_MISMATCH                                                                  = 951,
			D3D12_MESSAGE_ID_COMMAND_LIST_DISPATCH_ROOT_SIGNATURE_NOT_SET                                                  = 952,
			D3D12_MESSAGE_ID_COMMAND_LIST_DISPATCH_ROOT_SIGNATURE_MISMATCH                                                 = 953,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_ZERO_BARRIERS                                                                = 954,
			D3D12_MESSAGE_ID_BEGIN_END_EVENT_MISMATCH                                                                      = 955,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_POSSIBLE_BEFORE_AFTER_MISMATCH                                               = 956,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISMATCHING_BEGIN_END                                                        = 957,
			D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_INVALID_RESOURCE                                                         = 958,
			D3D12_MESSAGE_ID_USE_OF_ZERO_REFCOUNT_OBJECT                                                                   = 959,
			D3D12_MESSAGE_ID_OBJECT_EVICTED_WHILE_STILL_IN_USE                                                             = 960,
			D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_ROOT_DESCRIPTOR_ACCESS_OUT_OF_BOUNDS                                     = 961,
			D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_INVALIDLIBRARYBLOB                                                      = 962,
			D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_DRIVERVERSIONMISMATCH                                                   = 963,
			D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_ADAPTERVERSIONMISMATCH                                                  = 964,
			D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_UNSUPPORTED                                                             = 965,
			D3D12_MESSAGE_ID_CREATE_PIPELINELIBRARY                                                                        = 966,
			D3D12_MESSAGE_ID_LIVE_PIPELINELIBRARY                                                                          = 967,
			D3D12_MESSAGE_ID_DESTROY_PIPELINELIBRARY                                                                       = 968,
			D3D12_MESSAGE_ID_STOREPIPELINE_NONAME                                                                          = 969,
			D3D12_MESSAGE_ID_STOREPIPELINE_DUPLICATENAME                                                                   = 970,
			D3D12_MESSAGE_ID_LOADPIPELINE_NAMENOTFOUND                                                                     = 971,
			D3D12_MESSAGE_ID_LOADPIPELINE_INVALIDDESC                                                                      = 972,
			D3D12_MESSAGE_ID_PIPELINELIBRARY_SERIALIZE_NOTENOUGHMEMORY                                                     = 973,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_OUTPUT_RT_OUTPUT_MISMATCH                                      = 974,
			D3D12_MESSAGE_ID_SETEVENTONMULTIPLEFENCECOMPLETION_INVALIDFLAGS                                                = 975,
			D3D12_MESSAGE_ID_CREATE_QUEUE_VIDEO_NOT_SUPPORTED                                                              = 976,
			D3D12_MESSAGE_ID_CREATE_COMMAND_ALLOCATOR_VIDEO_NOT_SUPPORTED                                                  = 977,
			D3D12_MESSAGE_ID_CREATEQUERY_HEAP_VIDEO_DECODE_STATISTICS_NOT_SUPPORTED                                        = 978,
			D3D12_MESSAGE_ID_CREATE_VIDEODECODECOMMANDLIST                                                                 = 979,
			D3D12_MESSAGE_ID_CREATE_VIDEODECODER                                                                           = 980,
			D3D12_MESSAGE_ID_CREATE_VIDEODECODESTREAM                                                                      = 981,
			D3D12_MESSAGE_ID_LIVE_VIDEODECODECOMMANDLIST                                                                   = 982,
			D3D12_MESSAGE_ID_LIVE_VIDEODECODER                                                                             = 983,
			D3D12_MESSAGE_ID_LIVE_VIDEODECODESTREAM                                                                        = 984,
			D3D12_MESSAGE_ID_DESTROY_VIDEODECODECOMMANDLIST                                                                = 985,
			D3D12_MESSAGE_ID_DESTROY_VIDEODECODER                                                                          = 986,
			D3D12_MESSAGE_ID_DESTROY_VIDEODECODESTREAM                                                                     = 987,
			D3D12_MESSAGE_ID_DECODE_FRAME_INVALID_PARAMETERS                                                               = 988,
			D3D12_MESSAGE_ID_DEPRECATED_API                                                                                = 989,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISMATCHING_COMMAND_LIST_TYPE                                                = 990,
			D3D12_MESSAGE_ID_COMMAND_LIST_DESCRIPTOR_TABLE_NOT_SET                                                         = 991,
			D3D12_MESSAGE_ID_COMMAND_LIST_ROOT_CONSTANT_BUFFER_VIEW_NOT_SET                                                = 992,
			D3D12_MESSAGE_ID_COMMAND_LIST_ROOT_SHADER_RESOURCE_VIEW_NOT_SET                                                = 993,
			D3D12_MESSAGE_ID_COMMAND_LIST_ROOT_UNORDERED_ACCESS_VIEW_NOT_SET                                               = 994,
			D3D12_MESSAGE_ID_DISCARD_INVALID_SUBRESOURCE_RANGE                                                             = 995,
			D3D12_MESSAGE_ID_DISCARD_ONE_SUBRESOURCE_FOR_MIPS_WITH_RECTS                                                   = 996,
			D3D12_MESSAGE_ID_DISCARD_NO_RECTS_FOR_NON_TEXTURE2D                                                            = 997,
			D3D12_MESSAGE_ID_COPY_ON_SAME_SUBRESOURCE                                                                      = 998,
			D3D12_MESSAGE_ID_SETRESIDENCYPRIORITY_INVALID_PAGEABLE                                                         = 999,
			D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_UNSUPPORTED                                                              = 1000,
			D3D12_MESSAGE_ID_STATIC_DESCRIPTOR_INVALID_DESCRIPTOR_CHANGE                                                   = 1001,
			D3D12_MESSAGE_ID_DATA_STATIC_DESCRIPTOR_INVALID_DATA_CHANGE                                                    = 1002,
			D3D12_MESSAGE_ID_DATA_STATIC_WHILE_SET_AT_EXECUTE_DESCRIPTOR_INVALID_DATA_CHANGE                               = 1003,
			D3D12_MESSAGE_ID_EXECUTE_BUNDLE_STATIC_DESCRIPTOR_DATA_STATIC_NOT_SET                                          = 1004,
			D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_RESOURCE_ACCESS_OUT_OF_BOUNDS                                            = 1005,
			D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_SAMPLER_MODE_MISMATCH                                                    = 1006,
			D3D12_MESSAGE_ID_CREATE_FENCE_INVALID_FLAGS                                                                    = 1007,
			D3D12_MESSAGE_ID_RESOURCE_BARRIER_DUPLICATE_SUBRESOURCE_TRANSITIONS                                            = 1008,
			D3D12_MESSAGE_ID_SETRESIDENCYPRIORITY_INVALID_PRIORITY                                                         = 1009,
			D3D12_MESSAGE_ID_CREATE_DESCRIPTOR_HEAP_LARGE_NUM_DESCRIPTORS                                                  = 1013,
			D3D12_MESSAGE_ID_BEGIN_EVENT                                                                                   = 1014,
			D3D12_MESSAGE_ID_END_EVENT                                                                                     = 1015,
			D3D12_MESSAGE_ID_CREATEDEVICE_DEBUG_LAYER_STARTUP_OPTIONS                                                      = 1016,
			D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_DEPTHBOUNDSTEST_UNSUPPORTED                                           = 1017,
			D3D12_MESSAGE_ID_CREATEPIPELINESTATE_DUPLICATE_SUBOBJECT                                                       = 1018,
			D3D12_MESSAGE_ID_CREATEPIPELINESTATE_UNKNOWN_SUBOBJECT                                                         = 1019,
			D3D12_MESSAGE_ID_CREATEPIPELINESTATE_ZERO_SIZE_STREAM                                                          = 1020,
			D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALID_STREAM                                                            = 1021,
			D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CANNOT_DEDUCE_TYPE                                                        = 1022,
			D3D12_MESSAGE_ID_COMMAND_LIST_STATIC_DESCRIPTOR_RESOURCE_DIMENSION_MISMATCH                                    = 1023,
			D3D12_MESSAGE_ID_CREATE_COMMAND_QUEUE_INSUFFICIENT_PRIVILEGE_FOR_GLOBAL_REALTIME                               = 1024,
			D3D12_MESSAGE_ID_CREATE_COMMAND_QUEUE_INSUFFICIENT_HARDWARE_SUPPORT_FOR_GLOBAL_REALTIME                        = 1025,
			D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_ARCHITECTURE                                                         = 1026,
			D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_DST                                                                     = 1027,
			D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DST_RESOURCE_DIMENSION                                               = 1028,
			D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_DST_RANGE_OUT_OF_BOUNDS                                                      = 1029,
			D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_SRC                                                                     = 1030,
			D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_SRC_RESOURCE_DIMENSION                                               = 1031,
			D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_SRC_RANGE_OUT_OF_BOUNDS                                                      = 1032,
			D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_OFFSET_ALIGNMENT                                                     = 1033,
			D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_DEPENDENT_RESOURCES                                                     = 1034,
			D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_DEPENDENT_SUBRESOURCE_RANGES                                            = 1035,
			D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DEPENDENT_RESOURCE                                                   = 1036,
			D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DEPENDENT_SUBRESOURCE_RANGE                                          = 1037,
			D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_DEPENDENT_SUBRESOURCE_OUT_OF_BOUNDS                                          = 1038,
			D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_DEPENDENT_RANGE_OUT_OF_BOUNDS                                                = 1039,
			D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_ZERO_DEPENDENCIES                                                            = 1040,
			D3D12_MESSAGE_ID_DEVICE_CREATE_SHARED_HANDLE_INVALIDARG                                                        = 1041,
			D3D12_MESSAGE_ID_DESCRIPTOR_HANDLE_WITH_INVALID_RESOURCE                                                       = 1042,
			D3D12_MESSAGE_ID_SETDEPTHBOUNDS_INVALIDARGS                                                                    = 1043,
			D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_RESOURCE_STATE_IMPRECISE                                                 = 1044,
			D3D12_MESSAGE_ID_COMMAND_LIST_PIPELINE_STATE_NOT_SET                                                           = 1045,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_MODEL_MISMATCH                                             = 1046,
			D3D12_MESSAGE_ID_OBJECT_ACCESSED_WHILE_STILL_IN_USE                                                            = 1047,
			D3D12_MESSAGE_ID_PROGRAMMABLE_MSAA_UNSUPPORTED                                                                 = 1048,
			D3D12_MESSAGE_ID_SETSAMPLEPOSITIONS_INVALIDARGS                                                                = 1049,
			D3D12_MESSAGE_ID_RESOLVESUBRESOURCEREGION_INVALID_RECT                                                         = 1050,
			D3D12_MESSAGE_ID_CREATE_VIDEODECODECOMMANDQUEUE                                                                = 1051,
			D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSCOMMANDLIST                                                                = 1052,
			D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSCOMMANDQUEUE                                                               = 1053,
			D3D12_MESSAGE_ID_LIVE_VIDEODECODECOMMANDQUEUE                                                                  = 1054,
			D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSCOMMANDLIST                                                                  = 1055,
			D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSCOMMANDQUEUE                                                                 = 1056,
			D3D12_MESSAGE_ID_DESTROY_VIDEODECODECOMMANDQUEUE                                                               = 1057,
			D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSCOMMANDLIST                                                               = 1058,
			D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSCOMMANDQUEUE                                                              = 1059,
			D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSOR                                                                         = 1060,
			D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSSTREAM                                                                     = 1061,
			D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSOR                                                                           = 1062,
			D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSSTREAM                                                                       = 1063,
			D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSOR                                                                        = 1064,
			D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSSTREAM                                                                    = 1065,
			D3D12_MESSAGE_ID_PROCESS_FRAME_INVALID_PARAMETERS                                                              = 1066,
			D3D12_MESSAGE_ID_COPY_INVALIDLAYOUT                                                                            = 1067,
			D3D12_MESSAGE_ID_CREATE_CRYPTO_SESSION                                                                         = 1068,
			D3D12_MESSAGE_ID_CREATE_CRYPTO_SESSION_POLICY                                                                  = 1069,
			D3D12_MESSAGE_ID_CREATE_PROTECTED_RESOURCE_SESSION                                                             = 1070,
			D3D12_MESSAGE_ID_LIVE_CRYPTO_SESSION                                                                           = 1071,
			D3D12_MESSAGE_ID_LIVE_CRYPTO_SESSION_POLICY                                                                    = 1072,
			D3D12_MESSAGE_ID_LIVE_PROTECTED_RESOURCE_SESSION                                                               = 1073,
			D3D12_MESSAGE_ID_DESTROY_CRYPTO_SESSION                                                                        = 1074,
			D3D12_MESSAGE_ID_DESTROY_CRYPTO_SESSION_POLICY                                                                 = 1075,
			D3D12_MESSAGE_ID_DESTROY_PROTECTED_RESOURCE_SESSION                                                            = 1076,
			D3D12_MESSAGE_ID_PROTECTED_RESOURCE_SESSION_UNSUPPORTED                                                        = 1077,
			D3D12_MESSAGE_ID_FENCE_INVALIDOPERATION                                                                        = 1078,
			D3D12_MESSAGE_ID_CREATEQUERY_HEAP_COPY_QUEUE_TIMESTAMPS_NOT_SUPPORTED                                          = 1079,
			D3D12_MESSAGE_ID_SAMPLEPOSITIONS_MISMATCH_DEFERRED                                                             = 1080,
			D3D12_MESSAGE_ID_SAMPLEPOSITIONS_MISMATCH_RECORDTIME_ASSUMEDFROMFIRSTUSE                                       = 1081,
			D3D12_MESSAGE_ID_SAMPLEPOSITIONS_MISMATCH_RECORDTIME_ASSUMEDFROMCLEAR                                          = 1082,
			D3D12_MESSAGE_ID_CREATE_VIDEODECODERHEAP                                                                       = 1083,
			D3D12_MESSAGE_ID_LIVE_VIDEODECODERHEAP                                                                         = 1084,
			D3D12_MESSAGE_ID_DESTROY_VIDEODECODERHEAP                                                                      = 1085,
			D3D12_MESSAGE_ID_OPENEXISTINGHEAP_INVALIDARG_RETURN                                                            = 1086,
			D3D12_MESSAGE_ID_OPENEXISTINGHEAP_OUTOFMEMORY_RETURN                                                           = 1087,
			D3D12_MESSAGE_ID_OPENEXISTINGHEAP_INVALIDADDRESS                                                               = 1088,
			D3D12_MESSAGE_ID_OPENEXISTINGHEAP_INVALIDHANDLE                                                                = 1089,
			D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_INVALID_DEST                                                             = 1090,
			D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_INVALID_MODE                                                             = 1091,
			D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_INVALID_ALIGNMENT                                                        = 1092,
			D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_NOT_SUPPORTED                                                            = 1093,
			D3D12_MESSAGE_ID_SETVIEWINSTANCEMASK_INVALIDARGS                                                               = 1094,
			D3D12_MESSAGE_ID_VIEW_INSTANCING_UNSUPPORTED                                                                   = 1095,
			D3D12_MESSAGE_ID_VIEW_INSTANCING_INVALIDARGS                                                                   = 1096,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_MISMATCH_DECODE_REFERENCE_ONLY_FLAG                                         = 1097,
			D3D12_MESSAGE_ID_COPYRESOURCE_MISMATCH_DECODE_REFERENCE_ONLY_FLAG                                              = 1098,
			D3D12_MESSAGE_ID_CREATE_VIDEO_DECODE_HEAP_CAPS_FAILURE                                                         = 1099,
			D3D12_MESSAGE_ID_CREATE_VIDEO_DECODE_HEAP_CAPS_UNSUPPORTED                                                     = 1100,
			D3D12_MESSAGE_ID_VIDEO_DECODE_SUPPORT_INVALID_INPUT                                                            = 1101,
			D3D12_MESSAGE_ID_CREATE_VIDEO_DECODER_UNSUPPORTED                                                              = 1102,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_METADATA_ERROR                                                    = 1103,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VIEW_INSTANCING_VERTEX_SIZE_EXCEEDED                              = 1104,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RUNTIME_INTERNAL_ERROR                                            = 1105,
			D3D12_MESSAGE_ID_NO_VIDEO_API_SUPPORT                                                                          = 1106,
			D3D12_MESSAGE_ID_VIDEO_PROCESS_SUPPORT_INVALID_INPUT                                                           = 1107,
			D3D12_MESSAGE_ID_CREATE_VIDEO_PROCESSOR_CAPS_FAILURE                                                           = 1108,
			D3D12_MESSAGE_ID_VIDEO_PROCESS_SUPPORT_UNSUPPORTED_FORMAT                                                      = 1109,
			D3D12_MESSAGE_ID_VIDEO_DECODE_FRAME_INVALID_ARGUMENT                                                           = 1110,
			D3D12_MESSAGE_ID_ENQUEUE_MAKE_RESIDENT_INVALID_FLAGS                                                           = 1111,
			D3D12_MESSAGE_ID_OPENEXISTINGHEAP_UNSUPPORTED                                                                  = 1112,
			D3D12_MESSAGE_ID_VIDEO_PROCESS_FRAMES_INVALID_ARGUMENT                                                         = 1113,
			D3D12_MESSAGE_ID_VIDEO_DECODE_SUPPORT_UNSUPPORTED                                                              = 1114,
			D3D12_MESSAGE_ID_CREATE_COMMANDRECORDER                                                                        = 1115,
			D3D12_MESSAGE_ID_LIVE_COMMANDRECORDER                                                                          = 1116,
			D3D12_MESSAGE_ID_DESTROY_COMMANDRECORDER                                                                       = 1117,
			D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_VIDEO_NOT_SUPPORTED                                                   = 1118,
			D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_INVALID_SUPPORT_FLAGS                                                 = 1119,
			D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_INVALID_FLAGS                                                         = 1120,
			D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_MORE_RECORDERS_THAN_LOGICAL_PROCESSORS                                = 1121,
			D3D12_MESSAGE_ID_CREATE_COMMANDPOOL                                                                            = 1122,
			D3D12_MESSAGE_ID_LIVE_COMMANDPOOL                                                                              = 1123,
			D3D12_MESSAGE_ID_DESTROY_COMMANDPOOL                                                                           = 1124,
			D3D12_MESSAGE_ID_CREATE_COMMAND_POOL_INVALID_FLAGS                                                             = 1125,
			D3D12_MESSAGE_ID_CREATE_COMMAND_LIST_VIDEO_NOT_SUPPORTED                                                       = 1126,
			D3D12_MESSAGE_ID_COMMAND_RECORDER_SUPPORT_FLAGS_MISMATCH                                                       = 1127,
			D3D12_MESSAGE_ID_COMMAND_RECORDER_CONTENTION                                                                   = 1128,
			D3D12_MESSAGE_ID_COMMAND_RECORDER_USAGE_WITH_CREATECOMMANDLIST_COMMAND_LIST                                    = 1129,
			D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_USAGE_WITH_CREATECOMMANDLIST1_COMMAND_LIST                                  = 1130,
			D3D12_MESSAGE_ID_CANNOT_EXECUTE_EMPTY_COMMAND_LIST                                                             = 1131,
			D3D12_MESSAGE_ID_CANNOT_RESET_COMMAND_POOL_WITH_OPEN_COMMAND_LISTS                                             = 1132,
			D3D12_MESSAGE_ID_CANNOT_USE_COMMAND_RECORDER_WITHOUT_CURRENT_TARGET                                            = 1133,
			D3D12_MESSAGE_ID_CANNOT_CHANGE_COMMAND_RECORDER_TARGET_WHILE_RECORDING                                         = 1134,
			D3D12_MESSAGE_ID_COMMAND_POOL_SYNC                                                                             = 1135,
			D3D12_MESSAGE_ID_EVICT_UNDERFLOW                                                                               = 1136,
			D3D12_MESSAGE_ID_CREATE_META_COMMAND                                                                           = 1137,
			D3D12_MESSAGE_ID_LIVE_META_COMMAND                                                                             = 1138,
			D3D12_MESSAGE_ID_DESTROY_META_COMMAND                                                                          = 1139,
			D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALID_DST_RESOURCE                                                         = 1140,
			D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALID_SRC_RESOURCE                                                         = 1141,
			D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DST_RESOURCE                                                         = 1142,
			D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_SRC_RESOURCE                                                         = 1143,
			D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_NULL_BUFFER                                                      = 1144,
			D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_NULL_RESOURCE_DESC                                               = 1145,
			D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_UNSUPPORTED                                                      = 1146,
			D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_DIMENSION                                         = 1147,
			D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_FLAGS                                             = 1148,
			D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_OFFSET                                            = 1149,
			D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_RESOURCE_DIMENSION                                       = 1150,
			D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_RESOURCE_FLAGS                                           = 1151,
			D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_OUTOFMEMORY_RETURN                                               = 1152,
			D3D12_MESSAGE_ID_CANNOT_CREATE_GRAPHICS_AND_VIDEO_COMMAND_RECORDER                                             = 1153,
			D3D12_MESSAGE_ID_UPDATETILEMAPPINGS_POSSIBLY_MISMATCHING_PROPERTIES                                            = 1154,
			D3D12_MESSAGE_ID_CREATE_COMMAND_LIST_INVALID_COMMAND_LIST_TYPE                                                 = 1155,
			D3D12_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_INCOMPATIBLE_WITH_STRUCTURED_BUFFERS                                 = 1156,
			D3D12_MESSAGE_ID_COMPUTE_ONLY_DEVICE_OPERATION_UNSUPPORTED                                                     = 1157,
			D3D12_MESSAGE_ID_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INVALID                                               = 1158,
			D3D12_MESSAGE_ID_EMIT_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_INVALID                                 = 1159,
			D3D12_MESSAGE_ID_COPY_RAYTRACING_ACCELERATION_STRUCTURE_INVALID                                                = 1160,
			D3D12_MESSAGE_ID_DISPATCH_RAYS_INVALID                                                                         = 1161,
			D3D12_MESSAGE_ID_GET_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO_INVALID                                   = 1162,
			D3D12_MESSAGE_ID_CREATE_LIFETIMETRACKER                                                                        = 1163,
			D3D12_MESSAGE_ID_LIVE_LIFETIMETRACKER                                                                          = 1164,
			D3D12_MESSAGE_ID_DESTROY_LIFETIMETRACKER                                                                       = 1165,
			D3D12_MESSAGE_ID_DESTROYOWNEDOBJECT_OBJECTNOTOWNED                                                             = 1166,
			D3D12_MESSAGE_ID_CREATE_TRACKEDWORKLOAD                                                                        = 1167,
			D3D12_MESSAGE_ID_LIVE_TRACKEDWORKLOAD                                                                          = 1168,
			D3D12_MESSAGE_ID_DESTROY_TRACKEDWORKLOAD                                                                       = 1169,
			D3D12_MESSAGE_ID_RENDER_PASS_ERROR                                                                             = 1170,
			D3D12_MESSAGE_ID_META_COMMAND_ID_INVALID                                                                       = 1171,
			D3D12_MESSAGE_ID_META_COMMAND_UNSUPPORTED_PARAMS                                                               = 1172,
			D3D12_MESSAGE_ID_META_COMMAND_FAILED_ENUMERATION                                                               = 1173,
			D3D12_MESSAGE_ID_META_COMMAND_PARAMETER_SIZE_MISMATCH                                                          = 1174,
			D3D12_MESSAGE_ID_UNINITIALIZED_META_COMMAND                                                                    = 1175,
			D3D12_MESSAGE_ID_META_COMMAND_INVALID_GPU_VIRTUAL_ADDRESS                                                      = 1176,
			D3D12_MESSAGE_ID_CREATE_VIDEOENCODECOMMANDLIST                                                                 = 1177,
			D3D12_MESSAGE_ID_LIVE_VIDEOENCODECOMMANDLIST                                                                   = 1178,
			D3D12_MESSAGE_ID_DESTROY_VIDEOENCODECOMMANDLIST                                                                = 1179,
			D3D12_MESSAGE_ID_CREATE_VIDEOENCODECOMMANDQUEUE                                                                = 1180,
			D3D12_MESSAGE_ID_LIVE_VIDEOENCODECOMMANDQUEUE                                                                  = 1181,
			D3D12_MESSAGE_ID_DESTROY_VIDEOENCODECOMMANDQUEUE                                                               = 1182,
			D3D12_MESSAGE_ID_CREATE_VIDEOMOTIONESTIMATOR                                                                   = 1183,
			D3D12_MESSAGE_ID_LIVE_VIDEOMOTIONESTIMATOR                                                                     = 1184,
			D3D12_MESSAGE_ID_DESTROY_VIDEOMOTIONESTIMATOR                                                                  = 1185,
			D3D12_MESSAGE_ID_CREATE_VIDEOMOTIONVECTORHEAP                                                                  = 1186,
			D3D12_MESSAGE_ID_LIVE_VIDEOMOTIONVECTORHEAP                                                                    = 1187,
			D3D12_MESSAGE_ID_DESTROY_VIDEOMOTIONVECTORHEAP                                                                 = 1188,
			D3D12_MESSAGE_ID_MULTIPLE_TRACKED_WORKLOADS                                                                    = 1189,
			D3D12_MESSAGE_ID_MULTIPLE_TRACKED_WORKLOAD_PAIRS                                                               = 1190,
			D3D12_MESSAGE_ID_OUT_OF_ORDER_TRACKED_WORKLOAD_PAIR                                                            = 1191,
			D3D12_MESSAGE_ID_CANNOT_ADD_TRACKED_WORKLOAD                                                                   = 1192,
			D3D12_MESSAGE_ID_INCOMPLETE_TRACKED_WORKLOAD_PAIR                                                              = 1193,
			D3D12_MESSAGE_ID_CREATE_STATE_OBJECT_ERROR                                                                     = 1194,
			D3D12_MESSAGE_ID_GET_SHADER_IDENTIFIER_ERROR                                                                   = 1195,
			D3D12_MESSAGE_ID_GET_SHADER_STACK_SIZE_ERROR                                                                   = 1196,
			D3D12_MESSAGE_ID_GET_PIPELINE_STACK_SIZE_ERROR                                                                 = 1197,
			D3D12_MESSAGE_ID_SET_PIPELINE_STACK_SIZE_ERROR                                                                 = 1198,
			D3D12_MESSAGE_ID_GET_SHADER_IDENTIFIER_SIZE_INVALID                                                            = 1199,
			D3D12_MESSAGE_ID_CHECK_DRIVER_MATCHING_IDENTIFIER_INVALID                                                      = 1200,
			D3D12_MESSAGE_ID_CHECK_DRIVER_MATCHING_IDENTIFIER_DRIVER_REPORTED_ISSUE                                        = 1201,
			D3D12_MESSAGE_ID_RENDER_PASS_INVALID_RESOURCE_BARRIER                                                          = 1202,
			D3D12_MESSAGE_ID_RENDER_PASS_DISALLOWED_API_CALLED                                                             = 1203,
			D3D12_MESSAGE_ID_RENDER_PASS_CANNOT_NEST_RENDER_PASSES                                                         = 1204,
			D3D12_MESSAGE_ID_RENDER_PASS_CANNOT_END_WITHOUT_BEGIN                                                          = 1205,
			D3D12_MESSAGE_ID_RENDER_PASS_CANNOT_CLOSE_COMMAND_LIST                                                         = 1206,
			D3D12_MESSAGE_ID_RENDER_PASS_GPU_WORK_WHILE_SUSPENDED                                                          = 1207,
			D3D12_MESSAGE_ID_RENDER_PASS_MISMATCHING_SUSPEND_RESUME                                                        = 1208,
			D3D12_MESSAGE_ID_RENDER_PASS_NO_PRIOR_SUSPEND_WITHIN_EXECUTECOMMANDLISTS                                       = 1209,
			D3D12_MESSAGE_ID_RENDER_PASS_NO_SUBSEQUENT_RESUME_WITHIN_EXECUTECOMMANDLISTS                                   = 1210,
			D3D12_MESSAGE_ID_TRACKED_WORKLOAD_COMMAND_QUEUE_MISMATCH                                                       = 1211,
			D3D12_MESSAGE_ID_TRACKED_WORKLOAD_NOT_SUPPORTED                                                                = 1212,
			D3D12_MESSAGE_ID_RENDER_PASS_MISMATCHING_NO_ACCESS                                                             = 1213,
			D3D12_MESSAGE_ID_RENDER_PASS_UNSUPPORTED_RESOLVE                                                               = 1214,
			D3D12_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_INVALID_RESOURCE_PTR                                                 = 1215,
			D3D12_MESSAGE_ID_WINDOWS7_FENCE_OUTOFORDER_SIGNAL                                                              = 1216,
			D3D12_MESSAGE_ID_WINDOWS7_FENCE_OUTOFORDER_WAIT                                                                = 1217,
			D3D12_MESSAGE_ID_VIDEO_CREATE_MOTION_ESTIMATOR_INVALID_ARGUMENT                                                = 1218,
			D3D12_MESSAGE_ID_VIDEO_CREATE_MOTION_VECTOR_HEAP_INVALID_ARGUMENT                                              = 1219,
			D3D12_MESSAGE_ID_ESTIMATE_MOTION_INVALID_ARGUMENT                                                              = 1220,
			D3D12_MESSAGE_ID_RESOLVE_MOTION_VECTOR_HEAP_INVALID_ARGUMENT                                                   = 1221,
			D3D12_MESSAGE_ID_GETGPUVIRTUALADDRESS_INVALID_HEAP_TYPE                                                        = 1222,
			D3D12_MESSAGE_ID_SET_BACKGROUND_PROCESSING_MODE_INVALID_ARGUMENT                                               = 1223,
			D3D12_MESSAGE_ID_CREATE_COMMAND_LIST_INVALID_COMMAND_LIST_TYPE_FOR_FEATURE_LEVEL                               = 1224,
			D3D12_MESSAGE_ID_CREATE_VIDEOEXTENSIONCOMMAND                                                                  = 1225,
			D3D12_MESSAGE_ID_LIVE_VIDEOEXTENSIONCOMMAND                                                                    = 1226,
			D3D12_MESSAGE_ID_DESTROY_VIDEOEXTENSIONCOMMAND                                                                 = 1227,
			D3D12_MESSAGE_ID_INVALID_VIDEO_EXTENSION_COMMAND_ID                                                            = 1228,
			D3D12_MESSAGE_ID_VIDEO_EXTENSION_COMMAND_INVALID_ARGUMENT                                                      = 1229,
			D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_NOT_UNIQUE_IN_DXIL_LIBRARY                                              = 1230,
			D3D12_MESSAGE_ID_VARIABLE_SHADING_RATE_NOT_ALLOWED_WITH_TIR                                                    = 1231,
			D3D12_MESSAGE_ID_GEOMETRY_SHADER_OUTPUTTING_BOTH_VIEWPORT_ARRAY_INDEX_AND_SHADING_RATE_NOT_SUPPORTED_ON_DEVICE = 1232,
			D3D12_MESSAGE_ID_RSSETSHADING_RATE_INVALID_SHADING_RATE                                                        = 1233,
			D3D12_MESSAGE_ID_RSSETSHADING_RATE_SHADING_RATE_NOT_PERMITTED_BY_CAP                                           = 1234,
			D3D12_MESSAGE_ID_RSSETSHADING_RATE_INVALID_COMBINER                                                            = 1235,
			D3D12_MESSAGE_ID_RSSETSHADINGRATEIMAGE_REQUIRES_TIER_2                                                         = 1236,
			D3D12_MESSAGE_ID_RSSETSHADINGRATE_REQUIRES_TIER_1                                                              = 1237,
			D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_FORMAT                                                           = 1238,
			D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_ARRAY_SIZE                                                       = 1239,
			D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_MIP_LEVEL                                                        = 1240,
			D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_SAMPLE_COUNT                                                     = 1241,
			D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_SAMPLE_QUALITY                                                   = 1242,
			D3D12_MESSAGE_ID_NON_RETAIL_SHADER_MODEL_WONT_VALIDATE                                                         = 1243,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_AS_ROOT_SIGNATURE_MISMATCH                                        = 1244,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MS_ROOT_SIGNATURE_MISMATCH                                        = 1245,
			D3D12_MESSAGE_ID_ADD_TO_STATE_OBJECT_ERROR                                                                     = 1246,
			D3D12_MESSAGE_ID_CREATE_PROTECTED_RESOURCE_SESSION_INVALID_ARGUMENT                                            = 1247,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MS_PSO_DESC_MISMATCH                                              = 1248,
			D3D12_MESSAGE_ID_CREATEPIPELINESTATE_MS_INCOMPLETE_TYPE                                                        = 1249,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_AS_NOT_MS_MISMATCH                                                = 1250,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MS_NOT_PS_MISMATCH                                                = 1251,
			D3D12_MESSAGE_ID_NONZERO_SAMPLER_FEEDBACK_MIP_REGION_WITH_INCOMPATIBLE_FORMAT                                  = 1252,
			D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INPUTLAYOUT_SHADER_MISMATCH                                       = 1253,
			D3D12_MESSAGE_ID_EMPTY_DISPATCH                                                                                = 1254,
			D3D12_MESSAGE_ID_RESOURCE_FORMAT_REQUIRES_SAMPLER_FEEDBACK_CAPABILITY                                          = 1255,
			D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_MIP_REGION                                                       = 1256,
			D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_DIMENSION                                                        = 1257,
			D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_SAMPLE_COUNT                                                     = 1258,
			D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_SAMPLE_QUALITY                                                   = 1259,
			D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_LAYOUT                                                           = 1260,
			D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_REQUIRES_UNORDERED_ACCESS_FLAG                                           = 1261,
			D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_CREATE_UAV_NULL_ARGUMENTS                                                    = 1262,
			D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_UAV_REQUIRES_SAMPLER_FEEDBACK_CAPABILITY                                     = 1263,
			D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_CREATE_UAV_REQUIRES_FEEDBACK_MAP_FORMAT                                      = 1264,
			D3D12_MESSAGE_ID_CREATEMESHSHADER_INVALIDSHADERBYTECODE                                                        = 1265,
			D3D12_MESSAGE_ID_CREATEMESHSHADER_OUTOFMEMORY                                                                  = 1266,
			D3D12_MESSAGE_ID_CREATEMESHSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE                                            = 1267,
			D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_SAMPLER_FEEDBACK_TRANSCODE_INVALID_FORMAT                                  = 1268,
			D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_SAMPLER_FEEDBACK_INVALID_MIP_LEVEL_COUNT                                   = 1269,
			D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_SAMPLER_FEEDBACK_TRANSCODE_ARRAY_SIZE_MISMATCH                             = 1270,
			D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_CREATE_UAV_MISMATCHING_TARGETED_RESOURCE                                     = 1271,
			D3D12_MESSAGE_ID_CREATEMESHSHADER_OUTPUTEXCEEDSMAXSIZE                                                         = 1272,
			D3D12_MESSAGE_ID_CREATEMESHSHADER_GROUPSHAREDEXCEEDSMAXSIZE                                                    = 1273,
			D3D12_MESSAGE_ID_VERTEX_SHADER_OUTPUTTING_BOTH_VIEWPORT_ARRAY_INDEX_AND_SHADING_RATE_NOT_SUPPORTED_ON_DEVICE   = 1274,
			D3D12_MESSAGE_ID_MESH_SHADER_OUTPUTTING_BOTH_VIEWPORT_ARRAY_INDEX_AND_SHADING_RATE_NOT_SUPPORTED_ON_DEVICE     = 1275,
			D3D12_MESSAGE_ID_CREATEMESHSHADER_MISMATCHEDASMSPAYLOADSIZE                                                    = 1276,
			D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_UNBOUNDED_STATIC_DESCRIPTORS                                            = 1277,
			D3D12_MESSAGE_ID_CREATEAMPLIFICATIONSHADER_INVALIDSHADERBYTECODE                                               = 1278,
			D3D12_MESSAGE_ID_CREATEAMPLIFICATIONSHADER_OUTOFMEMORY                                                         = 1279,
			D3D12_MESSAGE_ID_CREATE_SHADERCACHESESSION                                                                     = 1280,
			D3D12_MESSAGE_ID_LIVE_SHADERCACHESESSION                                                                       = 1281,
			D3D12_MESSAGE_ID_DESTROY_SHADERCACHESESSION                                                                    = 1282,
			D3D12_MESSAGE_ID_CREATESHADERCACHESESSION_INVALIDARGS                                                          = 1283,
			D3D12_MESSAGE_ID_CREATESHADERCACHESESSION_DISABLED                                                             = 1284,
			D3D12_MESSAGE_ID_CREATESHADERCACHESESSION_ALREADYOPEN                                                          = 1285,
			D3D12_MESSAGE_ID_SHADERCACHECONTROL_DEVELOPERMODE                                                              = 1286,
			D3D12_MESSAGE_ID_SHADERCACHECONTROL_INVALIDFLAGS                                                               = 1287,
			D3D12_MESSAGE_ID_SHADERCACHECONTROL_STATEALREADYSET                                                            = 1288,
			D3D12_MESSAGE_ID_SHADERCACHECONTROL_IGNOREDFLAG                                                                = 1289,
			D3D12_MESSAGE_ID_SHADERCACHESESSION_STOREVALUE_ALREADYPRESENT                                                  = 1290,
			D3D12_MESSAGE_ID_SHADERCACHESESSION_STOREVALUE_HASHCOLLISION                                                   = 1291,
			D3D12_MESSAGE_ID_SHADERCACHESESSION_STOREVALUE_CACHEFULL                                                       = 1292,
			D3D12_MESSAGE_ID_SHADERCACHESESSION_FINDVALUE_NOTFOUND                                                         = 1293,
			D3D12_MESSAGE_ID_SHADERCACHESESSION_CORRUPT                                                                    = 1294,
			D3D12_MESSAGE_ID_SHADERCACHESESSION_DISABLED                                                                   = 1295,
			D3D12_MESSAGE_ID_OVERSIZED_DISPATCH                                                                            = 1296,
			D3D12_MESSAGE_ID_CREATE_VIDEOENCODER                                                                           = 1297,
			D3D12_MESSAGE_ID_LIVE_VIDEOENCODER                                                                             = 1298,
			D3D12_MESSAGE_ID_DESTROY_VIDEOENCODER                                                                          = 1299,
			D3D12_MESSAGE_ID_CREATE_VIDEOENCODERHEAP                                                                       = 1300,
			D3D12_MESSAGE_ID_LIVE_VIDEOENCODERHEAP                                                                         = 1301,
			D3D12_MESSAGE_ID_DESTROY_VIDEOENCODERHEAP                                                                      = 1302,
			D3D12_MESSAGE_ID_COPYTEXTUREREGION_MISMATCH_ENCODE_REFERENCE_ONLY_FLAG                                         = 1303,
			D3D12_MESSAGE_ID_COPYRESOURCE_MISMATCH_ENCODE_REFERENCE_ONLY_FLAG                                              = 1304,
			D3D12_MESSAGE_ID_ENCODE_FRAME_INVALID_PARAMETERS                                                               = 1305,
			D3D12_MESSAGE_ID_ENCODE_FRAME_UNSUPPORTED_PARAMETERS                                                           = 1306,
			D3D12_MESSAGE_ID_RESOLVE_ENCODER_OUTPUT_METADATA_INVALID_PARAMETERS                                            = 1307,
			D3D12_MESSAGE_ID_RESOLVE_ENCODER_OUTPUT_METADATA_UNSUPPORTED_PARAMETERS                                        = 1308,
			D3D12_MESSAGE_ID_CREATE_VIDEO_ENCODER_INVALID_PARAMETERS                                                       = 1309,
			D3D12_MESSAGE_ID_CREATE_VIDEO_ENCODER_UNSUPPORTED_PARAMETERS                                                   = 1310,
			D3D12_MESSAGE_ID_CREATE_VIDEO_ENCODER_HEAP_INVALID_PARAMETERS                                                  = 1311,
			D3D12_MESSAGE_ID_CREATE_VIDEO_ENCODER_HEAP_UNSUPPORTED_PARAMETERS                                              = 1312,
			D3D12_MESSAGE_ID_CREATECOMMANDLIST_NULL_COMMANDALLOCATOR                                                       = 1313,
			D3D12_MESSAGE_ID_CLEAR_UNORDERED_ACCESS_VIEW_INVALID_DESCRIPTOR_HANDLE                                         = 1314,
			D3D12_MESSAGE_ID_DESCRIPTOR_HEAP_NOT_SHADER_VISIBLE                                                            = 1315,
			D3D12_MESSAGE_ID_CREATEBLENDSTATE_BLENDOP_WARNING                                                              = 1316,
			D3D12_MESSAGE_ID_CREATEBLENDSTATE_BLENDOPALPHA_WARNING                                                         = 1317,
			D3D12_MESSAGE_ID_WRITE_COMBINE_PERFORMANCE_WARNING                                                             = 1318,
			D3D12_MESSAGE_ID_RESOLVE_QUERY_INVALID_QUERY_STATE                                                             = 1319,
			D3D12_MESSAGE_ID_SETPRIVATEDATA_NO_ACCESS                                                                      = 1320,
			D3D12_MESSAGE_ID_COMMAND_LIST_STATIC_DESCRIPTOR_SAMPLER_MODE_MISMATCH                                          = 1321,
			D3D12_MESSAGE_ID_GETCOPYABLEFOOTPRINTS_UNSUPPORTED_BUFFER_WIDTH                                                = 1322,
			D3D12_MESSAGE_ID_CREATEMESHSHADER_TOPOLOGY_MISMATCH                                                            = 1323,
			D3D12_MESSAGE_ID_VRS_SUM_COMBINER_REQUIRES_CAPABILITY                                                          = 1324,
			D3D12_MESSAGE_ID_SETTING_SHADING_RATE_FROM_MS_REQUIRES_CAPABILITY                                              = 1325,
			D3D12_MESSAGE_ID_SHADERCACHESESSION_SHADERCACHEDELETE_NOTSUPPORTED                                             = 1326,
			D3D12_MESSAGE_ID_SHADERCACHECONTROL_SHADERCACHECLEAR_NOTSUPPORTED                                              = 1327,
			D3D12_MESSAGE_ID_CREATERESOURCE_STATE_IGNORED                                                                  = 1328,
			D3D12_MESSAGE_ID_UNUSED_CROSS_EXECUTE_SPLIT_BARRIER                                                            = 1329,
			D3D12_MESSAGE_ID_DEVICE_OPEN_SHARED_HANDLE_ACCESS_DENIED                                                       = 1330,
			D3D12_MESSAGE_ID_INCOMPATIBLE_BARRIER_VALUES                                                                   = 1331,
			D3D12_MESSAGE_ID_INCOMPATIBLE_BARRIER_ACCESS                                                                   = 1332,
			D3D12_MESSAGE_ID_INCOMPATIBLE_BARRIER_SYNC                                                                     = 1333,
			D3D12_MESSAGE_ID_INCOMPATIBLE_BARRIER_LAYOUT                                                                   = 1334,
			D3D12_MESSAGE_ID_INCOMPATIBLE_BARRIER_TYPE                                                                     = 1335,
			D3D12_MESSAGE_ID_OUT_OF_BOUNDS_BARRIER_SUBRESOURCE_RANGE                                                       = 1336,
			D3D12_MESSAGE_ID_INCOMPATIBLE_BARRIER_RESOURCE_DIMENSION                                                       = 1337,
			D3D12_MESSAGE_ID_SET_SCISSOR_RECTS_INVALID_RECT                                                                = 1338,
			D3D12_MESSAGE_ID_SHADING_RATE_SOURCE_REQUIRES_DIMENSION_TEXTURE2D                                              = 1339,
			D3D12_MESSAGE_ID_BUFFER_BARRIER_SUBREGION_OUT_OF_BOUNDS                                                        = 1340,
			D3D12_MESSAGE_ID_UNSUPPORTED_BARRIER_LAYOUT                                                                    = 1341,
			D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALID_PARAMETERS                                                      = 1342,
			D3D12_MESSAGE_ID_ENHANCED_BARRIERS_NOT_SUPPORTED                                                               = 1343,
			D3D12_MESSAGE_ID_CAST_TARGET_TEXEL_SIZE_MISMATCH                                                               = 1344,
			D3D12_MESSAGE_ID_CAST_TO_PLANAR_NOT_SUPORTED                                                                   = 1345,
			D3D12_MESSAGE_ID_LEGACY_BARRIER_VALIDATION_FORCED_ON                                                           = 1346,
			D3D12_MESSAGE_ID_EMPTY_ROOT_DESCRIPTOR_TABLE                                                                   = 1347,
			D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_ELEMENT_OFFSET_UNALIGNED                                                    = 1348,
			D3D12_MESSAGE_ID_ALPHA_BLEND_FACTOR_NOT_SUPPORTED                                                              = 1349,
			D3D12_MESSAGE_ID_D3D12_MESSAGES_END                                                                            = (D3D12_MESSAGE_ID_ALPHA_BLEND_FACTOR_NOT_SUPPORTED + 1)
		};

		struct D3D12_MESSAGE
		{
			D3D12_MESSAGE_CATEGORY Category;
			D3D12_MESSAGE_SEVERITY Severity;
			D3D12_MESSAGE_ID       ID;
			const char*            pDescription;
			SIZE_T                 DescriptionByteLength;
		};

		struct D3D12_INFO_QUEUE_FILTER_DESC
		{
			UINT                    NumCategories;
			D3D12_MESSAGE_CATEGORY* pCategoryList;
			UINT                    NumSeverities;
			D3D12_MESSAGE_SEVERITY* pSeverityList;
			UINT                    NumIDs;
			D3D12_MESSAGE_ID*       pIDList;
		};

		struct D3D12_INFO_QUEUE_FILTER
		{
			D3D12_INFO_QUEUE_FILTER_DESC AllowList;
			D3D12_INFO_QUEUE_FILTER_DESC DenyList;
		};

		static constexpr UINT D3D12_INFO_QUEUE_DEFAULT_MESSAGE_COUNT_LIMIT = 1024;

		MIDL_INTERFACE("0742a90b-c387-483f-b946-30a7e4e61458")
		ID3D12InfoQueue : public IUnknown
		{
		public:
			virtual HRESULT SetMessageCountLimit(std::uint64_t MessageCountLimit) = 0;

			virtual void ClearStoredMessages() = 0;

			virtual HRESULT GetMessage(std::uint64_t MessageIndex, D3D12_MESSAGE * pMessage, SIZE_T * pMessageByteLength) = 0;

			virtual std::uint64_t GetNumMessagesAllowedByStorageFilter()         = 0;
			virtual std::uint64_t GetNumMessagesDeniedByStorageFilter()          = 0;
			virtual std::uint64_t GetNumStoredMessages()                         = 0;
			virtual std::uint64_t GetNumStoredMessagesAllowedByRetrievalFilter() = 0;
			virtual std::uint64_t GetNumMessagesDiscardedByMessageCountLimit()   = 0;

			virtual std::uint64_t GetMessageCountLimit() = 0;

			virtual HRESULT AddStorageFilterEntries(D3D12_INFO_QUEUE_FILTER * pFilter)                      = 0;
			virtual HRESULT GetStorageFilter(D3D12_INFO_QUEUE_FILTER * pFilter, SIZE_T * pFilterByteLength) = 0;

			virtual void ClearStorageFilter() = 0;

			virtual HRESULT PushEmptyStorageFilter()                             = 0;
			virtual HRESULT PushCopyOfStorageFilter()                            = 0;
			virtual HRESULT PushStorageFilter(D3D12_INFO_QUEUE_FILTER * pFilter) = 0;
			virtual void    PopStorageFilter()                                   = 0;
			virtual UINT    GetStorageFilterStackSize()                          = 0;

			virtual HRESULT AddRetrievalFilterEntries(D3D12_INFO_QUEUE_FILTER * pFilter)                      = 0;
			virtual HRESULT GetRetrievalFilter(D3D12_INFO_QUEUE_FILTER * pFilter, SIZE_T * pFilterByteLength) = 0;

			virtual void ClearRetrievalFilter() = 0;

			virtual HRESULT PushEmptyRetrievalFilter()                             = 0;
			virtual HRESULT PushCopyOfRetrievalFilter()                            = 0;
			virtual HRESULT PushRetrievalFilter(D3D12_INFO_QUEUE_FILTER * pFilter) = 0;
			virtual void    PopRetrievalFilter()                                   = 0;

			virtual UINT GetRetrievalFilterStackSize() = 0;

			virtual HRESULT AddMessage(D3D12_MESSAGE_CATEGORY Category, D3D12_MESSAGE_SEVERITY Severity, D3D12_MESSAGE_ID ID, LPCSTR pDescription) = 0;
			virtual HRESULT AddApplicationMessage(D3D12_MESSAGE_SEVERITY Severity, LPCSTR pDescription)                                            = 0;

			virtual HRESULT SetBreakOnCategory(D3D12_MESSAGE_CATEGORY Category, BOOL bEnable) = 0;
			virtual HRESULT SetBreakOnSeverity(D3D12_MESSAGE_SEVERITY Severity, BOOL bEnable) = 0;
			virtual HRESULT SetBreakOnID(D3D12_MESSAGE_ID ID, BOOL bEnable)                   = 0;
			virtual BOOL    GetBreakOnCategory(D3D12_MESSAGE_CATEGORY Category)               = 0;
			virtual BOOL    GetBreakOnSeverity(D3D12_MESSAGE_SEVERITY Severity)               = 0;
			virtual BOOL    GetBreakOnID(D3D12_MESSAGE_ID ID)                                 = 0;

			virtual void SetMuteDebugOutput(BOOL bMute) = 0;
			virtual BOOL GetMuteDebugOutput()           = 0;
		};

		enum D3D12_MESSAGE_CALLBACK_FLAGS
		{
			D3D12_MESSAGE_CALLBACK_FLAG_NONE      = 0,
			D3D12_MESSAGE_CALLBACK_IGNORE_FILTERS = 0x1
		};

		using D3D12MessageFunc = void (*)(D3D12_MESSAGE_CATEGORY Category, D3D12_MESSAGE_SEVERITY Severity, D3D12_MESSAGE_ID ID, LPCSTR pDescription, void* pContext);

		MIDL_INTERFACE("2852dd88-b484-4c0c-b6b1-67168500e600")
		ID3D12InfoQueue1 : public ID3D12InfoQueue
		{
		public:
			virtual HRESULT RegisterMessageCallback(D3D12MessageFunc CallbackFunc, D3D12_MESSAGE_CALLBACK_FLAGS CallbackFilterFlags, void* pContext, DWORD* pCallbackCookie) = 0;

			virtual HRESULT UnregisterMessageCallback(DWORD CallbackCookie) = 0;
		};

		using PFN_D3D12_CREATE_DEVICE = HRESULT (*)(IUnknown*, D3D_FEATURE_LEVEL, const GUID&, void**);
		HRESULT D3D12CreateDevice(IUnknown* pAdapter, D3D_FEATURE_LEVEL MinimumFeatureLevel, const GUID& riid, void** ppDevice);

		using PFN_D3D12_GET_DEBUG_INTERFACE = HRESULT (*)(const GUID&, void**);
		HRESULT D3D12GetDebugInterface(const GUID& riid, void** ppvDebug);

		HRESULT D3D12EnableExperimentalFeatures(UINT NumFeatures, const GUID* pIIDs, void* pConfigurationStructs, UINT* pConfigurationStructSizes);

		static constexpr GUID D3D12ExperimentalShaderModels = { /* 76f5573e-f13a-40f5-b297-81ce9e18933f */
			                                                    0x76f5573e,
			                                                    0xf13a,
			                                                    0x40f5,
			                                                    { 0xb2, 0x97, 0x81, 0xce, 0x9e, 0x18, 0x93, 0x3f }
		};

		static constexpr GUID D3D12TiledResourceTier4 = { /* c9c4725f-a81a-4f56-8c5b-c51039d694fb */
			                                              0xc9c4725f,
			                                              0xa81a,
			                                              0x4f56,
			                                              { 0x8c, 0x5b, 0xc5, 0x10, 0x39, 0xd6, 0x94, 0xfb }
		};

		static constexpr GUID D3D12MetaCommand = { /* C734C97E-8077-48C8-9FDC-D9D1DD31DD77 */
			                                       0xc734c97e,
			                                       0x8077,
			                                       0x48c8,
			                                       { 0x9f, 0xdc, 0xd9, 0xd1, 0xdd, 0x31, 0xdd, 0x77 }
		};

		using PFN_D3D12_GET_INTERFACE = HRESULT (*)(const GUID&, const GUID&, void**);
		HRESULT D3D12GetInterface(const GUID& rclsid, const GUID& riid, void** ppvDebug);

		MIDL_INTERFACE("e9eb5314-33aa-42b2-a718-d77f58b1f1c7")
		ID3D12SDKConfiguration : public IUnknown
		{
		public:
			virtual HRESULT SetSDKVersion(UINT SDKVersion, LPCSTR SDKPath) = 0;
		};

		enum D3D12_AXIS_SHADING_RATE
		{
			D3D12_AXIS_SHADING_RATE_1X = 0,
			D3D12_AXIS_SHADING_RATE_2X = 0x1,
			D3D12_AXIS_SHADING_RATE_4X = 0x2
		};

		static constexpr UINT D3D12_SHADING_RATE_X_AXIS_SHIFT = 2;
		static constexpr UINT D3D12_SHADING_RATE_VALID_MASK   = 3;
		static constexpr UINT D3D12_MAKE_COARSE_SHADING_RATE(UINT x, UINT y)
		{
			return x << D3D12_SHADING_RATE_X_AXIS_SHIFT | y;
		}
		static constexpr UINT D3D12_GET_COARSE_SHADING_RATE_X_AXIS(UINT x)
		{
			return (x >> D3D12_SHADING_RATE_X_AXIS_SHIFT) & D3D12_SHADING_RATE_VALID_MASK;
		}
		static constexpr UINT D3D12_GET_COARSE_SHADING_RATE_Y_AXIS(UINT y)
		{
			return y & D3D12_SHADING_RATE_VALID_MASK;
		}

		enum D3D12_SHADING_RATE
		{
			D3D12_SHADING_RATE_1X1 = 0,
			D3D12_SHADING_RATE_1X2 = 0x1,
			D3D12_SHADING_RATE_2X1 = 0x4,
			D3D12_SHADING_RATE_2X2 = 0x5,
			D3D12_SHADING_RATE_2X4 = 0x6,
			D3D12_SHADING_RATE_4X2 = 0x9,
			D3D12_SHADING_RATE_4X4 = 0xa
		};

		enum D3D12_SHADING_RATE_COMBINER
		{
			D3D12_SHADING_RATE_COMBINER_PASSTHROUGH = 0,
			D3D12_SHADING_RATE_COMBINER_OVERRIDE    = 1,
			D3D12_SHADING_RATE_COMBINER_MIN         = 2,
			D3D12_SHADING_RATE_COMBINER_MAX         = 3,
			D3D12_SHADING_RATE_COMBINER_SUM         = 4
		};

		MIDL_INTERFACE("55050859-4024-474c-87f5-6472eaee44ea")
		ID3D12GraphicsCommandList5 : public ID3D12GraphicsCommandList4
		{
		public:
			virtual void RSSetShadingRate(D3D12_SHADING_RATE baseShadingRate, const D3D12_SHADING_RATE_COMBINER* combiners) = 0;

			virtual void RSSetShadingRateImage(ID3D12Resource * shadingRateImage) = 0;
		};

		struct D3D12_DISPATCH_MESH_ARGUMENTS
		{
			UINT ThreadGroupCountX;
			UINT ThreadGroupCountY;
			UINT ThreadGroupCountZ;
		};

		MIDL_INTERFACE("c3827890-e548-4cfa-96cf-5689a9370f80")
		ID3D12GraphicsCommandList6 : public ID3D12GraphicsCommandList5
		{
		public:
			virtual void DispatchMesh(UINT ThreadGroupCountX, UINT ThreadGroupCountY, UINT ThreadGroupCountZ) = 0;
		};

		MIDL_INTERFACE("dd171223-8b61-4769-90e3-160ccde4e2c1")
		ID3D12GraphicsCommandList7 : public ID3D12GraphicsCommandList6
		{
		public:
			virtual void Barrier(std::uint32_t NumBarrierGroups, const D3D12_BARRIER_GROUP* pBarrierGroups) = 0;
		};
	}
} // namespace Brainfryer::DX12